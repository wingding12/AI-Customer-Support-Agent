module.exports = {

"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __assign = this && this.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TextApiResponse = exports.BlobApiResponse = exports.VoidApiResponse = exports.JSONApiResponse = exports.canConsumeForm = exports.mapValues = exports.querystring = exports.exists = exports.COLLECTION_FORMATS = exports.RequiredError = exports.FetchError = exports.ResponseError = exports.BaseAPI = exports.DefaultConfig = exports.Configuration = exports.BASE_PATH = void 0;
exports.BASE_PATH = "https://api.pinecone.io".replace(/\/+$/, "");
var Configuration = function() {
    function Configuration(configuration) {
        if (configuration === void 0) {
            configuration = {};
        }
        this.configuration = configuration;
    }
    Object.defineProperty(Configuration.prototype, "config", {
        set: function(configuration) {
            this.configuration = configuration;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Configuration.prototype, "basePath", {
        get: function() {
            return this.configuration.basePath != null ? this.configuration.basePath : exports.BASE_PATH;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Configuration.prototype, "fetchApi", {
        get: function() {
            return this.configuration.fetchApi;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Configuration.prototype, "middleware", {
        get: function() {
            return this.configuration.middleware || [];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Configuration.prototype, "queryParamsStringify", {
        get: function() {
            return this.configuration.queryParamsStringify || querystring;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Configuration.prototype, "username", {
        get: function() {
            return this.configuration.username;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Configuration.prototype, "password", {
        get: function() {
            return this.configuration.password;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Configuration.prototype, "apiKey", {
        get: function() {
            var apiKey = this.configuration.apiKey;
            if (apiKey) {
                return typeof apiKey === 'function' ? apiKey : function() {
                    return apiKey;
                };
            }
            return undefined;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Configuration.prototype, "accessToken", {
        get: function() {
            var _this = this;
            var accessToken = this.configuration.accessToken;
            if (accessToken) {
                return typeof accessToken === 'function' ? accessToken : function() {
                    return __awaiter(_this, void 0, void 0, function() {
                        return __generator(this, function(_a) {
                            return [
                                2 /*return*/ ,
                                accessToken
                            ];
                        });
                    });
                };
            }
            return undefined;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Configuration.prototype, "headers", {
        get: function() {
            return this.configuration.headers;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Configuration.prototype, "credentials", {
        get: function() {
            return this.configuration.credentials;
        },
        enumerable: false,
        configurable: true
    });
    return Configuration;
}();
exports.Configuration = Configuration;
exports.DefaultConfig = new Configuration();
/**
 * This is the base class for all generated API classes.
 */ var BaseAPI = function() {
    function BaseAPI(configuration) {
        if (configuration === void 0) {
            configuration = exports.DefaultConfig;
        }
        var _this = this;
        this.configuration = configuration;
        this.fetchApi = function(url, init) {
            return __awaiter(_this, void 0, void 0, function() {
                var fetchParams, _i, _a, middleware, response, e_1, _b, _c, middleware, _d, _e, middleware;
                return __generator(this, function(_f) {
                    switch(_f.label){
                        case 0:
                            fetchParams = {
                                url: url,
                                init: init
                            };
                            _i = 0, _a = this.middleware;
                            _f.label = 1;
                        case 1:
                            if (!(_i < _a.length)) return [
                                3 /*break*/ ,
                                4
                            ];
                            middleware = _a[_i];
                            if (!middleware.pre) return [
                                3 /*break*/ ,
                                3
                            ];
                            return [
                                4 /*yield*/ ,
                                middleware.pre(__assign({
                                    fetch: this.fetchApi
                                }, fetchParams))
                            ];
                        case 2:
                            fetchParams = _f.sent() || fetchParams;
                            _f.label = 3;
                        case 3:
                            _i++;
                            return [
                                3 /*break*/ ,
                                1
                            ];
                        case 4:
                            response = undefined;
                            _f.label = 5;
                        case 5:
                            _f.trys.push([
                                5,
                                7,
                                ,
                                12
                            ]);
                            return [
                                4 /*yield*/ ,
                                (this.configuration.fetchApi || fetch)(fetchParams.url, fetchParams.init)
                            ];
                        case 6:
                            response = _f.sent();
                            return [
                                3 /*break*/ ,
                                12
                            ];
                        case 7:
                            e_1 = _f.sent();
                            _b = 0, _c = this.middleware;
                            _f.label = 8;
                        case 8:
                            if (!(_b < _c.length)) return [
                                3 /*break*/ ,
                                11
                            ];
                            middleware = _c[_b];
                            if (!middleware.onError) return [
                                3 /*break*/ ,
                                10
                            ];
                            return [
                                4 /*yield*/ ,
                                middleware.onError({
                                    fetch: this.fetchApi,
                                    url: fetchParams.url,
                                    init: fetchParams.init,
                                    error: e_1,
                                    response: response ? response.clone() : undefined
                                })
                            ];
                        case 9:
                            response = _f.sent() || response;
                            _f.label = 10;
                        case 10:
                            _b++;
                            return [
                                3 /*break*/ ,
                                8
                            ];
                        case 11:
                            if (response === undefined) {
                                if (e_1 instanceof Error) {
                                    throw new FetchError(e_1, 'The request failed and the interceptors did not return an alternative response');
                                } else {
                                    throw e_1;
                                }
                            }
                            return [
                                3 /*break*/ ,
                                12
                            ];
                        case 12:
                            _d = 0, _e = this.middleware;
                            _f.label = 13;
                        case 13:
                            if (!(_d < _e.length)) return [
                                3 /*break*/ ,
                                16
                            ];
                            middleware = _e[_d];
                            if (!middleware.post) return [
                                3 /*break*/ ,
                                15
                            ];
                            return [
                                4 /*yield*/ ,
                                middleware.post({
                                    fetch: this.fetchApi,
                                    url: fetchParams.url,
                                    init: fetchParams.init,
                                    response: response.clone()
                                })
                            ];
                        case 14:
                            response = _f.sent() || response;
                            _f.label = 15;
                        case 15:
                            _d++;
                            return [
                                3 /*break*/ ,
                                13
                            ];
                        case 16:
                            return [
                                2 /*return*/ ,
                                response
                            ];
                    }
                });
            });
        };
        this.middleware = configuration.middleware;
    }
    BaseAPI.prototype.withMiddleware = function() {
        var _a;
        var middlewares = [];
        for(var _i = 0; _i < arguments.length; _i++){
            middlewares[_i] = arguments[_i];
        }
        var next = this.clone();
        next.middleware = (_a = next.middleware).concat.apply(_a, middlewares);
        return next;
    };
    BaseAPI.prototype.withPreMiddleware = function() {
        var preMiddlewares = [];
        for(var _i = 0; _i < arguments.length; _i++){
            preMiddlewares[_i] = arguments[_i];
        }
        var middlewares = preMiddlewares.map(function(pre) {
            return {
                pre: pre
            };
        });
        return this.withMiddleware.apply(this, middlewares);
    };
    BaseAPI.prototype.withPostMiddleware = function() {
        var postMiddlewares = [];
        for(var _i = 0; _i < arguments.length; _i++){
            postMiddlewares[_i] = arguments[_i];
        }
        var middlewares = postMiddlewares.map(function(post) {
            return {
                post: post
            };
        });
        return this.withMiddleware.apply(this, middlewares);
    };
    /**
     * Check if the given MIME is a JSON MIME.
     * JSON MIME examples:
     *   application/json
     *   application/json; charset=UTF8
     *   APPLICATION/JSON
     *   application/vnd.company+json
     * @param mime - MIME (Multipurpose Internet Mail Extensions)
     * @return True if the given MIME is JSON, false otherwise.
     */ BaseAPI.prototype.isJsonMime = function(mime) {
        if (!mime) {
            return false;
        }
        return BaseAPI.jsonRegex.test(mime);
    };
    BaseAPI.prototype.request = function(context, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var _a, url, init, response;
            return __generator(this, function(_b) {
                switch(_b.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.createFetchParams(context, initOverrides)
                        ];
                    case 1:
                        _a = _b.sent(), url = _a.url, init = _a.init;
                        return [
                            4 /*yield*/ ,
                            this.fetchApi(url, init)
                        ];
                    case 2:
                        response = _b.sent();
                        if (response && response.status >= 200 && response.status < 300) {
                            return [
                                2 /*return*/ ,
                                response
                            ];
                        }
                        throw new ResponseError(response, 'Response returned an error code');
                }
            });
        });
    };
    BaseAPI.prototype.createFetchParams = function(context, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var url, headers, initOverrideFn, initParams, overriddenInit, _a, body, init;
            var _this = this;
            return __generator(this, function(_b) {
                switch(_b.label){
                    case 0:
                        url = this.configuration.basePath + context.path;
                        if (context.query !== undefined && Object.keys(context.query).length !== 0) {
                            // only add the querystring to the URL if there are query parameters.
                            // this is done to avoid urls ending with a "?" character which buggy webservers
                            // do not handle correctly sometimes.
                            url += '?' + this.configuration.queryParamsStringify(context.query);
                        }
                        headers = Object.assign({}, this.configuration.headers, context.headers);
                        Object.keys(headers).forEach(function(key) {
                            return headers[key] === undefined ? delete headers[key] : {};
                        });
                        initOverrideFn = typeof initOverrides === "function" ? initOverrides : function() {
                            return __awaiter(_this, void 0, void 0, function() {
                                return __generator(this, function(_a) {
                                    return [
                                        2 /*return*/ ,
                                        initOverrides
                                    ];
                                });
                            });
                        };
                        initParams = {
                            method: context.method,
                            headers: headers,
                            body: context.body,
                            credentials: this.configuration.credentials
                        };
                        _a = [
                            __assign({}, initParams)
                        ];
                        return [
                            4 /*yield*/ ,
                            initOverrideFn({
                                init: initParams,
                                context: context
                            })
                        ];
                    case 1:
                        overriddenInit = __assign.apply(void 0, _a.concat([
                            _b.sent()
                        ]));
                        if (isFormData(overriddenInit.body) || overriddenInit.body instanceof URLSearchParams || isBlob(overriddenInit.body)) {
                            body = overriddenInit.body;
                        } else if (this.isJsonMime(headers['Content-Type'])) {
                            body = JSON.stringify(overriddenInit.body);
                        } else {
                            body = overriddenInit.body;
                        }
                        init = __assign(__assign({}, overriddenInit), {
                            body: body
                        });
                        return [
                            2 /*return*/ ,
                            {
                                url: url,
                                init: init
                            }
                        ];
                }
            });
        });
    };
    /**
     * Create a shallow clone of `this` by constructing a new instance
     * and then shallow cloning data members.
     */ BaseAPI.prototype.clone = function() {
        var constructor = this.constructor;
        var next = new constructor(this.configuration);
        next.middleware = this.middleware.slice();
        return next;
    };
    BaseAPI.jsonRegex = new RegExp('^(:?application\/json|[^;/ \t]+\/[^;/ \t]+[+]json)[ \t]*(:?;.*)?$', 'i');
    return BaseAPI;
}();
exports.BaseAPI = BaseAPI;
;
function isBlob(value) {
    return typeof Blob !== 'undefined' && value instanceof Blob;
}
function isFormData(value) {
    return typeof FormData !== "undefined" && value instanceof FormData;
}
var ResponseError = function(_super) {
    __extends(ResponseError, _super);
    function ResponseError(response, msg) {
        var _this = _super.call(this, msg) || this;
        _this.response = response;
        _this.name = "ResponseError";
        return _this;
    }
    return ResponseError;
}(Error);
exports.ResponseError = ResponseError;
var FetchError = function(_super) {
    __extends(FetchError, _super);
    function FetchError(cause, msg) {
        var _this = _super.call(this, msg) || this;
        _this.cause = cause;
        _this.name = "FetchError";
        return _this;
    }
    return FetchError;
}(Error);
exports.FetchError = FetchError;
var RequiredError = function(_super) {
    __extends(RequiredError, _super);
    function RequiredError(field, msg) {
        var _this = _super.call(this, msg) || this;
        _this.field = field;
        _this.name = "RequiredError";
        return _this;
    }
    return RequiredError;
}(Error);
exports.RequiredError = RequiredError;
exports.COLLECTION_FORMATS = {
    csv: ",",
    ssv: " ",
    tsv: "\t",
    pipes: "|"
};
function exists(json, key) {
    var value = json[key];
    return value !== null && value !== undefined;
}
exports.exists = exists;
function querystring(params, prefix) {
    if (prefix === void 0) {
        prefix = '';
    }
    return Object.keys(params).map(function(key) {
        return querystringSingleKey(key, params[key], prefix);
    }).filter(function(part) {
        return part.length > 0;
    }).join('&');
}
exports.querystring = querystring;
function querystringSingleKey(key, value, keyPrefix) {
    if (keyPrefix === void 0) {
        keyPrefix = '';
    }
    var fullKey = keyPrefix + (keyPrefix.length ? "[".concat(key, "]") : key);
    if (value instanceof Array) {
        var multiValue = value.map(function(singleValue) {
            return encodeURIComponent(String(singleValue));
        }).join("&".concat(encodeURIComponent(fullKey), "="));
        return "".concat(encodeURIComponent(fullKey), "=").concat(multiValue);
    }
    if (value instanceof Set) {
        var valueAsArray = Array.from(value);
        return querystringSingleKey(key, valueAsArray, keyPrefix);
    }
    if (value instanceof Date) {
        return "".concat(encodeURIComponent(fullKey), "=").concat(encodeURIComponent(value.toISOString()));
    }
    if (value instanceof Object) {
        return querystring(value, fullKey);
    }
    return "".concat(encodeURIComponent(fullKey), "=").concat(encodeURIComponent(String(value)));
}
function mapValues(data, fn) {
    return Object.keys(data).reduce(function(acc, key) {
        var _a;
        return __assign(__assign({}, acc), (_a = {}, _a[key] = fn(data[key]), _a));
    }, {});
}
exports.mapValues = mapValues;
function canConsumeForm(consumes) {
    for(var _i = 0, consumes_1 = consumes; _i < consumes_1.length; _i++){
        var consume = consumes_1[_i];
        if ('multipart/form-data' === consume.contentType) {
            return true;
        }
    }
    return false;
}
exports.canConsumeForm = canConsumeForm;
var JSONApiResponse = function() {
    function JSONApiResponse(raw, transformer) {
        if (transformer === void 0) {
            transformer = function(jsonValue) {
                return jsonValue;
            };
        }
        this.raw = raw;
        this.transformer = transformer;
    }
    JSONApiResponse.prototype.value = function() {
        return __awaiter(this, void 0, void 0, function() {
            var _a;
            return __generator(this, function(_b) {
                switch(_b.label){
                    case 0:
                        _a = this.transformer;
                        return [
                            4 /*yield*/ ,
                            this.raw.json()
                        ];
                    case 1:
                        return [
                            2 /*return*/ ,
                            _a.apply(this, [
                                _b.sent()
                            ])
                        ];
                }
            });
        });
    };
    return JSONApiResponse;
}();
exports.JSONApiResponse = JSONApiResponse;
var VoidApiResponse = function() {
    function VoidApiResponse(raw) {
        this.raw = raw;
    }
    VoidApiResponse.prototype.value = function() {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                return [
                    2 /*return*/ ,
                    undefined
                ];
            });
        });
    };
    return VoidApiResponse;
}();
exports.VoidApiResponse = VoidApiResponse;
var BlobApiResponse = function() {
    function BlobApiResponse(raw) {
        this.raw = raw;
    }
    BlobApiResponse.prototype.value = function() {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.raw.blob()
                        ];
                    case 1:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    ;
    return BlobApiResponse;
}();
exports.BlobApiResponse = BlobApiResponse;
var TextApiResponse = function() {
    function TextApiResponse(raw) {
        this.raw = raw;
    }
    TextApiResponse.prototype.value = function() {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.raw.text()
                        ];
                    case 1:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    ;
    return TextApiResponse;
}();
exports.TextApiResponse = TextApiResponse; //# sourceMappingURL=runtime.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/CollectionModel.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CollectionModelToJSON = exports.CollectionModelFromJSONTyped = exports.CollectionModelFromJSON = exports.instanceOfCollectionModel = exports.CollectionModelStatusEnum = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
/**
 * @export
 */ exports.CollectionModelStatusEnum = {
    Initializing: 'Initializing',
    Ready: 'Ready',
    Terminating: 'Terminating'
};
/**
 * Check if a given object implements the CollectionModel interface.
 */ function instanceOfCollectionModel(value) {
    var isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "environment" in value;
    return isInstance;
}
exports.instanceOfCollectionModel = instanceOfCollectionModel;
function CollectionModelFromJSON(json) {
    return CollectionModelFromJSONTyped(json, false);
}
exports.CollectionModelFromJSON = CollectionModelFromJSON;
function CollectionModelFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'name': json['name'],
        'size': !(0, runtime_1.exists)(json, 'size') ? undefined : json['size'],
        'status': json['status'],
        'dimension': !(0, runtime_1.exists)(json, 'dimension') ? undefined : json['dimension'],
        'vectorCount': !(0, runtime_1.exists)(json, 'vector_count') ? undefined : json['vector_count'],
        'environment': json['environment']
    };
}
exports.CollectionModelFromJSONTyped = CollectionModelFromJSONTyped;
function CollectionModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'size': value.size,
        'status': value.status,
        'dimension': value.dimension,
        'vector_count': value.vectorCount,
        'environment': value.environment
    };
}
exports.CollectionModelToJSON = CollectionModelToJSON; //# sourceMappingURL=CollectionModel.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/CollectionList.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CollectionListToJSON = exports.CollectionListFromJSONTyped = exports.CollectionListFromJSON = exports.instanceOfCollectionList = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
var CollectionModel_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/CollectionModel.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the CollectionList interface.
 */ function instanceOfCollectionList(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfCollectionList = instanceOfCollectionList;
function CollectionListFromJSON(json) {
    return CollectionListFromJSONTyped(json, false);
}
exports.CollectionListFromJSON = CollectionListFromJSON;
function CollectionListFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'collections': !(0, runtime_1.exists)(json, 'collections') ? undefined : json['collections'].map(CollectionModel_1.CollectionModelFromJSON)
    };
}
exports.CollectionListFromJSONTyped = CollectionListFromJSONTyped;
function CollectionListToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'collections': value.collections === undefined ? undefined : value.collections.map(CollectionModel_1.CollectionModelToJSON)
    };
}
exports.CollectionListToJSON = CollectionListToJSON; //# sourceMappingURL=CollectionList.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ConfigureIndexRequestSpecPod.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConfigureIndexRequestSpecPodToJSON = exports.ConfigureIndexRequestSpecPodFromJSONTyped = exports.ConfigureIndexRequestSpecPodFromJSON = exports.instanceOfConfigureIndexRequestSpecPod = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the ConfigureIndexRequestSpecPod interface.
 */ function instanceOfConfigureIndexRequestSpecPod(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfConfigureIndexRequestSpecPod = instanceOfConfigureIndexRequestSpecPod;
function ConfigureIndexRequestSpecPodFromJSON(json) {
    return ConfigureIndexRequestSpecPodFromJSONTyped(json, false);
}
exports.ConfigureIndexRequestSpecPodFromJSON = ConfigureIndexRequestSpecPodFromJSON;
function ConfigureIndexRequestSpecPodFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'replicas': !(0, runtime_1.exists)(json, 'replicas') ? undefined : json['replicas'],
        'podType': !(0, runtime_1.exists)(json, 'pod_type') ? undefined : json['pod_type']
    };
}
exports.ConfigureIndexRequestSpecPodFromJSONTyped = ConfigureIndexRequestSpecPodFromJSONTyped;
function ConfigureIndexRequestSpecPodToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'replicas': value.replicas,
        'pod_type': value.podType
    };
}
exports.ConfigureIndexRequestSpecPodToJSON = ConfigureIndexRequestSpecPodToJSON; //# sourceMappingURL=ConfigureIndexRequestSpecPod.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ConfigureIndexRequestSpec.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConfigureIndexRequestSpecToJSON = exports.ConfigureIndexRequestSpecFromJSONTyped = exports.ConfigureIndexRequestSpecFromJSON = exports.instanceOfConfigureIndexRequestSpec = void 0;
var ConfigureIndexRequestSpecPod_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ConfigureIndexRequestSpecPod.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the ConfigureIndexRequestSpec interface.
 */ function instanceOfConfigureIndexRequestSpec(value) {
    var isInstance = true;
    isInstance = isInstance && "pod" in value;
    return isInstance;
}
exports.instanceOfConfigureIndexRequestSpec = instanceOfConfigureIndexRequestSpec;
function ConfigureIndexRequestSpecFromJSON(json) {
    return ConfigureIndexRequestSpecFromJSONTyped(json, false);
}
exports.ConfigureIndexRequestSpecFromJSON = ConfigureIndexRequestSpecFromJSON;
function ConfigureIndexRequestSpecFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'pod': (0, ConfigureIndexRequestSpecPod_1.ConfigureIndexRequestSpecPodFromJSON)(json['pod'])
    };
}
exports.ConfigureIndexRequestSpecFromJSONTyped = ConfigureIndexRequestSpecFromJSONTyped;
function ConfigureIndexRequestSpecToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'pod': (0, ConfigureIndexRequestSpecPod_1.ConfigureIndexRequestSpecPodToJSON)(value.pod)
    };
}
exports.ConfigureIndexRequestSpecToJSON = ConfigureIndexRequestSpecToJSON; //# sourceMappingURL=ConfigureIndexRequestSpec.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ConfigureIndexRequest.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConfigureIndexRequestToJSON = exports.ConfigureIndexRequestFromJSONTyped = exports.ConfigureIndexRequestFromJSON = exports.instanceOfConfigureIndexRequest = void 0;
var ConfigureIndexRequestSpec_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ConfigureIndexRequestSpec.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the ConfigureIndexRequest interface.
 */ function instanceOfConfigureIndexRequest(value) {
    var isInstance = true;
    isInstance = isInstance && "spec" in value;
    return isInstance;
}
exports.instanceOfConfigureIndexRequest = instanceOfConfigureIndexRequest;
function ConfigureIndexRequestFromJSON(json) {
    return ConfigureIndexRequestFromJSONTyped(json, false);
}
exports.ConfigureIndexRequestFromJSON = ConfigureIndexRequestFromJSON;
function ConfigureIndexRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'spec': (0, ConfigureIndexRequestSpec_1.ConfigureIndexRequestSpecFromJSON)(json['spec'])
    };
}
exports.ConfigureIndexRequestFromJSONTyped = ConfigureIndexRequestFromJSONTyped;
function ConfigureIndexRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'spec': (0, ConfigureIndexRequestSpec_1.ConfigureIndexRequestSpecToJSON)(value.spec)
    };
}
exports.ConfigureIndexRequestToJSON = ConfigureIndexRequestToJSON; //# sourceMappingURL=ConfigureIndexRequest.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/CreateCollectionRequest.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateCollectionRequestToJSON = exports.CreateCollectionRequestFromJSONTyped = exports.CreateCollectionRequestFromJSON = exports.instanceOfCreateCollectionRequest = void 0;
/**
 * Check if a given object implements the CreateCollectionRequest interface.
 */ function instanceOfCreateCollectionRequest(value) {
    var isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "source" in value;
    return isInstance;
}
exports.instanceOfCreateCollectionRequest = instanceOfCreateCollectionRequest;
function CreateCollectionRequestFromJSON(json) {
    return CreateCollectionRequestFromJSONTyped(json, false);
}
exports.CreateCollectionRequestFromJSON = CreateCollectionRequestFromJSON;
function CreateCollectionRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'name': json['name'],
        'source': json['source']
    };
}
exports.CreateCollectionRequestFromJSONTyped = CreateCollectionRequestFromJSONTyped;
function CreateCollectionRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'source': value.source
    };
}
exports.CreateCollectionRequestToJSON = CreateCollectionRequestToJSON; //# sourceMappingURL=CreateCollectionRequest.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/CreateIndexRequestSpecPodMetadataConfig.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateIndexRequestSpecPodMetadataConfigToJSON = exports.CreateIndexRequestSpecPodMetadataConfigFromJSONTyped = exports.CreateIndexRequestSpecPodMetadataConfigFromJSON = exports.instanceOfCreateIndexRequestSpecPodMetadataConfig = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the CreateIndexRequestSpecPodMetadataConfig interface.
 */ function instanceOfCreateIndexRequestSpecPodMetadataConfig(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfCreateIndexRequestSpecPodMetadataConfig = instanceOfCreateIndexRequestSpecPodMetadataConfig;
function CreateIndexRequestSpecPodMetadataConfigFromJSON(json) {
    return CreateIndexRequestSpecPodMetadataConfigFromJSONTyped(json, false);
}
exports.CreateIndexRequestSpecPodMetadataConfigFromJSON = CreateIndexRequestSpecPodMetadataConfigFromJSON;
function CreateIndexRequestSpecPodMetadataConfigFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'indexed': !(0, runtime_1.exists)(json, 'indexed') ? undefined : json['indexed']
    };
}
exports.CreateIndexRequestSpecPodMetadataConfigFromJSONTyped = CreateIndexRequestSpecPodMetadataConfigFromJSONTyped;
function CreateIndexRequestSpecPodMetadataConfigToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'indexed': value.indexed
    };
}
exports.CreateIndexRequestSpecPodMetadataConfigToJSON = CreateIndexRequestSpecPodMetadataConfigToJSON; //# sourceMappingURL=CreateIndexRequestSpecPodMetadataConfig.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/CreateIndexRequestSpecPod.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateIndexRequestSpecPodToJSON = exports.CreateIndexRequestSpecPodFromJSONTyped = exports.CreateIndexRequestSpecPodFromJSON = exports.instanceOfCreateIndexRequestSpecPod = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
var CreateIndexRequestSpecPodMetadataConfig_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/CreateIndexRequestSpecPodMetadataConfig.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the CreateIndexRequestSpecPod interface.
 */ function instanceOfCreateIndexRequestSpecPod(value) {
    var isInstance = true;
    isInstance = isInstance && "environment" in value;
    isInstance = isInstance && "podType" in value;
    return isInstance;
}
exports.instanceOfCreateIndexRequestSpecPod = instanceOfCreateIndexRequestSpecPod;
function CreateIndexRequestSpecPodFromJSON(json) {
    return CreateIndexRequestSpecPodFromJSONTyped(json, false);
}
exports.CreateIndexRequestSpecPodFromJSON = CreateIndexRequestSpecPodFromJSON;
function CreateIndexRequestSpecPodFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'environment': json['environment'],
        'replicas': !(0, runtime_1.exists)(json, 'replicas') ? undefined : json['replicas'],
        'podType': json['pod_type'],
        'pods': !(0, runtime_1.exists)(json, 'pods') ? undefined : json['pods'],
        'shards': !(0, runtime_1.exists)(json, 'shards') ? undefined : json['shards'],
        'metadataConfig': !(0, runtime_1.exists)(json, 'metadata_config') ? undefined : (0, CreateIndexRequestSpecPodMetadataConfig_1.CreateIndexRequestSpecPodMetadataConfigFromJSON)(json['metadata_config']),
        'sourceCollection': !(0, runtime_1.exists)(json, 'source_collection') ? undefined : json['source_collection']
    };
}
exports.CreateIndexRequestSpecPodFromJSONTyped = CreateIndexRequestSpecPodFromJSONTyped;
function CreateIndexRequestSpecPodToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'environment': value.environment,
        'replicas': value.replicas,
        'pod_type': value.podType,
        'pods': value.pods,
        'shards': value.shards,
        'metadata_config': (0, CreateIndexRequestSpecPodMetadataConfig_1.CreateIndexRequestSpecPodMetadataConfigToJSON)(value.metadataConfig),
        'source_collection': value.sourceCollection
    };
}
exports.CreateIndexRequestSpecPodToJSON = CreateIndexRequestSpecPodToJSON; //# sourceMappingURL=CreateIndexRequestSpecPod.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ServerlessSpec.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ServerlessSpecToJSON = exports.ServerlessSpecFromJSONTyped = exports.ServerlessSpecFromJSON = exports.instanceOfServerlessSpec = exports.ServerlessSpecCloudEnum = void 0;
/**
 * @export
 */ exports.ServerlessSpecCloudEnum = {
    Gcp: 'gcp',
    Aws: 'aws',
    Azure: 'azure'
};
/**
 * Check if a given object implements the ServerlessSpec interface.
 */ function instanceOfServerlessSpec(value) {
    var isInstance = true;
    isInstance = isInstance && "cloud" in value;
    isInstance = isInstance && "region" in value;
    return isInstance;
}
exports.instanceOfServerlessSpec = instanceOfServerlessSpec;
function ServerlessSpecFromJSON(json) {
    return ServerlessSpecFromJSONTyped(json, false);
}
exports.ServerlessSpecFromJSON = ServerlessSpecFromJSON;
function ServerlessSpecFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'cloud': json['cloud'],
        'region': json['region']
    };
}
exports.ServerlessSpecFromJSONTyped = ServerlessSpecFromJSONTyped;
function ServerlessSpecToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'cloud': value.cloud,
        'region': value.region
    };
}
exports.ServerlessSpecToJSON = ServerlessSpecToJSON; //# sourceMappingURL=ServerlessSpec.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/CreateIndexRequestSpec.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateIndexRequestSpecToJSON = exports.CreateIndexRequestSpecFromJSONTyped = exports.CreateIndexRequestSpecFromJSON = exports.instanceOfCreateIndexRequestSpec = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
var CreateIndexRequestSpecPod_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/CreateIndexRequestSpecPod.js [app-ssr] (ecmascript)");
var ServerlessSpec_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ServerlessSpec.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the CreateIndexRequestSpec interface.
 */ function instanceOfCreateIndexRequestSpec(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfCreateIndexRequestSpec = instanceOfCreateIndexRequestSpec;
function CreateIndexRequestSpecFromJSON(json) {
    return CreateIndexRequestSpecFromJSONTyped(json, false);
}
exports.CreateIndexRequestSpecFromJSON = CreateIndexRequestSpecFromJSON;
function CreateIndexRequestSpecFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'serverless': !(0, runtime_1.exists)(json, 'serverless') ? undefined : (0, ServerlessSpec_1.ServerlessSpecFromJSON)(json['serverless']),
        'pod': !(0, runtime_1.exists)(json, 'pod') ? undefined : (0, CreateIndexRequestSpecPod_1.CreateIndexRequestSpecPodFromJSON)(json['pod'])
    };
}
exports.CreateIndexRequestSpecFromJSONTyped = CreateIndexRequestSpecFromJSONTyped;
function CreateIndexRequestSpecToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'serverless': (0, ServerlessSpec_1.ServerlessSpecToJSON)(value.serverless),
        'pod': (0, CreateIndexRequestSpecPod_1.CreateIndexRequestSpecPodToJSON)(value.pod)
    };
}
exports.CreateIndexRequestSpecToJSON = CreateIndexRequestSpecToJSON; //# sourceMappingURL=CreateIndexRequestSpec.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/CreateIndexRequest.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CreateIndexRequestToJSON = exports.CreateIndexRequestFromJSONTyped = exports.CreateIndexRequestFromJSON = exports.instanceOfCreateIndexRequest = exports.CreateIndexRequestMetricEnum = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
var CreateIndexRequestSpec_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/CreateIndexRequestSpec.js [app-ssr] (ecmascript)");
/**
 * @export
 */ exports.CreateIndexRequestMetricEnum = {
    Cosine: 'cosine',
    Euclidean: 'euclidean',
    Dotproduct: 'dotproduct'
};
/**
 * Check if a given object implements the CreateIndexRequest interface.
 */ function instanceOfCreateIndexRequest(value) {
    var isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "dimension" in value;
    isInstance = isInstance && "spec" in value;
    return isInstance;
}
exports.instanceOfCreateIndexRequest = instanceOfCreateIndexRequest;
function CreateIndexRequestFromJSON(json) {
    return CreateIndexRequestFromJSONTyped(json, false);
}
exports.CreateIndexRequestFromJSON = CreateIndexRequestFromJSON;
function CreateIndexRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'name': json['name'],
        'dimension': json['dimension'],
        'metric': !(0, runtime_1.exists)(json, 'metric') ? undefined : json['metric'],
        'spec': (0, CreateIndexRequestSpec_1.CreateIndexRequestSpecFromJSON)(json['spec'])
    };
}
exports.CreateIndexRequestFromJSONTyped = CreateIndexRequestFromJSONTyped;
function CreateIndexRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'dimension': value.dimension,
        'metric': value.metric,
        'spec': (0, CreateIndexRequestSpec_1.CreateIndexRequestSpecToJSON)(value.spec)
    };
}
exports.CreateIndexRequestToJSON = CreateIndexRequestToJSON; //# sourceMappingURL=CreateIndexRequest.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/DeleteRequest.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DeleteRequestToJSON = exports.DeleteRequestFromJSONTyped = exports.DeleteRequestFromJSON = exports.instanceOfDeleteRequest = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the DeleteRequest interface.
 */ function instanceOfDeleteRequest(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfDeleteRequest = instanceOfDeleteRequest;
function DeleteRequestFromJSON(json) {
    return DeleteRequestFromJSONTyped(json, false);
}
exports.DeleteRequestFromJSON = DeleteRequestFromJSON;
function DeleteRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'ids': !(0, runtime_1.exists)(json, 'ids') ? undefined : json['ids'],
        'deleteAll': !(0, runtime_1.exists)(json, 'deleteAll') ? undefined : json['deleteAll'],
        'namespace': !(0, runtime_1.exists)(json, 'namespace') ? undefined : json['namespace'],
        'filter': !(0, runtime_1.exists)(json, 'filter') ? undefined : json['filter']
    };
}
exports.DeleteRequestFromJSONTyped = DeleteRequestFromJSONTyped;
function DeleteRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'ids': value.ids,
        'deleteAll': value.deleteAll,
        'namespace': value.namespace,
        'filter': value.filter
    };
}
exports.DeleteRequestToJSON = DeleteRequestToJSON; //# sourceMappingURL=DeleteRequest.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/DescribeIndexStatsRequest.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DescribeIndexStatsRequestToJSON = exports.DescribeIndexStatsRequestFromJSONTyped = exports.DescribeIndexStatsRequestFromJSON = exports.instanceOfDescribeIndexStatsRequest = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the DescribeIndexStatsRequest interface.
 */ function instanceOfDescribeIndexStatsRequest(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfDescribeIndexStatsRequest = instanceOfDescribeIndexStatsRequest;
function DescribeIndexStatsRequestFromJSON(json) {
    return DescribeIndexStatsRequestFromJSONTyped(json, false);
}
exports.DescribeIndexStatsRequestFromJSON = DescribeIndexStatsRequestFromJSON;
function DescribeIndexStatsRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'filter': !(0, runtime_1.exists)(json, 'filter') ? undefined : json['filter']
    };
}
exports.DescribeIndexStatsRequestFromJSONTyped = DescribeIndexStatsRequestFromJSONTyped;
function DescribeIndexStatsRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'filter': value.filter
    };
}
exports.DescribeIndexStatsRequestToJSON = DescribeIndexStatsRequestToJSON; //# sourceMappingURL=DescribeIndexStatsRequest.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/NamespaceSummary.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NamespaceSummaryToJSON = exports.NamespaceSummaryFromJSONTyped = exports.NamespaceSummaryFromJSON = exports.instanceOfNamespaceSummary = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the NamespaceSummary interface.
 */ function instanceOfNamespaceSummary(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfNamespaceSummary = instanceOfNamespaceSummary;
function NamespaceSummaryFromJSON(json) {
    return NamespaceSummaryFromJSONTyped(json, false);
}
exports.NamespaceSummaryFromJSON = NamespaceSummaryFromJSON;
function NamespaceSummaryFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'vectorCount': !(0, runtime_1.exists)(json, 'vectorCount') ? undefined : json['vectorCount']
    };
}
exports.NamespaceSummaryFromJSONTyped = NamespaceSummaryFromJSONTyped;
function NamespaceSummaryToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'vectorCount': value.vectorCount
    };
}
exports.NamespaceSummaryToJSON = NamespaceSummaryToJSON; //# sourceMappingURL=NamespaceSummary.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/DescribeIndexStatsResponse.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DescribeIndexStatsResponseToJSON = exports.DescribeIndexStatsResponseFromJSONTyped = exports.DescribeIndexStatsResponseFromJSON = exports.instanceOfDescribeIndexStatsResponse = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
var NamespaceSummary_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/NamespaceSummary.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the DescribeIndexStatsResponse interface.
 */ function instanceOfDescribeIndexStatsResponse(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfDescribeIndexStatsResponse = instanceOfDescribeIndexStatsResponse;
function DescribeIndexStatsResponseFromJSON(json) {
    return DescribeIndexStatsResponseFromJSONTyped(json, false);
}
exports.DescribeIndexStatsResponseFromJSON = DescribeIndexStatsResponseFromJSON;
function DescribeIndexStatsResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'namespaces': !(0, runtime_1.exists)(json, 'namespaces') ? undefined : (0, runtime_1.mapValues)(json['namespaces'], NamespaceSummary_1.NamespaceSummaryFromJSON),
        'dimension': !(0, runtime_1.exists)(json, 'dimension') ? undefined : json['dimension'],
        'indexFullness': !(0, runtime_1.exists)(json, 'indexFullness') ? undefined : json['indexFullness'],
        'totalVectorCount': !(0, runtime_1.exists)(json, 'totalVectorCount') ? undefined : json['totalVectorCount']
    };
}
exports.DescribeIndexStatsResponseFromJSONTyped = DescribeIndexStatsResponseFromJSONTyped;
function DescribeIndexStatsResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'namespaces': value.namespaces === undefined ? undefined : (0, runtime_1.mapValues)(value.namespaces, NamespaceSummary_1.NamespaceSummaryToJSON),
        'dimension': value.dimension,
        'indexFullness': value.indexFullness,
        'totalVectorCount': value.totalVectorCount
    };
}
exports.DescribeIndexStatsResponseToJSON = DescribeIndexStatsResponseToJSON; //# sourceMappingURL=DescribeIndexStatsResponse.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ErrorResponseError.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ErrorResponseErrorToJSON = exports.ErrorResponseErrorFromJSONTyped = exports.ErrorResponseErrorFromJSON = exports.instanceOfErrorResponseError = exports.ErrorResponseErrorCodeEnum = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
/**
 * @export
 */ exports.ErrorResponseErrorCodeEnum = {
    Ok: 'OK',
    Unknown: 'UNKNOWN',
    InvalidArgument: 'INVALID_ARGUMENT',
    DeadlineExceeded: 'DEADLINE_EXCEEDED',
    QuotaExceeded: 'QUOTA_EXCEEDED',
    NotFound: 'NOT_FOUND',
    AlreadyExists: 'ALREADY_EXISTS',
    PermissionDenied: 'PERMISSION_DENIED',
    Unauthenticated: 'UNAUTHENTICATED',
    ResourceExhausted: 'RESOURCE_EXHAUSTED',
    FailedPrecondition: 'FAILED_PRECONDITION',
    Aborted: 'ABORTED',
    OutOfRange: 'OUT_OF_RANGE',
    Unimplemented: 'UNIMPLEMENTED',
    Internal: 'INTERNAL',
    Unavailable: 'UNAVAILABLE',
    DataLoss: 'DATA_LOSS',
    Forbidden: 'FORBIDDEN'
};
/**
 * Check if a given object implements the ErrorResponseError interface.
 */ function instanceOfErrorResponseError(value) {
    var isInstance = true;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "message" in value;
    return isInstance;
}
exports.instanceOfErrorResponseError = instanceOfErrorResponseError;
function ErrorResponseErrorFromJSON(json) {
    return ErrorResponseErrorFromJSONTyped(json, false);
}
exports.ErrorResponseErrorFromJSON = ErrorResponseErrorFromJSON;
function ErrorResponseErrorFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'code': json['code'],
        'message': json['message'],
        'details': !(0, runtime_1.exists)(json, 'details') ? undefined : json['details']
    };
}
exports.ErrorResponseErrorFromJSONTyped = ErrorResponseErrorFromJSONTyped;
function ErrorResponseErrorToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'code': value.code,
        'message': value.message,
        'details': value.details
    };
}
exports.ErrorResponseErrorToJSON = ErrorResponseErrorToJSON; //# sourceMappingURL=ErrorResponseError.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ErrorResponse.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ErrorResponseToJSON = exports.ErrorResponseFromJSONTyped = exports.ErrorResponseFromJSON = exports.instanceOfErrorResponse = void 0;
var ErrorResponseError_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ErrorResponseError.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the ErrorResponse interface.
 */ function instanceOfErrorResponse(value) {
    var isInstance = true;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "error" in value;
    return isInstance;
}
exports.instanceOfErrorResponse = instanceOfErrorResponse;
function ErrorResponseFromJSON(json) {
    return ErrorResponseFromJSONTyped(json, false);
}
exports.ErrorResponseFromJSON = ErrorResponseFromJSON;
function ErrorResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'status': json['status'],
        'error': (0, ErrorResponseError_1.ErrorResponseErrorFromJSON)(json['error'])
    };
}
exports.ErrorResponseFromJSONTyped = ErrorResponseFromJSONTyped;
function ErrorResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'status': value.status,
        'error': (0, ErrorResponseError_1.ErrorResponseErrorToJSON)(value.error)
    };
}
exports.ErrorResponseToJSON = ErrorResponseToJSON; //# sourceMappingURL=ErrorResponse.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/Usage.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UsageToJSON = exports.UsageFromJSONTyped = exports.UsageFromJSON = exports.instanceOfUsage = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the Usage interface.
 */ function instanceOfUsage(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfUsage = instanceOfUsage;
function UsageFromJSON(json) {
    return UsageFromJSONTyped(json, false);
}
exports.UsageFromJSON = UsageFromJSON;
function UsageFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'readUnits': !(0, runtime_1.exists)(json, 'readUnits') ? undefined : json['readUnits']
    };
}
exports.UsageFromJSONTyped = UsageFromJSONTyped;
function UsageToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'readUnits': value.readUnits
    };
}
exports.UsageToJSON = UsageToJSON; //# sourceMappingURL=Usage.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/SparseValues.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SparseValuesToJSON = exports.SparseValuesFromJSONTyped = exports.SparseValuesFromJSON = exports.instanceOfSparseValues = void 0;
/**
 * Check if a given object implements the SparseValues interface.
 */ function instanceOfSparseValues(value) {
    var isInstance = true;
    isInstance = isInstance && "indices" in value;
    isInstance = isInstance && "values" in value;
    return isInstance;
}
exports.instanceOfSparseValues = instanceOfSparseValues;
function SparseValuesFromJSON(json) {
    return SparseValuesFromJSONTyped(json, false);
}
exports.SparseValuesFromJSON = SparseValuesFromJSON;
function SparseValuesFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'indices': json['indices'],
        'values': json['values']
    };
}
exports.SparseValuesFromJSONTyped = SparseValuesFromJSONTyped;
function SparseValuesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'indices': value.indices,
        'values': value.values
    };
}
exports.SparseValuesToJSON = SparseValuesToJSON; //# sourceMappingURL=SparseValues.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/Vector.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.VectorToJSON = exports.VectorFromJSONTyped = exports.VectorFromJSON = exports.instanceOfVector = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
var SparseValues_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/SparseValues.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the Vector interface.
 */ function instanceOfVector(value) {
    var isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "values" in value;
    return isInstance;
}
exports.instanceOfVector = instanceOfVector;
function VectorFromJSON(json) {
    return VectorFromJSONTyped(json, false);
}
exports.VectorFromJSON = VectorFromJSON;
function VectorFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'id': json['id'],
        'values': json['values'],
        'sparseValues': !(0, runtime_1.exists)(json, 'sparseValues') ? undefined : (0, SparseValues_1.SparseValuesFromJSON)(json['sparseValues']),
        'metadata': !(0, runtime_1.exists)(json, 'metadata') ? undefined : json['metadata']
    };
}
exports.VectorFromJSONTyped = VectorFromJSONTyped;
function VectorToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'values': value.values,
        'sparseValues': (0, SparseValues_1.SparseValuesToJSON)(value.sparseValues),
        'metadata': value.metadata
    };
}
exports.VectorToJSON = VectorToJSON; //# sourceMappingURL=Vector.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/FetchResponse.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FetchResponseToJSON = exports.FetchResponseFromJSONTyped = exports.FetchResponseFromJSON = exports.instanceOfFetchResponse = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
var Usage_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/Usage.js [app-ssr] (ecmascript)");
var Vector_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/Vector.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the FetchResponse interface.
 */ function instanceOfFetchResponse(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfFetchResponse = instanceOfFetchResponse;
function FetchResponseFromJSON(json) {
    return FetchResponseFromJSONTyped(json, false);
}
exports.FetchResponseFromJSON = FetchResponseFromJSON;
function FetchResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'vectors': !(0, runtime_1.exists)(json, 'vectors') ? undefined : (0, runtime_1.mapValues)(json['vectors'], Vector_1.VectorFromJSON),
        'namespace': !(0, runtime_1.exists)(json, 'namespace') ? undefined : json['namespace'],
        'usage': !(0, runtime_1.exists)(json, 'usage') ? undefined : (0, Usage_1.UsageFromJSON)(json['usage'])
    };
}
exports.FetchResponseFromJSONTyped = FetchResponseFromJSONTyped;
function FetchResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'vectors': value.vectors === undefined ? undefined : (0, runtime_1.mapValues)(value.vectors, Vector_1.VectorToJSON),
        'namespace': value.namespace,
        'usage': (0, Usage_1.UsageToJSON)(value.usage)
    };
}
exports.FetchResponseToJSON = FetchResponseToJSON; //# sourceMappingURL=FetchResponse.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/PodSpecMetadataConfig.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PodSpecMetadataConfigToJSON = exports.PodSpecMetadataConfigFromJSONTyped = exports.PodSpecMetadataConfigFromJSON = exports.instanceOfPodSpecMetadataConfig = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the PodSpecMetadataConfig interface.
 */ function instanceOfPodSpecMetadataConfig(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfPodSpecMetadataConfig = instanceOfPodSpecMetadataConfig;
function PodSpecMetadataConfigFromJSON(json) {
    return PodSpecMetadataConfigFromJSONTyped(json, false);
}
exports.PodSpecMetadataConfigFromJSON = PodSpecMetadataConfigFromJSON;
function PodSpecMetadataConfigFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'indexed': !(0, runtime_1.exists)(json, 'indexed') ? undefined : json['indexed']
    };
}
exports.PodSpecMetadataConfigFromJSONTyped = PodSpecMetadataConfigFromJSONTyped;
function PodSpecMetadataConfigToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'indexed': value.indexed
    };
}
exports.PodSpecMetadataConfigToJSON = PodSpecMetadataConfigToJSON; //# sourceMappingURL=PodSpecMetadataConfig.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/PodSpec.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PodSpecToJSON = exports.PodSpecFromJSONTyped = exports.PodSpecFromJSON = exports.instanceOfPodSpec = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
var PodSpecMetadataConfig_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/PodSpecMetadataConfig.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the PodSpec interface.
 */ function instanceOfPodSpec(value) {
    var isInstance = true;
    isInstance = isInstance && "environment" in value;
    isInstance = isInstance && "replicas" in value;
    isInstance = isInstance && "shards" in value;
    isInstance = isInstance && "podType" in value;
    isInstance = isInstance && "pods" in value;
    return isInstance;
}
exports.instanceOfPodSpec = instanceOfPodSpec;
function PodSpecFromJSON(json) {
    return PodSpecFromJSONTyped(json, false);
}
exports.PodSpecFromJSON = PodSpecFromJSON;
function PodSpecFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'environment': json['environment'],
        'replicas': json['replicas'],
        'shards': json['shards'],
        'podType': json['pod_type'],
        'pods': json['pods'],
        'metadataConfig': !(0, runtime_1.exists)(json, 'metadata_config') ? undefined : (0, PodSpecMetadataConfig_1.PodSpecMetadataConfigFromJSON)(json['metadata_config']),
        'sourceCollection': !(0, runtime_1.exists)(json, 'source_collection') ? undefined : json['source_collection']
    };
}
exports.PodSpecFromJSONTyped = PodSpecFromJSONTyped;
function PodSpecToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'environment': value.environment,
        'replicas': value.replicas,
        'shards': value.shards,
        'pod_type': value.podType,
        'pods': value.pods,
        'metadata_config': (0, PodSpecMetadataConfig_1.PodSpecMetadataConfigToJSON)(value.metadataConfig),
        'source_collection': value.sourceCollection
    };
}
exports.PodSpecToJSON = PodSpecToJSON; //# sourceMappingURL=PodSpec.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/IndexModelSpec.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.IndexModelSpecToJSON = exports.IndexModelSpecFromJSONTyped = exports.IndexModelSpecFromJSON = exports.instanceOfIndexModelSpec = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
var PodSpec_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/PodSpec.js [app-ssr] (ecmascript)");
var ServerlessSpec_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ServerlessSpec.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the IndexModelSpec interface.
 */ function instanceOfIndexModelSpec(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfIndexModelSpec = instanceOfIndexModelSpec;
function IndexModelSpecFromJSON(json) {
    return IndexModelSpecFromJSONTyped(json, false);
}
exports.IndexModelSpecFromJSON = IndexModelSpecFromJSON;
function IndexModelSpecFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'pod': !(0, runtime_1.exists)(json, 'pod') ? undefined : (0, PodSpec_1.PodSpecFromJSON)(json['pod']),
        'serverless': !(0, runtime_1.exists)(json, 'serverless') ? undefined : (0, ServerlessSpec_1.ServerlessSpecFromJSON)(json['serverless'])
    };
}
exports.IndexModelSpecFromJSONTyped = IndexModelSpecFromJSONTyped;
function IndexModelSpecToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'pod': (0, PodSpec_1.PodSpecToJSON)(value.pod),
        'serverless': (0, ServerlessSpec_1.ServerlessSpecToJSON)(value.serverless)
    };
}
exports.IndexModelSpecToJSON = IndexModelSpecToJSON; //# sourceMappingURL=IndexModelSpec.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/IndexModelStatus.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.IndexModelStatusToJSON = exports.IndexModelStatusFromJSONTyped = exports.IndexModelStatusFromJSON = exports.instanceOfIndexModelStatus = exports.IndexModelStatusStateEnum = void 0;
/**
 * @export
 */ exports.IndexModelStatusStateEnum = {
    Initializing: 'Initializing',
    InitializationFailed: 'InitializationFailed',
    ScalingUp: 'ScalingUp',
    ScalingDown: 'ScalingDown',
    ScalingUpPodSize: 'ScalingUpPodSize',
    ScalingDownPodSize: 'ScalingDownPodSize',
    Terminating: 'Terminating',
    Ready: 'Ready'
};
/**
 * Check if a given object implements the IndexModelStatus interface.
 */ function instanceOfIndexModelStatus(value) {
    var isInstance = true;
    isInstance = isInstance && "ready" in value;
    isInstance = isInstance && "state" in value;
    return isInstance;
}
exports.instanceOfIndexModelStatus = instanceOfIndexModelStatus;
function IndexModelStatusFromJSON(json) {
    return IndexModelStatusFromJSONTyped(json, false);
}
exports.IndexModelStatusFromJSON = IndexModelStatusFromJSON;
function IndexModelStatusFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'ready': json['ready'],
        'state': json['state']
    };
}
exports.IndexModelStatusFromJSONTyped = IndexModelStatusFromJSONTyped;
function IndexModelStatusToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'ready': value.ready,
        'state': value.state
    };
}
exports.IndexModelStatusToJSON = IndexModelStatusToJSON; //# sourceMappingURL=IndexModelStatus.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/IndexModel.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.IndexModelToJSON = exports.IndexModelFromJSONTyped = exports.IndexModelFromJSON = exports.instanceOfIndexModel = exports.IndexModelMetricEnum = void 0;
var IndexModelSpec_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/IndexModelSpec.js [app-ssr] (ecmascript)");
var IndexModelStatus_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/IndexModelStatus.js [app-ssr] (ecmascript)");
/**
 * @export
 */ exports.IndexModelMetricEnum = {
    Cosine: 'cosine',
    Euclidean: 'euclidean',
    Dotproduct: 'dotproduct'
};
/**
 * Check if a given object implements the IndexModel interface.
 */ function instanceOfIndexModel(value) {
    var isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "dimension" in value;
    isInstance = isInstance && "metric" in value;
    isInstance = isInstance && "host" in value;
    isInstance = isInstance && "spec" in value;
    isInstance = isInstance && "status" in value;
    return isInstance;
}
exports.instanceOfIndexModel = instanceOfIndexModel;
function IndexModelFromJSON(json) {
    return IndexModelFromJSONTyped(json, false);
}
exports.IndexModelFromJSON = IndexModelFromJSON;
function IndexModelFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'name': json['name'],
        'dimension': json['dimension'],
        'metric': json['metric'],
        'host': json['host'],
        'spec': (0, IndexModelSpec_1.IndexModelSpecFromJSON)(json['spec']),
        'status': (0, IndexModelStatus_1.IndexModelStatusFromJSON)(json['status'])
    };
}
exports.IndexModelFromJSONTyped = IndexModelFromJSONTyped;
function IndexModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'dimension': value.dimension,
        'metric': value.metric,
        'host': value.host,
        'spec': (0, IndexModelSpec_1.IndexModelSpecToJSON)(value.spec),
        'status': (0, IndexModelStatus_1.IndexModelStatusToJSON)(value.status)
    };
}
exports.IndexModelToJSON = IndexModelToJSON; //# sourceMappingURL=IndexModel.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/IndexList.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.IndexListToJSON = exports.IndexListFromJSONTyped = exports.IndexListFromJSON = exports.instanceOfIndexList = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
var IndexModel_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/IndexModel.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the IndexList interface.
 */ function instanceOfIndexList(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfIndexList = instanceOfIndexList;
function IndexListFromJSON(json) {
    return IndexListFromJSONTyped(json, false);
}
exports.IndexListFromJSON = IndexListFromJSON;
function IndexListFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'indexes': !(0, runtime_1.exists)(json, 'indexes') ? undefined : json['indexes'].map(IndexModel_1.IndexModelFromJSON)
    };
}
exports.IndexListFromJSONTyped = IndexListFromJSONTyped;
function IndexListToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'indexes': value.indexes === undefined ? undefined : value.indexes.map(IndexModel_1.IndexModelToJSON)
    };
}
exports.IndexListToJSON = IndexListToJSON; //# sourceMappingURL=IndexList.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ListItem.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ListItemToJSON = exports.ListItemFromJSONTyped = exports.ListItemFromJSON = exports.instanceOfListItem = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the ListItem interface.
 */ function instanceOfListItem(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfListItem = instanceOfListItem;
function ListItemFromJSON(json) {
    return ListItemFromJSONTyped(json, false);
}
exports.ListItemFromJSON = ListItemFromJSON;
function ListItemFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id']
    };
}
exports.ListItemFromJSONTyped = ListItemFromJSONTyped;
function ListItemToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id
    };
}
exports.ListItemToJSON = ListItemToJSON; //# sourceMappingURL=ListItem.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/Pagination.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PaginationToJSON = exports.PaginationFromJSONTyped = exports.PaginationFromJSON = exports.instanceOfPagination = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the Pagination interface.
 */ function instanceOfPagination(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfPagination = instanceOfPagination;
function PaginationFromJSON(json) {
    return PaginationFromJSONTyped(json, false);
}
exports.PaginationFromJSON = PaginationFromJSON;
function PaginationFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'next': !(0, runtime_1.exists)(json, 'next') ? undefined : json['next']
    };
}
exports.PaginationFromJSONTyped = PaginationFromJSONTyped;
function PaginationToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'next': value.next
    };
}
exports.PaginationToJSON = PaginationToJSON; //# sourceMappingURL=Pagination.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ListResponse.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ListResponseToJSON = exports.ListResponseFromJSONTyped = exports.ListResponseFromJSON = exports.instanceOfListResponse = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
var ListItem_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ListItem.js [app-ssr] (ecmascript)");
var Pagination_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/Pagination.js [app-ssr] (ecmascript)");
var Usage_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/Usage.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the ListResponse interface.
 */ function instanceOfListResponse(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfListResponse = instanceOfListResponse;
function ListResponseFromJSON(json) {
    return ListResponseFromJSONTyped(json, false);
}
exports.ListResponseFromJSON = ListResponseFromJSON;
function ListResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'vectors': !(0, runtime_1.exists)(json, 'vectors') ? undefined : json['vectors'].map(ListItem_1.ListItemFromJSON),
        'pagination': !(0, runtime_1.exists)(json, 'pagination') ? undefined : (0, Pagination_1.PaginationFromJSON)(json['pagination']),
        'namespace': !(0, runtime_1.exists)(json, 'namespace') ? undefined : json['namespace'],
        'usage': !(0, runtime_1.exists)(json, 'usage') ? undefined : (0, Usage_1.UsageFromJSON)(json['usage'])
    };
}
exports.ListResponseFromJSONTyped = ListResponseFromJSONTyped;
function ListResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'vectors': value.vectors === undefined ? undefined : value.vectors.map(ListItem_1.ListItemToJSON),
        'pagination': (0, Pagination_1.PaginationToJSON)(value.pagination),
        'namespace': value.namespace,
        'usage': (0, Usage_1.UsageToJSON)(value.usage)
    };
}
exports.ListResponseToJSON = ListResponseToJSON; //# sourceMappingURL=ListResponse.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ProtobufAny.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ProtobufAnyToJSON = exports.ProtobufAnyFromJSONTyped = exports.ProtobufAnyFromJSON = exports.instanceOfProtobufAny = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the ProtobufAny interface.
 */ function instanceOfProtobufAny(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfProtobufAny = instanceOfProtobufAny;
function ProtobufAnyFromJSON(json) {
    return ProtobufAnyFromJSONTyped(json, false);
}
exports.ProtobufAnyFromJSON = ProtobufAnyFromJSON;
function ProtobufAnyFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'typeUrl': !(0, runtime_1.exists)(json, 'typeUrl') ? undefined : json['typeUrl'],
        'value': !(0, runtime_1.exists)(json, 'value') ? undefined : json['value']
    };
}
exports.ProtobufAnyFromJSONTyped = ProtobufAnyFromJSONTyped;
function ProtobufAnyToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'typeUrl': value.typeUrl,
        'value': value.value
    };
}
exports.ProtobufAnyToJSON = ProtobufAnyToJSON; //# sourceMappingURL=ProtobufAny.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ProtobufNullValue.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ProtobufNullValueToJSON = exports.ProtobufNullValueFromJSONTyped = exports.ProtobufNullValueFromJSON = exports.ProtobufNullValue = void 0;
/**
 * `NullValue` is a singleton enumeration to represent the null value for the
 * `Value` type union.
 *
 *  The JSON representation for `NullValue` is JSON `null`.
 *
 *  - NULL_VALUE: Null value.
 * @export
 */ exports.ProtobufNullValue = {
    NullValue: 'NULL_VALUE'
};
function ProtobufNullValueFromJSON(json) {
    return ProtobufNullValueFromJSONTyped(json, false);
}
exports.ProtobufNullValueFromJSON = ProtobufNullValueFromJSON;
function ProtobufNullValueFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
exports.ProtobufNullValueFromJSONTyped = ProtobufNullValueFromJSONTyped;
function ProtobufNullValueToJSON(value) {
    return value;
}
exports.ProtobufNullValueToJSON = ProtobufNullValueToJSON; //# sourceMappingURL=ProtobufNullValue.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/QueryVector.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.QueryVectorToJSON = exports.QueryVectorFromJSONTyped = exports.QueryVectorFromJSON = exports.instanceOfQueryVector = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
var SparseValues_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/SparseValues.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the QueryVector interface.
 */ function instanceOfQueryVector(value) {
    var isInstance = true;
    isInstance = isInstance && "values" in value;
    return isInstance;
}
exports.instanceOfQueryVector = instanceOfQueryVector;
function QueryVectorFromJSON(json) {
    return QueryVectorFromJSONTyped(json, false);
}
exports.QueryVectorFromJSON = QueryVectorFromJSON;
function QueryVectorFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'values': json['values'],
        'sparseValues': !(0, runtime_1.exists)(json, 'sparseValues') ? undefined : (0, SparseValues_1.SparseValuesFromJSON)(json['sparseValues']),
        'topK': !(0, runtime_1.exists)(json, 'topK') ? undefined : json['topK'],
        'namespace': !(0, runtime_1.exists)(json, 'namespace') ? undefined : json['namespace'],
        'filter': !(0, runtime_1.exists)(json, 'filter') ? undefined : json['filter']
    };
}
exports.QueryVectorFromJSONTyped = QueryVectorFromJSONTyped;
function QueryVectorToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'values': value.values,
        'sparseValues': (0, SparseValues_1.SparseValuesToJSON)(value.sparseValues),
        'topK': value.topK,
        'namespace': value.namespace,
        'filter': value.filter
    };
}
exports.QueryVectorToJSON = QueryVectorToJSON; //# sourceMappingURL=QueryVector.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/QueryRequest.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.QueryRequestToJSON = exports.QueryRequestFromJSONTyped = exports.QueryRequestFromJSON = exports.instanceOfQueryRequest = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
var QueryVector_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/QueryVector.js [app-ssr] (ecmascript)");
var SparseValues_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/SparseValues.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the QueryRequest interface.
 */ function instanceOfQueryRequest(value) {
    var isInstance = true;
    isInstance = isInstance && "topK" in value;
    return isInstance;
}
exports.instanceOfQueryRequest = instanceOfQueryRequest;
function QueryRequestFromJSON(json) {
    return QueryRequestFromJSONTyped(json, false);
}
exports.QueryRequestFromJSON = QueryRequestFromJSON;
function QueryRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'namespace': !(0, runtime_1.exists)(json, 'namespace') ? undefined : json['namespace'],
        'topK': json['topK'],
        'filter': !(0, runtime_1.exists)(json, 'filter') ? undefined : json['filter'],
        'includeValues': !(0, runtime_1.exists)(json, 'includeValues') ? undefined : json['includeValues'],
        'includeMetadata': !(0, runtime_1.exists)(json, 'includeMetadata') ? undefined : json['includeMetadata'],
        'queries': !(0, runtime_1.exists)(json, 'queries') ? undefined : json['queries'].map(QueryVector_1.QueryVectorFromJSON),
        'vector': !(0, runtime_1.exists)(json, 'vector') ? undefined : json['vector'],
        'sparseVector': !(0, runtime_1.exists)(json, 'sparseVector') ? undefined : (0, SparseValues_1.SparseValuesFromJSON)(json['sparseVector']),
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id']
    };
}
exports.QueryRequestFromJSONTyped = QueryRequestFromJSONTyped;
function QueryRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'namespace': value.namespace,
        'topK': value.topK,
        'filter': value.filter,
        'includeValues': value.includeValues,
        'includeMetadata': value.includeMetadata,
        'queries': value.queries === undefined ? undefined : value.queries.map(QueryVector_1.QueryVectorToJSON),
        'vector': value.vector,
        'sparseVector': (0, SparseValues_1.SparseValuesToJSON)(value.sparseVector),
        'id': value.id
    };
}
exports.QueryRequestToJSON = QueryRequestToJSON; //# sourceMappingURL=QueryRequest.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ScoredVector.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ScoredVectorToJSON = exports.ScoredVectorFromJSONTyped = exports.ScoredVectorFromJSON = exports.instanceOfScoredVector = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
var SparseValues_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/SparseValues.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the ScoredVector interface.
 */ function instanceOfScoredVector(value) {
    var isInstance = true;
    isInstance = isInstance && "id" in value;
    return isInstance;
}
exports.instanceOfScoredVector = instanceOfScoredVector;
function ScoredVectorFromJSON(json) {
    return ScoredVectorFromJSONTyped(json, false);
}
exports.ScoredVectorFromJSON = ScoredVectorFromJSON;
function ScoredVectorFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'id': json['id'],
        'score': !(0, runtime_1.exists)(json, 'score') ? undefined : json['score'],
        'values': !(0, runtime_1.exists)(json, 'values') ? undefined : json['values'],
        'sparseValues': !(0, runtime_1.exists)(json, 'sparseValues') ? undefined : (0, SparseValues_1.SparseValuesFromJSON)(json['sparseValues']),
        'metadata': !(0, runtime_1.exists)(json, 'metadata') ? undefined : json['metadata']
    };
}
exports.ScoredVectorFromJSONTyped = ScoredVectorFromJSONTyped;
function ScoredVectorToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'score': value.score,
        'values': value.values,
        'sparseValues': (0, SparseValues_1.SparseValuesToJSON)(value.sparseValues),
        'metadata': value.metadata
    };
}
exports.ScoredVectorToJSON = ScoredVectorToJSON; //# sourceMappingURL=ScoredVector.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/SingleQueryResults.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SingleQueryResultsToJSON = exports.SingleQueryResultsFromJSONTyped = exports.SingleQueryResultsFromJSON = exports.instanceOfSingleQueryResults = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
var ScoredVector_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ScoredVector.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the SingleQueryResults interface.
 */ function instanceOfSingleQueryResults(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfSingleQueryResults = instanceOfSingleQueryResults;
function SingleQueryResultsFromJSON(json) {
    return SingleQueryResultsFromJSONTyped(json, false);
}
exports.SingleQueryResultsFromJSON = SingleQueryResultsFromJSON;
function SingleQueryResultsFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'matches': !(0, runtime_1.exists)(json, 'matches') ? undefined : json['matches'].map(ScoredVector_1.ScoredVectorFromJSON),
        'namespace': !(0, runtime_1.exists)(json, 'namespace') ? undefined : json['namespace']
    };
}
exports.SingleQueryResultsFromJSONTyped = SingleQueryResultsFromJSONTyped;
function SingleQueryResultsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'matches': value.matches === undefined ? undefined : value.matches.map(ScoredVector_1.ScoredVectorToJSON),
        'namespace': value.namespace
    };
}
exports.SingleQueryResultsToJSON = SingleQueryResultsToJSON; //# sourceMappingURL=SingleQueryResults.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/QueryResponse.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.QueryResponseToJSON = exports.QueryResponseFromJSONTyped = exports.QueryResponseFromJSON = exports.instanceOfQueryResponse = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
var ScoredVector_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ScoredVector.js [app-ssr] (ecmascript)");
var SingleQueryResults_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/SingleQueryResults.js [app-ssr] (ecmascript)");
var Usage_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/Usage.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the QueryResponse interface.
 */ function instanceOfQueryResponse(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfQueryResponse = instanceOfQueryResponse;
function QueryResponseFromJSON(json) {
    return QueryResponseFromJSONTyped(json, false);
}
exports.QueryResponseFromJSON = QueryResponseFromJSON;
function QueryResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'results': !(0, runtime_1.exists)(json, 'results') ? undefined : json['results'].map(SingleQueryResults_1.SingleQueryResultsFromJSON),
        'matches': !(0, runtime_1.exists)(json, 'matches') ? undefined : json['matches'].map(ScoredVector_1.ScoredVectorFromJSON),
        'namespace': !(0, runtime_1.exists)(json, 'namespace') ? undefined : json['namespace'],
        'usage': !(0, runtime_1.exists)(json, 'usage') ? undefined : (0, Usage_1.UsageFromJSON)(json['usage'])
    };
}
exports.QueryResponseFromJSONTyped = QueryResponseFromJSONTyped;
function QueryResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'results': value.results === undefined ? undefined : value.results.map(SingleQueryResults_1.SingleQueryResultsToJSON),
        'matches': value.matches === undefined ? undefined : value.matches.map(ScoredVector_1.ScoredVectorToJSON),
        'namespace': value.namespace,
        'usage': (0, Usage_1.UsageToJSON)(value.usage)
    };
}
exports.QueryResponseToJSON = QueryResponseToJSON; //# sourceMappingURL=QueryResponse.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/RpcStatus.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RpcStatusToJSON = exports.RpcStatusFromJSONTyped = exports.RpcStatusFromJSON = exports.instanceOfRpcStatus = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
var ProtobufAny_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ProtobufAny.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the RpcStatus interface.
 */ function instanceOfRpcStatus(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfRpcStatus = instanceOfRpcStatus;
function RpcStatusFromJSON(json) {
    return RpcStatusFromJSONTyped(json, false);
}
exports.RpcStatusFromJSON = RpcStatusFromJSON;
function RpcStatusFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
        'message': !(0, runtime_1.exists)(json, 'message') ? undefined : json['message'],
        'details': !(0, runtime_1.exists)(json, 'details') ? undefined : json['details'].map(ProtobufAny_1.ProtobufAnyFromJSON)
    };
}
exports.RpcStatusFromJSONTyped = RpcStatusFromJSONTyped;
function RpcStatusToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'code': value.code,
        'message': value.message,
        'details': value.details === undefined ? undefined : value.details.map(ProtobufAny_1.ProtobufAnyToJSON)
    };
}
exports.RpcStatusToJSON = RpcStatusToJSON; //# sourceMappingURL=RpcStatus.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/UpdateRequest.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateRequestToJSON = exports.UpdateRequestFromJSONTyped = exports.UpdateRequestFromJSON = exports.instanceOfUpdateRequest = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
var SparseValues_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/SparseValues.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the UpdateRequest interface.
 */ function instanceOfUpdateRequest(value) {
    var isInstance = true;
    isInstance = isInstance && "id" in value;
    return isInstance;
}
exports.instanceOfUpdateRequest = instanceOfUpdateRequest;
function UpdateRequestFromJSON(json) {
    return UpdateRequestFromJSONTyped(json, false);
}
exports.UpdateRequestFromJSON = UpdateRequestFromJSON;
function UpdateRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'id': json['id'],
        'values': !(0, runtime_1.exists)(json, 'values') ? undefined : json['values'],
        'sparseValues': !(0, runtime_1.exists)(json, 'sparseValues') ? undefined : (0, SparseValues_1.SparseValuesFromJSON)(json['sparseValues']),
        'setMetadata': !(0, runtime_1.exists)(json, 'setMetadata') ? undefined : json['setMetadata'],
        'namespace': !(0, runtime_1.exists)(json, 'namespace') ? undefined : json['namespace']
    };
}
exports.UpdateRequestFromJSONTyped = UpdateRequestFromJSONTyped;
function UpdateRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'values': value.values,
        'sparseValues': (0, SparseValues_1.SparseValuesToJSON)(value.sparseValues),
        'setMetadata': value.setMetadata,
        'namespace': value.namespace
    };
}
exports.UpdateRequestToJSON = UpdateRequestToJSON; //# sourceMappingURL=UpdateRequest.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/UpsertRequest.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpsertRequestToJSON = exports.UpsertRequestFromJSONTyped = exports.UpsertRequestFromJSON = exports.instanceOfUpsertRequest = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
var Vector_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/Vector.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the UpsertRequest interface.
 */ function instanceOfUpsertRequest(value) {
    var isInstance = true;
    isInstance = isInstance && "vectors" in value;
    return isInstance;
}
exports.instanceOfUpsertRequest = instanceOfUpsertRequest;
function UpsertRequestFromJSON(json) {
    return UpsertRequestFromJSONTyped(json, false);
}
exports.UpsertRequestFromJSON = UpsertRequestFromJSON;
function UpsertRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'vectors': json['vectors'].map(Vector_1.VectorFromJSON),
        'namespace': !(0, runtime_1.exists)(json, 'namespace') ? undefined : json['namespace']
    };
}
exports.UpsertRequestFromJSONTyped = UpsertRequestFromJSONTyped;
function UpsertRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'vectors': value.vectors.map(Vector_1.VectorToJSON),
        'namespace': value.namespace
    };
}
exports.UpsertRequestToJSON = UpsertRequestToJSON; //# sourceMappingURL=UpsertRequest.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/UpsertResponse.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpsertResponseToJSON = exports.UpsertResponseFromJSONTyped = exports.UpsertResponseFromJSON = exports.instanceOfUpsertResponse = void 0;
var runtime_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)");
/**
 * Check if a given object implements the UpsertResponse interface.
 */ function instanceOfUpsertResponse(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfUpsertResponse = instanceOfUpsertResponse;
function UpsertResponseFromJSON(json) {
    return UpsertResponseFromJSONTyped(json, false);
}
exports.UpsertResponseFromJSON = UpsertResponseFromJSON;
function UpsertResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        'upsertedCount': !(0, runtime_1.exists)(json, 'upsertedCount') ? undefined : json['upsertedCount']
    };
}
exports.UpsertResponseFromJSONTyped = UpsertResponseFromJSONTyped;
function UpsertResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'upsertedCount': value.upsertedCount
    };
}
exports.UpsertResponseToJSON = UpsertResponseToJSON; //# sourceMappingURL=UpsertResponse.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
/* tslint:disable */ /* eslint-disable */ __exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/CollectionList.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/CollectionModel.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ConfigureIndexRequest.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ConfigureIndexRequestSpec.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ConfigureIndexRequestSpecPod.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/CreateCollectionRequest.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/CreateIndexRequest.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/CreateIndexRequestSpec.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/CreateIndexRequestSpecPod.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/CreateIndexRequestSpecPodMetadataConfig.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/DeleteRequest.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/DescribeIndexStatsRequest.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/DescribeIndexStatsResponse.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ErrorResponse.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ErrorResponseError.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/FetchResponse.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/IndexList.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/IndexModel.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/IndexModelSpec.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/IndexModelStatus.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ListItem.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ListResponse.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/NamespaceSummary.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/Pagination.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/PodSpec.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/PodSpecMetadataConfig.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ProtobufAny.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ProtobufNullValue.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/QueryRequest.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/QueryResponse.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/QueryVector.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/RpcStatus.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ScoredVector.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/ServerlessSpec.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/SingleQueryResults.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/SparseValues.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/UpdateRequest.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/UpsertRequest.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/UpsertResponse.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/Usage.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/Vector.js [app-ssr] (ecmascript)"), exports); //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/apis/DataPlaneApi.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DataPlaneApi = void 0;
var runtime = __importStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)"));
var index_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/index.js [app-ssr] (ecmascript)");
/**
 *
 */ var DataPlaneApi = function(_super) {
    __extends(DataPlaneApi, _super);
    function DataPlaneApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * The `delete` operation deletes vectors, by id, from a single namespace.  For guidance and examples, see [Delete data](https://docs.pinecone.io/docs/delete-data).
     * Delete vectors
     */ DataPlaneApi.prototype._deleteRaw = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (requestParameters.deleteRequest === null || requestParameters.deleteRequest === undefined) {
                            throw new runtime.RequiredError('deleteRequest', 'Required parameter requestParameters.deleteRequest was null or undefined when calling _delete.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        if (this.configuration && this.configuration.apiKey) {
                            headerParameters["Api-Key"] = this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
                        }
                        return [
                            4 /*yield*/ ,
                            this.request({
                                path: "/vectors/delete",
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.DeleteRequestToJSON)(requestParameters.deleteRequest)
                            }, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            2 /*return*/ ,
                            new runtime.JSONApiResponse(response)
                        ];
                }
            });
        });
    };
    /**
     * The `delete` operation deletes vectors, by id, from a single namespace.  For guidance and examples, see [Delete data](https://docs.pinecone.io/docs/delete-data).
     * Delete vectors
     */ DataPlaneApi.prototype._delete = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this._deleteRaw(requestParameters, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            4 /*yield*/ ,
                            response.value()
                        ];
                    case 2:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    /**
     * DEPRECATED. Use [`POST /delete`](https://docs.pinecone.io/reference/delete) instead.
     * Delete vectors
     */ DataPlaneApi.prototype.altDeleteRaw = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        queryParameters = {};
                        if (requestParameters.ids) {
                            queryParameters['ids'] = requestParameters.ids;
                        }
                        if (requestParameters.deleteAll !== undefined) {
                            queryParameters['deleteAll'] = requestParameters.deleteAll;
                        }
                        if (requestParameters.namespace !== undefined) {
                            queryParameters['namespace'] = requestParameters.namespace;
                        }
                        headerParameters = {};
                        if (this.configuration && this.configuration.apiKey) {
                            headerParameters["Api-Key"] = this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
                        }
                        return [
                            4 /*yield*/ ,
                            this.request({
                                path: "/vectors/delete",
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters
                            }, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            2 /*return*/ ,
                            new runtime.JSONApiResponse(response)
                        ];
                }
            });
        });
    };
    /**
     * DEPRECATED. Use [`POST /delete`](https://docs.pinecone.io/reference/delete) instead.
     * Delete vectors
     */ DataPlaneApi.prototype.altDelete = function(requestParameters, initOverrides) {
        if (requestParameters === void 0) {
            requestParameters = {};
        }
        return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.altDeleteRaw(requestParameters, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            4 /*yield*/ ,
                            response.value()
                        ];
                    case 2:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    /**
     * DEPRECATED. Use [`POST /describe_index_stats`](https://docs.pinecone.io/reference/describe_index_stats) instead.
     * Get index stats
     */ DataPlaneApi.prototype.altDescribeIndexStatsRaw = function(initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        queryParameters = {};
                        headerParameters = {};
                        if (this.configuration && this.configuration.apiKey) {
                            headerParameters["Api-Key"] = this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
                        }
                        return [
                            4 /*yield*/ ,
                            this.request({
                                path: "/describe_index_stats",
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters
                            }, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            2 /*return*/ ,
                            new runtime.JSONApiResponse(response, function(jsonValue) {
                                return (0, index_1.DescribeIndexStatsResponseFromJSON)(jsonValue);
                            })
                        ];
                }
            });
        });
    };
    /**
     * DEPRECATED. Use [`POST /describe_index_stats`](https://docs.pinecone.io/reference/describe_index_stats) instead.
     * Get index stats
     */ DataPlaneApi.prototype.altDescribeIndexStats = function(initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.altDescribeIndexStatsRaw(initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            4 /*yield*/ ,
                            response.value()
                        ];
                    case 2:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    /**
     * The `describe_index_stats` operation returns statistics about the contents of an index, including the vector count per namespace and the number of dimensions, and the index fullness.  Serverless indexes scale automatically as needed, so index fullness is relevant only for pod-based indexes.  For pod-based indexes, the index fullness result may be inaccurate during pod resizing; to get the status of a pod resizing process, use [`describe_index`](https://www.pinecone.io/docs/api/operation/describe_index/).
     * Get index stats
     */ DataPlaneApi.prototype.describeIndexStatsRaw = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (requestParameters.describeIndexStatsRequest === null || requestParameters.describeIndexStatsRequest === undefined) {
                            throw new runtime.RequiredError('describeIndexStatsRequest', 'Required parameter requestParameters.describeIndexStatsRequest was null or undefined when calling describeIndexStats.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        if (this.configuration && this.configuration.apiKey) {
                            headerParameters["Api-Key"] = this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
                        }
                        return [
                            4 /*yield*/ ,
                            this.request({
                                path: "/describe_index_stats",
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.DescribeIndexStatsRequestToJSON)(requestParameters.describeIndexStatsRequest)
                            }, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            2 /*return*/ ,
                            new runtime.JSONApiResponse(response, function(jsonValue) {
                                return (0, index_1.DescribeIndexStatsResponseFromJSON)(jsonValue);
                            })
                        ];
                }
            });
        });
    };
    /**
     * The `describe_index_stats` operation returns statistics about the contents of an index, including the vector count per namespace and the number of dimensions, and the index fullness.  Serverless indexes scale automatically as needed, so index fullness is relevant only for pod-based indexes.  For pod-based indexes, the index fullness result may be inaccurate during pod resizing; to get the status of a pod resizing process, use [`describe_index`](https://www.pinecone.io/docs/api/operation/describe_index/).
     * Get index stats
     */ DataPlaneApi.prototype.describeIndexStats = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.describeIndexStatsRaw(requestParameters, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            4 /*yield*/ ,
                            response.value()
                        ];
                    case 2:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    /**
     * The `fetch` operation looks up and returns vectors, by ID, from a single namespace. The returned vectors include the vector data and/or metadata.  For guidance and examples, see [Fetch data](https://docs.pinecone.io/docs/fetch-data).
     * Fetch vectors
     */ DataPlaneApi.prototype.fetchRaw = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (requestParameters.ids === null || requestParameters.ids === undefined) {
                            throw new runtime.RequiredError('ids', 'Required parameter requestParameters.ids was null or undefined when calling fetch.');
                        }
                        queryParameters = {};
                        if (requestParameters.ids) {
                            queryParameters['ids'] = requestParameters.ids;
                        }
                        if (requestParameters.namespace !== undefined) {
                            queryParameters['namespace'] = requestParameters.namespace;
                        }
                        headerParameters = {};
                        if (this.configuration && this.configuration.apiKey) {
                            headerParameters["Api-Key"] = this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
                        }
                        return [
                            4 /*yield*/ ,
                            this.request({
                                path: "/vectors/fetch",
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters
                            }, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            2 /*return*/ ,
                            new runtime.JSONApiResponse(response, function(jsonValue) {
                                return (0, index_1.FetchResponseFromJSON)(jsonValue);
                            })
                        ];
                }
            });
        });
    };
    /**
     * The `fetch` operation looks up and returns vectors, by ID, from a single namespace. The returned vectors include the vector data and/or metadata.  For guidance and examples, see [Fetch data](https://docs.pinecone.io/docs/fetch-data).
     * Fetch vectors
     */ DataPlaneApi.prototype.fetch = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.fetchRaw(requestParameters, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            4 /*yield*/ ,
                            response.value()
                        ];
                    case 2:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    /**
     * The `list` operation lists the IDs of vectors in a single namespace of a serverless index. An optional prefix can be passed to limit the results to IDs with a common prefix.  `list` returns up to 100 IDs at a time by default in sorted order (bitwise/\"C\" collation). If the `limit` parameter is set, `list` returns up to that number of IDs instead. Whenever there are additional IDs to return, the response also includes a `pagination_token` that you can use to get the next batch of IDs. When the response does not include a `pagination_token`, there are no more IDs to return.  For guidance and examples, see [Get record IDs](https://docs.pinecone.io/docs/get-record-ids).  **Note:** `list` is supported only for serverless indexes.
     * List vector IDs
     */ DataPlaneApi.prototype.listRaw = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        queryParameters = {};
                        if (requestParameters.prefix !== undefined) {
                            queryParameters['prefix'] = requestParameters.prefix;
                        }
                        if (requestParameters.limit !== undefined) {
                            queryParameters['limit'] = requestParameters.limit;
                        }
                        if (requestParameters.paginationToken !== undefined) {
                            queryParameters['paginationToken'] = requestParameters.paginationToken;
                        }
                        if (requestParameters.namespace !== undefined) {
                            queryParameters['namespace'] = requestParameters.namespace;
                        }
                        headerParameters = {};
                        if (this.configuration && this.configuration.apiKey) {
                            headerParameters["Api-Key"] = this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
                        }
                        return [
                            4 /*yield*/ ,
                            this.request({
                                path: "/vectors/list",
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters
                            }, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            2 /*return*/ ,
                            new runtime.JSONApiResponse(response, function(jsonValue) {
                                return (0, index_1.ListResponseFromJSON)(jsonValue);
                            })
                        ];
                }
            });
        });
    };
    /**
     * The `list` operation lists the IDs of vectors in a single namespace of a serverless index. An optional prefix can be passed to limit the results to IDs with a common prefix.  `list` returns up to 100 IDs at a time by default in sorted order (bitwise/\"C\" collation). If the `limit` parameter is set, `list` returns up to that number of IDs instead. Whenever there are additional IDs to return, the response also includes a `pagination_token` that you can use to get the next batch of IDs. When the response does not include a `pagination_token`, there are no more IDs to return.  For guidance and examples, see [Get record IDs](https://docs.pinecone.io/docs/get-record-ids).  **Note:** `list` is supported only for serverless indexes.
     * List vector IDs
     */ DataPlaneApi.prototype.list = function(requestParameters, initOverrides) {
        if (requestParameters === void 0) {
            requestParameters = {};
        }
        return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.listRaw(requestParameters, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            4 /*yield*/ ,
                            response.value()
                        ];
                    case 2:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    /**
     * The `query` operation searches a namespace, using a query vector. It retrieves the ids of the most similar items in a namespace, along with their similarity scores.  For guidance and examples, see [Query data](https://docs.pinecone.io/docs/query-data).
     * Query vectors
     */ DataPlaneApi.prototype.queryRaw = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (requestParameters.queryRequest === null || requestParameters.queryRequest === undefined) {
                            throw new runtime.RequiredError('queryRequest', 'Required parameter requestParameters.queryRequest was null or undefined when calling query.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        if (this.configuration && this.configuration.apiKey) {
                            headerParameters["Api-Key"] = this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
                        }
                        return [
                            4 /*yield*/ ,
                            this.request({
                                path: "/query",
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.QueryRequestToJSON)(requestParameters.queryRequest)
                            }, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            2 /*return*/ ,
                            new runtime.JSONApiResponse(response, function(jsonValue) {
                                return (0, index_1.QueryResponseFromJSON)(jsonValue);
                            })
                        ];
                }
            });
        });
    };
    /**
     * The `query` operation searches a namespace, using a query vector. It retrieves the ids of the most similar items in a namespace, along with their similarity scores.  For guidance and examples, see [Query data](https://docs.pinecone.io/docs/query-data).
     * Query vectors
     */ DataPlaneApi.prototype.query = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.queryRaw(requestParameters, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            4 /*yield*/ ,
                            response.value()
                        ];
                    case 2:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    /**
     * The `update` operation updates a vector in a namespace. If a value is included, it will overwrite the previous value. If a `set_metadata` is included, the values of the fields specified in it will be added or overwrite the previous value.  For guidance and examples, see [Update data](https://docs.pinecone.io/docs/update-data).
     * Update a vector
     */ DataPlaneApi.prototype.updateRaw = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (requestParameters.updateRequest === null || requestParameters.updateRequest === undefined) {
                            throw new runtime.RequiredError('updateRequest', 'Required parameter requestParameters.updateRequest was null or undefined when calling update.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        if (this.configuration && this.configuration.apiKey) {
                            headerParameters["Api-Key"] = this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
                        }
                        return [
                            4 /*yield*/ ,
                            this.request({
                                path: "/vectors/update",
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.UpdateRequestToJSON)(requestParameters.updateRequest)
                            }, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            2 /*return*/ ,
                            new runtime.JSONApiResponse(response)
                        ];
                }
            });
        });
    };
    /**
     * The `update` operation updates a vector in a namespace. If a value is included, it will overwrite the previous value. If a `set_metadata` is included, the values of the fields specified in it will be added or overwrite the previous value.  For guidance and examples, see [Update data](https://docs.pinecone.io/docs/update-data).
     * Update a vector
     */ DataPlaneApi.prototype.update = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.updateRaw(requestParameters, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            4 /*yield*/ ,
                            response.value()
                        ];
                    case 2:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    /**
     * The `upsert` operation writes vectors into a namespace. If a new value is upserted for an existing vector ID, it will overwrite the previous value.  For guidance and examples, see [Upsert data](https://docs.pinecone.io/docs/upsert-data).
     * Upsert vectors
     */ DataPlaneApi.prototype.upsertRaw = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (requestParameters.upsertRequest === null || requestParameters.upsertRequest === undefined) {
                            throw new runtime.RequiredError('upsertRequest', 'Required parameter requestParameters.upsertRequest was null or undefined when calling upsert.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        if (this.configuration && this.configuration.apiKey) {
                            headerParameters["Api-Key"] = this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
                        }
                        return [
                            4 /*yield*/ ,
                            this.request({
                                path: "/vectors/upsert",
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.UpsertRequestToJSON)(requestParameters.upsertRequest)
                            }, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            2 /*return*/ ,
                            new runtime.JSONApiResponse(response, function(jsonValue) {
                                return (0, index_1.UpsertResponseFromJSON)(jsonValue);
                            })
                        ];
                }
            });
        });
    };
    /**
     * The `upsert` operation writes vectors into a namespace. If a new value is upserted for an existing vector ID, it will overwrite the previous value.  For guidance and examples, see [Upsert data](https://docs.pinecone.io/docs/upsert-data).
     * Upsert vectors
     */ DataPlaneApi.prototype.upsert = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.upsertRaw(requestParameters, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            4 /*yield*/ ,
                            response.value()
                        ];
                    case 2:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    return DataPlaneApi;
}(runtime.BaseAPI);
exports.DataPlaneApi = DataPlaneApi; //# sourceMappingURL=DataPlaneApi.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/apis/ManageIndexesApi.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
/* tslint:disable */ /* eslint-disable */ /**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */ var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ManageIndexesApi = void 0;
var runtime = __importStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)"));
var index_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/index.js [app-ssr] (ecmascript)");
/**
 *
 */ var ManageIndexesApi = function(_super) {
    __extends(ManageIndexesApi, _super);
    function ManageIndexesApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * This operation specifies the pod type and number of replicas for an index. It applies to pod-based indexes only. Serverless indexes scale automatically based on usage.
     * Configure an index
     */ ManageIndexesApi.prototype.configureIndexRaw = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (requestParameters.indexName === null || requestParameters.indexName === undefined) {
                            throw new runtime.RequiredError('indexName', 'Required parameter requestParameters.indexName was null or undefined when calling configureIndex.');
                        }
                        if (requestParameters.configureIndexRequest === null || requestParameters.configureIndexRequest === undefined) {
                            throw new runtime.RequiredError('configureIndexRequest', 'Required parameter requestParameters.configureIndexRequest was null or undefined when calling configureIndex.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        if (this.configuration && this.configuration.apiKey) {
                            headerParameters["Api-Key"] = this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
                        }
                        return [
                            4 /*yield*/ ,
                            this.request({
                                path: "/indexes/{index_name}".replace("{".concat("index_name", "}"), encodeURIComponent(String(requestParameters.indexName))),
                                method: 'PATCH',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.ConfigureIndexRequestToJSON)(requestParameters.configureIndexRequest)
                            }, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            2 /*return*/ ,
                            new runtime.JSONApiResponse(response, function(jsonValue) {
                                return (0, index_1.IndexModelFromJSON)(jsonValue);
                            })
                        ];
                }
            });
        });
    };
    /**
     * This operation specifies the pod type and number of replicas for an index. It applies to pod-based indexes only. Serverless indexes scale automatically based on usage.
     * Configure an index
     */ ManageIndexesApi.prototype.configureIndex = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.configureIndexRaw(requestParameters, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            4 /*yield*/ ,
                            response.value()
                        ];
                    case 2:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    /**
     * This operation creates a Pinecone collection. Serverless and starter indexes do not support collections.
     * Create a collection
     */ ManageIndexesApi.prototype.createCollectionRaw = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (requestParameters.createCollectionRequest === null || requestParameters.createCollectionRequest === undefined) {
                            throw new runtime.RequiredError('createCollectionRequest', 'Required parameter requestParameters.createCollectionRequest was null or undefined when calling createCollection.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        if (this.configuration && this.configuration.apiKey) {
                            headerParameters["Api-Key"] = this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
                        }
                        return [
                            4 /*yield*/ ,
                            this.request({
                                path: "/collections",
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.CreateCollectionRequestToJSON)(requestParameters.createCollectionRequest)
                            }, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            2 /*return*/ ,
                            new runtime.JSONApiResponse(response, function(jsonValue) {
                                return (0, index_1.CollectionModelFromJSON)(jsonValue);
                            })
                        ];
                }
            });
        });
    };
    /**
     * This operation creates a Pinecone collection. Serverless and starter indexes do not support collections.
     * Create a collection
     */ ManageIndexesApi.prototype.createCollection = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.createCollectionRaw(requestParameters, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            4 /*yield*/ ,
                            response.value()
                        ];
                    case 2:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    /**
     * This operation deploys a Pinecone index. This is where you specify the measure of similarity, the dimension of vectors to be stored in the index, which cloud provider you would like to deploy with, and more.  For guidance and examples, see [Create an index](https://docs.pinecone.io/docs/manage-indexes#create-a-serverless-index).
     * Create an index
     */ ManageIndexesApi.prototype.createIndexRaw = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (requestParameters.createIndexRequest === null || requestParameters.createIndexRequest === undefined) {
                            throw new runtime.RequiredError('createIndexRequest', 'Required parameter requestParameters.createIndexRequest was null or undefined when calling createIndex.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        headerParameters['Content-Type'] = 'application/json';
                        if (this.configuration && this.configuration.apiKey) {
                            headerParameters["Api-Key"] = this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
                        }
                        return [
                            4 /*yield*/ ,
                            this.request({
                                path: "/indexes",
                                method: 'POST',
                                headers: headerParameters,
                                query: queryParameters,
                                body: (0, index_1.CreateIndexRequestToJSON)(requestParameters.createIndexRequest)
                            }, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            2 /*return*/ ,
                            new runtime.JSONApiResponse(response, function(jsonValue) {
                                return (0, index_1.IndexModelFromJSON)(jsonValue);
                            })
                        ];
                }
            });
        });
    };
    /**
     * This operation deploys a Pinecone index. This is where you specify the measure of similarity, the dimension of vectors to be stored in the index, which cloud provider you would like to deploy with, and more.  For guidance and examples, see [Create an index](https://docs.pinecone.io/docs/manage-indexes#create-a-serverless-index).
     * Create an index
     */ ManageIndexesApi.prototype.createIndex = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.createIndexRaw(requestParameters, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            4 /*yield*/ ,
                            response.value()
                        ];
                    case 2:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    /**
     * This operation deletes an existing collection.  Serverless and starter indexes do not support collections.
     * Delete a collection
     */ ManageIndexesApi.prototype.deleteCollectionRaw = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (requestParameters.collectionName === null || requestParameters.collectionName === undefined) {
                            throw new runtime.RequiredError('collectionName', 'Required parameter requestParameters.collectionName was null or undefined when calling deleteCollection.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        if (this.configuration && this.configuration.apiKey) {
                            headerParameters["Api-Key"] = this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
                        }
                        return [
                            4 /*yield*/ ,
                            this.request({
                                path: "/collections/{collection_name}".replace("{".concat("collection_name", "}"), encodeURIComponent(String(requestParameters.collectionName))),
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters
                            }, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        if (this.isJsonMime(response.headers.get('content-type'))) {
                            return [
                                2 /*return*/ ,
                                new runtime.JSONApiResponse(response)
                            ];
                        } else {
                            return [
                                2 /*return*/ ,
                                new runtime.TextApiResponse(response)
                            ];
                        }
                        "TURBOPACK unreachable";
                }
            });
        });
    };
    /**
     * This operation deletes an existing collection.  Serverless and starter indexes do not support collections.
     * Delete a collection
     */ ManageIndexesApi.prototype.deleteCollection = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.deleteCollectionRaw(requestParameters, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            4 /*yield*/ ,
                            response.value()
                        ];
                    case 2:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    /**
     * This operation deletes an existing index.
     * Delete an index
     */ ManageIndexesApi.prototype.deleteIndexRaw = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (requestParameters.indexName === null || requestParameters.indexName === undefined) {
                            throw new runtime.RequiredError('indexName', 'Required parameter requestParameters.indexName was null or undefined when calling deleteIndex.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        if (this.configuration && this.configuration.apiKey) {
                            headerParameters["Api-Key"] = this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
                        }
                        return [
                            4 /*yield*/ ,
                            this.request({
                                path: "/indexes/{index_name}".replace("{".concat("index_name", "}"), encodeURIComponent(String(requestParameters.indexName))),
                                method: 'DELETE',
                                headers: headerParameters,
                                query: queryParameters
                            }, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            2 /*return*/ ,
                            new runtime.VoidApiResponse(response)
                        ];
                }
            });
        });
    };
    /**
     * This operation deletes an existing index.
     * Delete an index
     */ ManageIndexesApi.prototype.deleteIndex = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.deleteIndexRaw(requestParameters, initOverrides)
                        ];
                    case 1:
                        _a.sent();
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    /**
     * This operation gets a description of a collection.  Serverless and starter indexes do not support collections.
     * Describe a collection
     */ ManageIndexesApi.prototype.describeCollectionRaw = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (requestParameters.collectionName === null || requestParameters.collectionName === undefined) {
                            throw new runtime.RequiredError('collectionName', 'Required parameter requestParameters.collectionName was null or undefined when calling describeCollection.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        if (this.configuration && this.configuration.apiKey) {
                            headerParameters["Api-Key"] = this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
                        }
                        return [
                            4 /*yield*/ ,
                            this.request({
                                path: "/collections/{collection_name}".replace("{".concat("collection_name", "}"), encodeURIComponent(String(requestParameters.collectionName))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters
                            }, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            2 /*return*/ ,
                            new runtime.JSONApiResponse(response, function(jsonValue) {
                                return (0, index_1.CollectionModelFromJSON)(jsonValue);
                            })
                        ];
                }
            });
        });
    };
    /**
     * This operation gets a description of a collection.  Serverless and starter indexes do not support collections.
     * Describe a collection
     */ ManageIndexesApi.prototype.describeCollection = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.describeCollectionRaw(requestParameters, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            4 /*yield*/ ,
                            response.value()
                        ];
                    case 2:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    /**
     * Get a description of an index.
     * Describe an index
     */ ManageIndexesApi.prototype.describeIndexRaw = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (requestParameters.indexName === null || requestParameters.indexName === undefined) {
                            throw new runtime.RequiredError('indexName', 'Required parameter requestParameters.indexName was null or undefined when calling describeIndex.');
                        }
                        queryParameters = {};
                        headerParameters = {};
                        if (this.configuration && this.configuration.apiKey) {
                            headerParameters["Api-Key"] = this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
                        }
                        return [
                            4 /*yield*/ ,
                            this.request({
                                path: "/indexes/{index_name}".replace("{".concat("index_name", "}"), encodeURIComponent(String(requestParameters.indexName))),
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters
                            }, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            2 /*return*/ ,
                            new runtime.JSONApiResponse(response, function(jsonValue) {
                                return (0, index_1.IndexModelFromJSON)(jsonValue);
                            })
                        ];
                }
            });
        });
    };
    /**
     * Get a description of an index.
     * Describe an index
     */ ManageIndexesApi.prototype.describeIndex = function(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.describeIndexRaw(requestParameters, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            4 /*yield*/ ,
                            response.value()
                        ];
                    case 2:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    /**
     * This operation returns a list of all collections in a project. Serverless and starter indexes do not support collections.
     * List collections
     */ ManageIndexesApi.prototype.listCollectionsRaw = function(initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        queryParameters = {};
                        headerParameters = {};
                        if (this.configuration && this.configuration.apiKey) {
                            headerParameters["Api-Key"] = this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
                        }
                        return [
                            4 /*yield*/ ,
                            this.request({
                                path: "/collections",
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters
                            }, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            2 /*return*/ ,
                            new runtime.JSONApiResponse(response, function(jsonValue) {
                                return (0, index_1.CollectionListFromJSON)(jsonValue);
                            })
                        ];
                }
            });
        });
    };
    /**
     * This operation returns a list of all collections in a project. Serverless and starter indexes do not support collections.
     * List collections
     */ ManageIndexesApi.prototype.listCollections = function(initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.listCollectionsRaw(initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            4 /*yield*/ ,
                            response.value()
                        ];
                    case 2:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    /**
     * This operation returns a list of all indexes in a project.
     * List indexes
     */ ManageIndexesApi.prototype.listIndexesRaw = function(initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var queryParameters, headerParameters, response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        queryParameters = {};
                        headerParameters = {};
                        if (this.configuration && this.configuration.apiKey) {
                            headerParameters["Api-Key"] = this.configuration.apiKey("Api-Key"); // ApiKeyAuth authentication
                        }
                        return [
                            4 /*yield*/ ,
                            this.request({
                                path: "/indexes",
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters
                            }, initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            2 /*return*/ ,
                            new runtime.JSONApiResponse(response, function(jsonValue) {
                                return (0, index_1.IndexListFromJSON)(jsonValue);
                            })
                        ];
                }
            });
        });
    };
    /**
     * This operation returns a list of all indexes in a project.
     * List indexes
     */ ManageIndexesApi.prototype.listIndexes = function(initOverrides) {
        return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this.listIndexesRaw(initOverrides)
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            4 /*yield*/ ,
                            response.value()
                        ];
                    case 2:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    return ManageIndexesApi;
}(runtime.BaseAPI);
exports.ManageIndexesApi = ManageIndexesApi; //# sourceMappingURL=ManageIndexesApi.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/apis/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
/* tslint:disable */ /* eslint-disable */ __exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/apis/DataPlaneApi.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/apis/ManageIndexesApi.js [app-ssr] (ecmascript)"), exports); //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
/* tslint:disable */ /* eslint-disable */ __exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/runtime.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/apis/index.js [app-ssr] (ecmascript)"), exports);
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/models/index.js [app-ssr] (ecmascript)"), exports); //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/utils/debugLog.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.debugLog = void 0;
var debugLog = function(str) {
    if (typeof process !== 'undefined' && process && process.env && process.env.PINECONE_DEBUG) {
        console.log(str);
    }
};
exports.debugLog = debugLog; //# sourceMappingURL=debugLog.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/utils/normalizeUrl.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.normalizeUrl = void 0;
function normalizeUrl(url) {
    if (!url || url.trim().length === 0) {
        return;
    }
    if (!url.startsWith('http://') && !url.startsWith('https://')) {
        return 'https://' + url;
    }
    return url;
}
exports.normalizeUrl = normalizeUrl; //# sourceMappingURL=normalizeUrl.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/utils/queryParamsStringify.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.queryParamsStringify = void 0;
// Everything in this file is lifted from the generated openapi runtime.
// I need to create a small modification of the generated queryParamStringify
// function in order to fix an issue with array params.
//
// See https://github.com/pinecone-io/pinecone-ts-client/pull/74
function queryParamsStringify(params, prefix) {
    if (prefix === void 0) {
        prefix = '';
    }
    return Object.keys(params).map(function(key) {
        return querystringSingleKey(key, params[key], prefix);
    }).filter(function(part) {
        return part.length > 0;
    }).join('&');
}
exports.queryParamsStringify = queryParamsStringify;
function querystringSingleKey(key, value, keyPrefix) {
    if (keyPrefix === void 0) {
        keyPrefix = '';
    }
    var fullKey = keyPrefix + (keyPrefix.length ? "[".concat(key, "]") : key);
    // This is a one line change from the default querystring implementation. Checking
    // with `Array.isArray` instead of `value instanceof Array` allows us to get the
    // the correct behavior when stringifying array params.
    if (Array.isArray(value)) {
        var multiValue = value.map(function(singleValue) {
            return encodeURIComponent(String(singleValue));
        }).join("&".concat(encodeURIComponent(fullKey), "="));
        return "".concat(encodeURIComponent(fullKey), "=").concat(multiValue);
    }
    if (value instanceof Set) {
        var valueAsArray = Array.from(value);
        return querystringSingleKey(key, valueAsArray, keyPrefix);
    }
    if (value instanceof Date) {
        return "".concat(encodeURIComponent(fullKey), "=").concat(encodeURIComponent(value.toISOString()));
    }
    if (value instanceof Object) {
        return queryParamsStringify(value, fullKey);
    }
    return "".concat(encodeURIComponent(fullKey), "=").concat(encodeURIComponent(String(value)));
} //# sourceMappingURL=queryParamsStringify.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/utils/environment.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isEdge = void 0;
var isEdge = function() {
    // This is the recommended way to detect
    // running in the Edge Runtime according
    // to Vercel docs.
    return typeof EdgeRuntime === 'string';
};
exports.isEdge = isEdge; //# sourceMappingURL=environment.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/version.json (json)": ((__turbopack_context__) => {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_export_value__(JSON.parse("{\"name\":\"@pinecone-database/pinecone\",\"version\":\"2.2.1\"}"));}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/utils/user-agent.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.buildUserAgent = void 0;
var environment_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/utils/environment.js [app-ssr] (ecmascript)");
var packageInfo = __importStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/version.json (json)"));
var buildUserAgent = function(config) {
    // We always want to include the package name and version
    // along with the langauge name to help distinguish these
    // requests from those emitted by other clients
    var userAgentParts = [
        "".concat(packageInfo.name, " v").concat(packageInfo.version),
        'lang=typescript'
    ];
    if ((0, environment_1.isEdge)()) {
        userAgentParts.push('Edge Runtime');
    }
    // If available, capture information about the Node.js version
    if (typeof process !== 'undefined' && process && process.version) {
        userAgentParts.push("node ".concat(process.version));
    }
    if (config.sourceTag) {
        userAgentParts.push("source_tag=".concat(normalizeSourceTag(config.sourceTag)));
    }
    return userAgentParts.join('; ');
};
exports.buildUserAgent = buildUserAgent;
var normalizeSourceTag = function(sourceTag) {
    if (!sourceTag) {
        return;
    }
    /**
     * normalize sourceTag
     * 1. Lowercase
     * 2. Limit charset to [a-z0-9_ ]
     * 3. Trim left/right spaces
     * 4. Condense multiple spaces to one, and replace with underscore
     */ return sourceTag.toLowerCase().replace(/[^a-z0-9_ ]/g, '').trim().replace(/[ ]+/g, '_');
}; //# sourceMappingURL=user-agent.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/utils/fetch.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getFetch = void 0;
var cross_fetch_1 = __importDefault(__turbopack_require__("[project]/node_modules/cross-fetch/dist/node-ponyfill.js [app-ssr] (ecmascript)"));
var getFetch = function(config) {
    if (config.fetchApi) {
        // User-provided fetch implementation, if any, takes precedence.
        return config.fetchApi;
    } else if (global.fetch) {
        // If a fetch implementation is already present in the global
        // scope, use that. This should prevent confusing failures in
        // nextjs projects where @vercel/fetch is mandated and
        // other implementations are stubbed out.
        return global.fetch;
    } else {
        // Use ponyfill as last resort
        return cross_fetch_1.default;
    }
};
exports.getFetch = getFetch; //# sourceMappingURL=fetch.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/utils/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getFetch = exports.buildUserAgent = exports.queryParamsStringify = exports.normalizeUrl = exports.debugLog = void 0;
var debugLog_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/utils/debugLog.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "debugLog", {
    enumerable: true,
    get: function() {
        return debugLog_1.debugLog;
    }
});
var normalizeUrl_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/utils/normalizeUrl.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "normalizeUrl", {
    enumerable: true,
    get: function() {
        return normalizeUrl_1.normalizeUrl;
    }
});
var queryParamsStringify_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/utils/queryParamsStringify.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "queryParamsStringify", {
    enumerable: true,
    get: function() {
        return queryParamsStringify_1.queryParamsStringify;
    }
});
var user_agent_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/utils/user-agent.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "buildUserAgent", {
    enumerable: true,
    get: function() {
        return user_agent_1.buildUserAgent;
    }
});
var fetch_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/utils/fetch.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "getFetch", {
    enumerable: true,
    get: function() {
        return fetch_1.getFetch;
    }
}); //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/errors/base.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BasePineconeError = void 0;
var BasePineconeError = function(_super) {
    __extends(BasePineconeError, _super);
    function BasePineconeError(message, cause) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        // Set the prototype explicitly to ensure instanceof works correctly
        Object.setPrototypeOf(_this, _newTarget.prototype);
        // Maintain a proper stack trace in V8 environments (Chrome and Node.js)
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, _newTarget);
        }
        _this.name = _this.constructor.name;
        _this.cause = cause;
        return _this;
    }
    return BasePineconeError;
}(Error);
exports.BasePineconeError = BasePineconeError; //# sourceMappingURL=base.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/errors/config.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PineconeUnableToResolveHostError = exports.PineconeEnvironmentVarsNotSupportedError = exports.PineconeUnexpectedResponseError = exports.PineconeConfigurationError = void 0;
var base_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/base.js [app-ssr] (ecmascript)");
var CONFIG_HELP = "You can find the configuration values for your project in the Pinecone developer console at https://app.pinecone.io";
/**
 * This exception indicates there is a problem with the configuration values
 * you have provided to the client. The error message should contain additional
 * context about what you are missing.
 *
 * @see {@link Pinecone} for information about initializing the client.
 */ var PineconeConfigurationError = function(_super) {
    __extends(PineconeConfigurationError, _super);
    function PineconeConfigurationError(message) {
        var _this = _super.call(this, "".concat(message, " ").concat(CONFIG_HELP)) || this;
        _this.name = 'PineconeConfigurationError';
        return _this;
    }
    return PineconeConfigurationError;
}(base_1.BasePineconeError);
exports.PineconeConfigurationError = PineconeConfigurationError;
/**
 * This exception indicates an API call that returned a response that was
 * unable to be parsed or that did not include expected fields. It's not
 * expected to ever occur.
 *
 * If you encounter this error, please [file an issue](https://github.com/pinecone-io/pinecone-ts-client/issues) so we can investigate.
 */ var PineconeUnexpectedResponseError = function(_super) {
    __extends(PineconeUnexpectedResponseError, _super);
    function PineconeUnexpectedResponseError(url, status, body, message) {
        var _this = _super.call(this, "Unexpected response while calling ".concat(url, ". ").concat(message ? message + ' ' : '', "Status: ").concat(status, ". Body: ").concat(body)) || this;
        _this.name = 'PineconeUnexpectedResponseError';
        return _this;
    }
    return PineconeUnexpectedResponseError;
}(base_1.BasePineconeError);
exports.PineconeUnexpectedResponseError = PineconeUnexpectedResponseError;
/**
 * This error occurs when the client tries to read environment variables in
 * an environment that does not have access to the Node.js global `process.env`.
 *
 * If you are seeing this error, you will need to configure the client by passing
 * configuration values to the `Pinecone` constructor.
 *
 * ```typescript
 * import { Pinecone } from '@pinecone-database/pinecone';
 *
 * const pinecone = new Pinecone({
 *    apiKey: 'YOUR_API_KEY',
 * })
 * ```
 *
 * @see Instructions for configuring { @link Pinecone }
 */ var PineconeEnvironmentVarsNotSupportedError = function(_super) {
    __extends(PineconeEnvironmentVarsNotSupportedError, _super);
    function PineconeEnvironmentVarsNotSupportedError(message) {
        var _this = _super.call(this, message) || this;
        _this.name = 'PineconeEnvironmentVarsNotSupportedError';
        return _this;
    }
    return PineconeEnvironmentVarsNotSupportedError;
}(base_1.BasePineconeError);
exports.PineconeEnvironmentVarsNotSupportedError = PineconeEnvironmentVarsNotSupportedError;
/**
 * This error occurs when the client is unable to resolve the database host for a given
 * index. This is unexpected to occur unless there is a problem with the Pinecone service.
 *
 * If you encounter this error, please [file an issue](https://github.com/pinecone-io/pinecone-ts-client/issues) so we can investigate.
 */ var PineconeUnableToResolveHostError = function(_super) {
    __extends(PineconeUnableToResolveHostError, _super);
    function PineconeUnableToResolveHostError(message) {
        var _this = _super.call(this, message) || this;
        _this.name = 'PineconeUnableToResolveHostError';
        return _this;
    }
    return PineconeUnableToResolveHostError;
}(base_1.BasePineconeError);
exports.PineconeUnableToResolveHostError = PineconeUnableToResolveHostError; //# sourceMappingURL=config.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/errors/http.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.mapHttpStatusError = exports.PineconeUnmappedHttpError = exports.PineconeNotImplementedError = exports.PineconeInternalServerError = exports.PineconeConflictError = exports.PineconeNotFoundError = exports.PineconeAuthorizationError = exports.PineconeBadRequestError = void 0;
var base_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/base.js [app-ssr] (ecmascript)");
var CONFIG_HELP = "You can find the configuration values for your project in the Pinecone developer console at https://app.pinecone.io";
/** This error is thrown when API requests return with status 400. Typically this is due to some aspect of the request being incorrect or invalid.
 *
 * Some examples when this error could occur:
 * - While attempting to create an index with no available quota in your project.
 * - While upserting records that do not match the `dimension` of your index
 * - While attempting to create an index using an invalid name ("!@#$%")
 */ var PineconeBadRequestError = function(_super) {
    __extends(PineconeBadRequestError, _super);
    function PineconeBadRequestError(failedRequest) {
        var _this = this;
        var message = failedRequest.message;
        _this = _super.call(this, message) || this;
        _this.name = 'PineconeBadRequestError';
        return _this;
    }
    return PineconeBadRequestError;
}(base_1.BasePineconeError);
exports.PineconeBadRequestError = PineconeBadRequestError;
/**
 * This error occurs when API requests are attempted using invalid configurations such as a mispelled or revoked API key.
 *
 * Log in to https://app.pinecone.io to verify you have configured the { @link Pinecone }
 * client using the correct values.
 */ var PineconeAuthorizationError = function(_super) {
    __extends(PineconeAuthorizationError, _super);
    function PineconeAuthorizationError(failedRequest) {
        var _this = this;
        var url = failedRequest.url;
        if (url) {
            _this = _super.call(this, "The API key you provided was rejected while calling ".concat(url, ". Please check your configuration values and try again. ").concat(CONFIG_HELP)) || this;
        } else {
            _this = _super.call(this, "The API key you provided was rejected. Please check your configuration values and try again. ".concat(CONFIG_HELP)) || this;
        }
        _this.name = 'PineconeAuthorizationError';
        return _this;
    }
    return PineconeAuthorizationError;
}(base_1.BasePineconeError);
exports.PineconeAuthorizationError = PineconeAuthorizationError;
/**
 * This error is thrown when interacting with a resource such as an index or collection
 * that cannot be found.
 */ var PineconeNotFoundError = function(_super) {
    __extends(PineconeNotFoundError, _super);
    function PineconeNotFoundError(failedRequest) {
        var _this = this;
        var url = failedRequest.url;
        if (url) {
            _this = _super.call(this, "A call to ".concat(url, " returned HTTP status 404.")) || this;
        } else {
            _this = _super.call(this, 'The requested resource could not be found.') || this;
        }
        _this.name = 'PineconeNotFoundError';
        return _this;
    }
    return PineconeNotFoundError;
}(base_1.BasePineconeError);
exports.PineconeNotFoundError = PineconeNotFoundError;
/**
 * This error is thrown when attempting to create a resource such as an index or
 * collection with a name that is already in use.
 * */ var PineconeConflictError = function(_super) {
    __extends(PineconeConflictError, _super);
    function PineconeConflictError(failedRequest) {
        var _this = this;
        var url = failedRequest.url, message = failedRequest.message;
        if (url) {
            _this = _super.call(this, "A call to ".concat(url, " returned HTTP status 409. ").concat(message ? message : '')) || this;
        } else {
            _this = _super.call(this, 'The resource you are attempting to create already exists.') || this;
        }
        _this.name = 'PineconeConflictError';
        return _this;
    }
    return PineconeConflictError;
}(base_1.BasePineconeError);
exports.PineconeConflictError = PineconeConflictError;
/**
 * This error indicates API responses are returning with status 500 and
 * something is wrong with Pinecone. Check the [status page](https://status.pinecone.io/)
 * for information about current or recent outages.
 *
 * @see [Pinecone's status page](https://status.pinecone.io/)
 */ var PineconeInternalServerError = function(_super) {
    __extends(PineconeInternalServerError, _super);
    function PineconeInternalServerError(failedRequest) {
        var _this = this;
        var url = failedRequest.url, body = failedRequest.body;
        var intro = url ? "An internal server error occured while calling the ".concat(url, " endpoint.") : '';
        var help = "To see overall service health and learn whether this seems like a large-scale problem or one specific to your request, please go to https://status.pinecone.io/ to view our status page. If you believe the error reflects a problem with this client, please file a bug report in the github issue tracker at https://github.com/pinecone-io/pinecone-ts-client";
        var bodyMessage = body ? "Body: ".concat(body) : '';
        _this = _super.call(this, [
            intro,
            help,
            bodyMessage
        ].join(' ').trim()) || this;
        _this.name = 'PineconeInternalServerError';
        return _this;
    }
    return PineconeInternalServerError;
}(base_1.BasePineconeError);
exports.PineconeInternalServerError = PineconeInternalServerError;
/**
 * This error is thrown when you are attempting to use a feature that is
 * not implemented or unavailable to you on your current plan. Free indexes
 * only support a subset of Pinecone's capabilities, and if you are seeing
 * these exceptions then you should consult the
 * [pricing page](https://www.pinecone.io/pricing/) to see whether upgrading
 * makes sense for your use case.
 */ var PineconeNotImplementedError = function(_super) {
    __extends(PineconeNotImplementedError, _super);
    function PineconeNotImplementedError(requestInfo) {
        var _this = this;
        var url = requestInfo.url, message = requestInfo.message;
        if (url) {
            _this = _super.call(this, "A call to ".concat(url, " returned HTTP status 501. ").concat(message ? message : '')) || this;
        } else {
            _this = _super.call(this) || this;
        }
        _this.name = 'PineconeNotImplementedError';
        return _this;
    }
    return PineconeNotImplementedError;
}(base_1.BasePineconeError);
exports.PineconeNotImplementedError = PineconeNotImplementedError;
/**
 * This catch-all exception is thrown when a request error that is not
 * specifically mapped to another exception is thrown.
 */ var PineconeUnmappedHttpError = function(_super) {
    __extends(PineconeUnmappedHttpError, _super);
    function PineconeUnmappedHttpError(failedRequest) {
        var _this = this;
        var url = failedRequest.url, status = failedRequest.status, body = failedRequest.body, message = failedRequest.message;
        var intro = url ? "An unexpected error occured while calling the ".concat(url, " endpoint. ") : '';
        var statusMsg = status ? "Status: ".concat(status, ". ") : '';
        var bodyMsg = body ? "Body: ".concat(body) : '';
        _this = _super.call(this, [
            intro,
            message,
            statusMsg,
            bodyMsg
        ].join(' ').trim()) || this;
        _this.name = 'PineconeUnmappedHttpError';
        return _this;
    }
    return PineconeUnmappedHttpError;
}(base_1.BasePineconeError);
exports.PineconeUnmappedHttpError = PineconeUnmappedHttpError;
/** @internal */ var mapHttpStatusError = function(failedRequestInfo) {
    switch(failedRequestInfo.status){
        case 400:
            return new PineconeBadRequestError(failedRequestInfo);
        case 401:
            return new PineconeAuthorizationError(failedRequestInfo);
        case 404:
            return new PineconeNotFoundError(failedRequestInfo);
        case 409:
            return new PineconeConflictError(failedRequestInfo);
        case 500:
            return new PineconeInternalServerError(failedRequestInfo);
        case 501:
            return new PineconeNotImplementedError(failedRequestInfo);
        default:
            throw new PineconeUnmappedHttpError(failedRequestInfo);
    }
};
exports.mapHttpStatusError = mapHttpStatusError; //# sourceMappingURL=http.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/errors/request.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PineconeRequestError = exports.PineconeConnectionError = void 0;
var base_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/base.js [app-ssr] (ecmascript)");
/**
 * This error is thrown when the client attempts to make a
 * request and never receives any response.
 *
 * This could be due to:
 * - Network problems which prevent the request from being completed.
 * - An outage of Pinecone's APIs. See [Pinecone's status page](https://status.pinecone.io/) to find out whether there is an ongoing incident.
 *
 * The `cause` property will contain a reference to the underlying error. Inspect its value to find out more about the root cause of the error.
 * ```
 * import { Pinecone } from '@pinecone-database/pinecone';
 *
 * const p = new Pinecone({ apiKey: 'invalid-api-key-value' })
 *
 * try {
 *  await p.listIndexes();
 * } catch (e) {
 *  console.log(e.name); // PineconeConnectionError
 *  console.log(e.cause); // Error [FetchError]: The request failed and the interceptors did not return an alternative response
 *  console.log(e.cause.cause); // TypeError: fetch failed
 *  console.log(e.cause.cause.cause); // Error: getaddrinfo ENOTFOUND controller.wrong-environment.pinecone.io
 * }
 * ```
 *
 * @see [Pinecone's status page](https://status.pinecone.io/)
 * */ var PineconeConnectionError = function(_super) {
    __extends(PineconeConnectionError, _super);
    function PineconeConnectionError(e, url) {
        var _this = this;
        var urlMessage = '';
        if (url) {
            urlMessage = " while calling ".concat(url);
        }
        _this = _super.call(this, "Request failed to reach Pinecone".concat(urlMessage, ". This can occur for reasons such as network problems that prevent the request from being completed, or a Pinecone API outage. Check your network connection, and visit https://status.pinecone.io/ to see whether any outages are ongoing."), e) || this;
        _this.name = 'PineconeConnectionError';
        return _this;
    }
    return PineconeConnectionError;
}(base_1.BasePineconeError);
exports.PineconeConnectionError = PineconeConnectionError;
/**
 * This error is thrown any time a request to the Pinecone API fails.
 *
 * The `cause` property will contain a reference to the underlying error. Inspect its value to find out more about the root cause.
 */ var PineconeRequestError = function(_super) {
    __extends(PineconeRequestError, _super);
    function PineconeRequestError(context) {
        var _this = this;
        if (context.response) {
            _this = _super.call(this, "Request failed during a call to ".concat(context.init.method, " ").concat(context.url, " with status ").concat(context.response.status), context.error) || this;
        } else {
            _this = _super.call(this, "Request failed during a call to ".concat(context.init.method, " ").concat(context.url), context.error) || this;
        }
        return _this;
    }
    return PineconeRequestError;
}(base_1.BasePineconeError);
exports.PineconeRequestError = PineconeRequestError; //# sourceMappingURL=request.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/errors/validation.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __extends = this && this.__extends || function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || ({
            __proto__: []
        }) instanceof Array && function(d, b) {
            d.__proto__ = b;
        } || function(d, b) {
            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
    };
    return function(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PineconeArgumentError = void 0;
var base_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/base.js [app-ssr] (ecmascript)");
/**
 * This error is thrown when arguments passed to a Pinecone
 * client method fail a runtime validation.
 */ var PineconeArgumentError = function(_super) {
    __extends(PineconeArgumentError, _super);
    function PineconeArgumentError(message) {
        var _this = _super.call(this, "".concat(message)) || this;
        _this.name = 'PineconeArgumentError';
        return _this;
    }
    return PineconeArgumentError;
}(base_1.BasePineconeError);
exports.PineconeArgumentError = PineconeArgumentError; //# sourceMappingURL=validation.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/errors/utils.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.extractMessage = void 0;
/** @internal */ var extractMessage = function(error) {
    return __awaiter(void 0, void 0, void 0, function() {
        var message, messageJSON;
        return __generator(this, function(_a) {
            switch(_a.label){
                case 0:
                    return [
                        4 /*yield*/ ,
                        error.response.text()
                    ];
                case 1:
                    message = _a.sent();
                    // Error response is sometimes the raw message, sometimes it's JSON
                    // so we will try to parse out the actual message text, but
                    // we wrap it in a try to avoid crashing in a way that obscures
                    // the actual error if the response format changes in the future.
                    try {
                        messageJSON = JSON.parse(message);
                        if (messageJSON.message) {
                            message = messageJSON.message;
                        }
                    } catch (e) {
                    // noop
                    }
                    return [
                        2 /*return*/ ,
                        message
                    ];
            }
        });
    });
};
exports.extractMessage = extractMessage; //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/errors/handling.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.handleApiError = void 0;
var utils_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/utils.js [app-ssr] (ecmascript)");
var http_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/http.js [app-ssr] (ecmascript)");
var request_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/request.js [app-ssr] (ecmascript)");
/** @internal */ var handleApiError = function(e, customMessage, url) {
    return __awaiter(void 0, void 0, void 0, function() {
        var responseError, rawMessage, statusCode, message, _a, err;
        return __generator(this, function(_b) {
            switch(_b.label){
                case 0:
                    if (!(e instanceof Error && e.name === 'ResponseError')) return [
                        3 /*break*/ ,
                        5
                    ];
                    responseError = e;
                    return [
                        4 /*yield*/ ,
                        (0, utils_1.extractMessage)(responseError)
                    ];
                case 1:
                    rawMessage = _b.sent();
                    statusCode = responseError.response.status;
                    if (!customMessage) return [
                        3 /*break*/ ,
                        3
                    ];
                    return [
                        4 /*yield*/ ,
                        customMessage(statusCode, rawMessage)
                    ];
                case 2:
                    _a = _b.sent();
                    return [
                        3 /*break*/ ,
                        4
                    ];
                case 3:
                    _a = rawMessage;
                    _b.label = 4;
                case 4:
                    message = _a;
                    return [
                        2 /*return*/ ,
                        (0, http_1.mapHttpStatusError)({
                            status: responseError.response.status,
                            url: responseError.response.url || url,
                            message: message
                        })
                    ];
                case 5:
                    if (e instanceof request_1.PineconeConnectionError) {
                        // If we've already wrapped this error, just return it
                        return [
                            2 /*return*/ ,
                            e
                        ];
                    } else {
                        err = e;
                        return [
                            2 /*return*/ ,
                            new request_1.PineconeConnectionError(err)
                        ];
                    }
                    _b.label = 6;
                case 6:
                    return [
                        2 /*return*/ 
                    ];
            }
        });
    });
};
exports.handleApiError = handleApiError; //# sourceMappingURL=handling.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/errors/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.handleApiError = exports.extractMessage = exports.PineconeArgumentError = exports.BasePineconeError = exports.PineconeRequestError = exports.PineconeConnectionError = exports.PineconeUnableToResolveHostError = exports.PineconeEnvironmentVarsNotSupportedError = exports.PineconeUnexpectedResponseError = exports.PineconeConfigurationError = void 0;
var config_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/config.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "PineconeConfigurationError", {
    enumerable: true,
    get: function() {
        return config_1.PineconeConfigurationError;
    }
});
Object.defineProperty(exports, "PineconeUnexpectedResponseError", {
    enumerable: true,
    get: function() {
        return config_1.PineconeUnexpectedResponseError;
    }
});
Object.defineProperty(exports, "PineconeEnvironmentVarsNotSupportedError", {
    enumerable: true,
    get: function() {
        return config_1.PineconeEnvironmentVarsNotSupportedError;
    }
});
Object.defineProperty(exports, "PineconeUnableToResolveHostError", {
    enumerable: true,
    get: function() {
        return config_1.PineconeUnableToResolveHostError;
    }
});
__exportStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/http.js [app-ssr] (ecmascript)"), exports);
var request_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/request.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "PineconeConnectionError", {
    enumerable: true,
    get: function() {
        return request_1.PineconeConnectionError;
    }
});
Object.defineProperty(exports, "PineconeRequestError", {
    enumerable: true,
    get: function() {
        return request_1.PineconeRequestError;
    }
});
var base_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/base.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "BasePineconeError", {
    enumerable: true,
    get: function() {
        return base_1.BasePineconeError;
    }
});
var validation_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/validation.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "PineconeArgumentError", {
    enumerable: true,
    get: function() {
        return validation_1.PineconeArgumentError;
    }
});
var utils_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/utils.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "extractMessage", {
    enumerable: true,
    get: function() {
        return utils_1.extractMessage;
    }
});
var handling_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/handling.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "handleApiError", {
    enumerable: true,
    get: function() {
        return handling_1.handleApiError;
    }
}); //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/utils/middleware.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
var __spreadArray = this && this.__spreadArray || function(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.middleware = void 0;
var pinecone_generated_ts_fetch_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/index.js [app-ssr] (ecmascript)");
var errors_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/index.js [app-ssr] (ecmascript)");
var debugMiddleware = [];
var chalk = function(str, color) {
    var colors = {
        blue: '\x1b[34m',
        red: '\x1b[31m',
        green: '\x1b[32m',
        yellow: '\x1b[33m'
    };
    return colors[color] + str + '\x1b[39m';
};
/**
 * Enable the `PINECONE_DEBUG` environment variable to print the request and
 * response bodies for each request.
 *
 * Api-Key headers will be redacted.
 */ if (typeof process !== 'undefined' && process && process.env && process.env.PINECONE_DEBUG) {
    var debugLogMiddleware = {
        pre: function(context) {
            return __awaiter(void 0, void 0, void 0, function() {
                var headers;
                return __generator(this, function(_a) {
                    console.debug(chalk(">>> Request: ".concat(context.init.method, " ").concat(context.url), 'blue'));
                    headers = JSON.parse(JSON.stringify(context.init.headers));
                    headers['Api-Key'] = '***REDACTED***';
                    console.debug(chalk(">>> Headers: ".concat(JSON.stringify(headers)), 'blue'));
                    if (context.init.body) {
                        console.debug(chalk(">>> Body: ".concat(context.init.body), 'blue'));
                    }
                    console.debug('');
                    return [
                        2 /*return*/ 
                    ];
                });
            });
        },
        post: function(context) {
            return __awaiter(void 0, void 0, void 0, function() {
                var _a, _b, _c, _d;
                return __generator(this, function(_e) {
                    switch(_e.label){
                        case 0:
                            console.debug(chalk("<<< Status: ".concat(context.response.status), 'green'));
                            _b = (_a = console).debug;
                            _c = chalk;
                            _d = "<<< Body: ".concat;
                            return [
                                4 /*yield*/ ,
                                context.response.text()
                            ];
                        case 1:
                            _b.apply(_a, [
                                _c.apply(void 0, [
                                    _d.apply("<<< Body: ", [
                                        _e.sent()
                                    ]),
                                    'green'
                                ])
                            ]);
                            console.debug('');
                            return [
                                2 /*return*/ 
                            ];
                    }
                });
            });
        }
    };
    debugMiddleware.push(debugLogMiddleware);
}
/**
 * Enable the `PINECONE_DEBUG_CURL` environment variable to print the equivalent
 * curl commands for each request. These commands will include the API key and
 * other sensitive information, so be careful when using this option.
 */ if (typeof process !== 'undefined' && process && process.env && process.env.PINECONE_DEBUG_CURL) {
    var debugCurlMiddleware = {
        post: function(context) {
            return __awaiter(void 0, void 0, void 0, function() {
                var headers, cmd;
                return __generator(this, function(_a) {
                    headers = "-H \"Api-Key: ".concat((context.init.headers || {})['Api-Key'], "\"");
                    if (context.init.headers && context.init.headers['Content-Type']) {
                        headers += " -H \"Content-Type: ".concat(context.init.headers['Content-Type'], "\"");
                    }
                    cmd = "curl -X ".concat(context.init.method, " ").concat(context.url, " ").concat(headers, " ").concat(context.init.body ? "-d '".concat(context.init.body, "'") : '');
                    console.debug(chalk(cmd, 'red'));
                    console.debug('');
                    return [
                        2 /*return*/ 
                    ];
                });
            });
        }
    };
    debugMiddleware.push(debugCurlMiddleware);
}
exports.middleware = __spreadArray(__spreadArray([], debugMiddleware, true), [
    {
        onError: function(context) {
            return __awaiter(void 0, void 0, void 0, function() {
                var err;
                return __generator(this, function(_a) {
                    switch(_a.label){
                        case 0:
                            return [
                                4 /*yield*/ ,
                                (0, errors_1.handleApiError)(context.error, undefined, context.url)
                            ];
                        case 1:
                            err = _a.sent();
                            throw err;
                    }
                });
            });
        },
        post: function(context) {
            return __awaiter(void 0, void 0, void 0, function() {
                var response, err;
                return __generator(this, function(_a) {
                    switch(_a.label){
                        case 0:
                            response = context.response;
                            if (!(response.status >= 200 && response.status < 300)) return [
                                3 /*break*/ ,
                                1
                            ];
                            return [
                                2 /*return*/ ,
                                response
                            ];
                        case 1:
                            return [
                                4 /*yield*/ ,
                                (0, errors_1.handleApiError)(new pinecone_generated_ts_fetch_1.ResponseError(response, 'Response returned an error'), undefined, context.url)
                            ];
                        case 2:
                            err = _a.sent();
                            throw err;
                    }
                });
            });
        }
    }
], false); //# sourceMappingURL=middleware.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/control/indexOperationsBuilder.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __assign = this && this.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.indexOperationsBuilder = void 0;
var pinecone_generated_ts_fetch_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/index.js [app-ssr] (ecmascript)");
var utils_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/utils/index.js [app-ssr] (ecmascript)");
var middleware_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/utils/middleware.js [app-ssr] (ecmascript)");
var indexOperationsBuilder = function(config) {
    var apiKey = config.apiKey;
    var controllerPath = (0, utils_1.normalizeUrl)(config.controllerHostUrl) || 'https://api.pinecone.io';
    var headers = config.additionalHeaders || null;
    var apiConfig = {
        basePath: controllerPath,
        apiKey: apiKey,
        queryParamsStringify: utils_1.queryParamsStringify,
        headers: __assign({
            'User-Agent': (0, utils_1.buildUserAgent)(config)
        }, headers),
        fetchApi: (0, utils_1.getFetch)(config),
        middleware: middleware_1.middleware
    };
    return new pinecone_generated_ts_fetch_1.ManageIndexesApi(new pinecone_generated_ts_fetch_1.Configuration(apiConfig));
};
exports.indexOperationsBuilder = indexOperationsBuilder; //# sourceMappingURL=indexOperationsBuilder.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/validator.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __importDefault = this && this.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.buildConfigValidator = exports.buildValidator = exports.errorFormatter = void 0;
var ajv_1 = __importDefault(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/node_modules/ajv/dist/ajv.js [app-ssr] (ecmascript)"));
var errors_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/index.js [app-ssr] (ecmascript)");
var environment_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/utils/environment.js [app-ssr] (ecmascript)");
var prepend = function(prefix, message) {
    return "".concat(prefix, " ").concat(message);
};
var schemaPathPropNameRegex = /properties\/(.+)\//;
var schemaPathArrayPropNameRegex = /properties\/(.+)\/items/;
var schemaPathGroupNumberRegex = /anyOf\/(\d+)\/(.+)/;
var instancePathItemIndexRegex = /(\d+)$/;
// If there are more than maxErrors errors in a group, they
// will get summarized with an error count.
var maxErrors = 3;
var formatIndividualError = function(e, formattedMessageList) {
    if (e.schemaPath.indexOf('properties') > -1) {
        // property of an object
        if (e.schemaPath.indexOf('items') > -1) {
            // property is an array
            var propNameMatch = schemaPathArrayPropNameRegex.exec(e.schemaPath);
            var propName = propNameMatch ? propNameMatch[1] : 'unknown';
            var itemIndexMatch = instancePathItemIndexRegex.exec(e.instancePath);
            var itemIndex = itemIndexMatch ? itemIndexMatch[1] : 'unknown';
            formattedMessageList.push("item at index ".concat(itemIndex, " of the '").concat(propName, "' array ").concat(e.message));
        } else {
            // property is not an array
            var propNameMatch = schemaPathPropNameRegex.exec(e.schemaPath);
            var propName = propNameMatch ? propNameMatch[1] : 'unknown';
            formattedMessageList.push("property '".concat(propName, "' ").concat(e.message));
        }
    } else if (e.schemaPath.indexOf('items') > -1) {
        // item in an array
        var itemIndexMatch = instancePathItemIndexRegex.exec(e.instancePath);
        var itemIndex = itemIndexMatch ? itemIndexMatch[1] : 'unknown';
        formattedMessageList.push("item at index ".concat(itemIndex, " of the array ").concat(e.message));
    } else if (e.instancePath === '') {
        // parameter is something other than an object, e.g. string
        formattedMessageList.push("argument ".concat(e.message));
    }
};
var missingPropertiesErrors = function(subject, errors, messageParts) {
    var missingPropertyNames = errors.filter(function(error) {
        return error.keyword === 'required';
    }).map(function(error) {
        return error.params.missingProperty !== undefined ? error.params.missingProperty : 'unknown';
    });
    if (missingPropertyNames.length > 0) {
        var missingMessage = prepend(subject, "".concat(messageParts.length > 0 ? 'M' : 'm', "ust have required ").concat(missingPropertyNames.length > 1 ? 'properties' : 'property', ": ").concat(missingPropertyNames.join(', '), "."));
        messageParts.push(missingMessage);
    }
};
var neverErrors = function(subject, errors, messageParts) {
    var neverPropertyErrors = errors.filter(function(error) {
        return error.keyword === 'not';
    }).map(function(error) {
        return error.instancePath.slice(1);
    });
    if (neverPropertyErrors.length > 0) {
        var neverMessage = prepend(subject, "must not have ".concat(neverPropertyErrors.length > 1 ? 'properties' : 'property', ": ").concat(neverPropertyErrors.join(', '), "."));
        messageParts.push(neverMessage);
    }
};
var typeErrors = function(subject, errors, messageParts) {
    var typeErrorsList = [];
    var anyOfConstPropErrors = errors.filter(function(error) {
        return error.schemaPath.indexOf('anyOf') > -1 && error.keyword === 'const' && error.instancePath.length > 0;
    });
    var errorCount = 0;
    // handle possible literal types first
    var propErrorGroups = {};
    if (anyOfConstPropErrors.length > 0) {
        for(var _i = 0, anyOfConstPropErrors_1 = anyOfConstPropErrors; _i < anyOfConstPropErrors_1.length; _i++){
            var error = anyOfConstPropErrors_1[_i];
            var constValue = error.instancePath.slice(1);
            if (propErrorGroups[constValue]) {
                propErrorGroups[constValue].push(error);
            } else {
                propErrorGroups[constValue] = [
                    error
                ];
            }
        }
        var properties = Object.keys(propErrorGroups);
        properties.forEach(function(property) {
            var constValueErrors = propErrorGroups[property];
            typeErrorsList.push("property '".concat(property, "' must be equal to one of: ") + Object.values(constValueErrors).map(function(group) {
                return "'".concat(group.params.allowedValue, "'");
            }).join(', '));
        });
    }
    // typebox also emits type errors for each value of a literal so we want to exclude these
    var anyOfKeys = Object.keys(propErrorGroups);
    for(var i = 0; i < errors.length; i++){
        var e = errors[i];
        if (e.keyword === 'type' && !anyOfKeys.includes(e.instancePath.slice(1))) {
            errorCount += 1;
            if (errorCount <= maxErrors) {
                formatIndividualError(e, typeErrorsList);
            }
        }
    }
    if (errorCount > maxErrors) {
        typeErrorsList.push("and ".concat(errorCount - maxErrors, " other errors"));
    }
    if (typeErrorsList.length > 0) {
        var prefix = messageParts.length > 0 ? 'There were also type errors:' : "".concat(subject, " had type errors:");
        var typeErrorMessage = prepend(prefix, typeErrorsList.join(', ')) + '.';
        messageParts.push(typeErrorMessage);
    }
};
var validationErrors = function(subject, errors, messageParts) {
    var validationErrors = [];
    var errorCount = 0;
    // List of error keywords from https://ajv.js.org/api.html#validation-errors
    for(var _i = 0, errors_2 = errors; _i < errors_2.length; _i++){
        var e = errors_2[_i];
        if (e.keyword === 'minLength' && e.params.limit === 1) {
            e.message = 'must not be blank';
        }
        switch(e.keyword){
            case 'minimum':
            case 'maximum':
            case 'exclusiveMinimum':
            case 'exclusiveMaximum':
            case 'minLength':
            case 'maxLength':
            case 'maxProperties':
            case 'minProperties':
            case 'minItems':
            case 'maxItems':
            case 'additionalItems':
            case 'additionalProperties':
                errorCount += 1;
                if (errorCount > maxErrors) {
                    continue;
                } else {
                    formatIndividualError(e, validationErrors);
                }
                break;
            default:
        }
    }
    if (errorCount > maxErrors) {
        validationErrors.push("and ".concat(errorCount - maxErrors, " other errors"));
    }
    if (validationErrors.length > 0) {
        var prefix = messageParts.length > 0 ? 'There were also validation errors:' : "".concat(subject, " had validation errors:");
        var validationErrorMessage = prepend(prefix, validationErrors.join(', ')) + '.';
        messageParts.push(validationErrorMessage);
    }
};
var errorFormatter = function(subject, errors) {
    var anyOfArgumentErrors = errors.filter(function(error) {
        return error.schemaPath.indexOf('anyOf') > -1 && error.keyword !== 'anyOf' && error.keyword !== 'const' && error.keyword !== 'type';
    });
    if (anyOfArgumentErrors.length > 0) {
        var groups = {};
        for(var _i = 0, anyOfArgumentErrors_1 = anyOfArgumentErrors; _i < anyOfArgumentErrors_1.length; _i++){
            var error = anyOfArgumentErrors_1[_i];
            var schemaPathMatch = schemaPathGroupNumberRegex.exec(error.schemaPath);
            var groupNumber = schemaPathMatch ? schemaPathMatch[1] : 'unknown';
            // Remove the anyOf portion of the schema path to avoid infinite loop
            // when building message for each error group
            error.schemaPath = schemaPathMatch ? schemaPathMatch[2] : 'unknown';
            if (groups[groupNumber]) {
                groups[groupNumber].push(error);
            } else {
                groups[groupNumber] = [
                    error
                ];
            }
        }
        // concat errors for each error group
        return "".concat(subject, " accepts multiple types. Either ") + Object.entries(groups).map(function(_a) {
            var key = _a[0], group = _a[1];
            return "".concat(parseInt(key) + 1, ")") + (0, exports.errorFormatter)('', group);
        }).join(' ');
    }
    var messageParts = [];
    neverErrors(subject, errors, messageParts);
    missingPropertiesErrors(subject, errors, messageParts);
    typeErrors(subject, errors, messageParts);
    validationErrors(subject, errors, messageParts);
    return messageParts.join(' ');
};
exports.errorFormatter = errorFormatter;
var buildValidator = function(errorMessagePrefix, schema) {
    if ((0, environment_1.isEdge)()) {
        // Ajv schema compilation does not work in the Edge Runtime.
        return function(data) {}; // eslint-disable-line
    }
    if (typeof process !== 'undefined' && process && process.env && process.env.PINECONE_DISABLE_RUNTIME_VALIDATIONS) {
        // Runtime method validations are most useful when learning to use the client
        // in an interactive REPL or when developing an application that does not use
        // Typescript to provide the benefits of static type-checking. However, if your
        // application is using Typescript and/or you have gained confidence of correct
        // usage through testing, you may want to disable these runtime validations
        // to improve performance.
        //
        // The PINECONE_DISABLE_RUNTIME_VALIDATIONS env var provides a way to disable
        // all runtime validation. If it is set, all validator functions will immediately
        // return without performing any validation.
        return function(data) {}; // eslint-disable-line
    }
    var ajv = new ajv_1.default({
        allErrors: true
    });
    var validate = ajv.compile(schema);
    return function(data) {
        var valid = validate(data);
        if (!valid) {
            var errors = validate.errors || [];
            var msg = (0, exports.errorFormatter)(errorMessagePrefix, errors);
            throw new errors_1.PineconeArgumentError(msg);
        }
        return data;
    };
};
exports.buildValidator = buildValidator;
var buildConfigValidator = function(schema, methodName) {
    var prefix = "The argument to ".concat(methodName);
    return (0, exports.buildValidator)(prefix, schema);
};
exports.buildConfigValidator = buildConfigValidator; //# sourceMappingURL=validator.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/control/types.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CollectionNameSchema = exports.MetadataConfigSchema = exports.CapacityModeSchema = exports.CloudSchema = exports.EnvironmentSchema = exports.RegionSchema = exports.DimensionSchema = exports.MetricSchema = exports.ShardsSchema = exports.PodsSchema = exports.ReplicasSchema = exports.PodTypeSchema = exports.IndexNameSchema = void 0;
var typebox_1 = __turbopack_require__("[project]/node_modules/@sinclair/typebox/typebox.js [app-ssr] (ecmascript)");
var nonemptyString = typebox_1.Type.String({
    minLength: 1
});
var positiveInteger = typebox_1.Type.Integer({
    minimum: 1
});
// If user passes the empty string for index name, the generated
// OpenAPI client will call /databases/ which is the list
// indexes endpoint. This returns 200 instead of 404, but obviously
// no descriptive information is returned for an index named empty
// string. To avoid this confusing case, we require lenth > 1.
exports.IndexNameSchema = nonemptyString;
exports.PodTypeSchema = nonemptyString;
exports.ReplicasSchema = positiveInteger;
exports.PodsSchema = positiveInteger;
exports.ShardsSchema = positiveInteger;
exports.MetricSchema = typebox_1.Type.Union([
    typebox_1.Type.Literal('cosine'),
    typebox_1.Type.Literal('euclidean'),
    typebox_1.Type.Literal('dotproduct')
]);
exports.DimensionSchema = positiveInteger;
exports.RegionSchema = nonemptyString;
exports.EnvironmentSchema = nonemptyString;
exports.CloudSchema = typebox_1.Type.Union([
    typebox_1.Type.Literal('gcp'),
    typebox_1.Type.Literal('aws'),
    typebox_1.Type.Literal('azure')
]);
exports.CapacityModeSchema = nonemptyString;
exports.MetadataConfigSchema = typebox_1.Type.Object({
    indexed: typebox_1.Type.Array(nonemptyString)
}, {
    additionalProperties: false
});
// If user passes the empty string for collection name, the generated
// OpenAPI client will call /collections/ which is the list
// collection endpoint. This returns 200 instead of 404, but obviously
// no descriptive information is returned for an collection named empty
// string. To avoid this confusing case, we require lenth > 1.
exports.CollectionNameSchema = nonemptyString; //# sourceMappingURL=types.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/control/configureIndex.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.configureIndex = void 0;
var errors_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/index.js [app-ssr] (ecmascript)");
var validator_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/validator.js [app-ssr] (ecmascript)");
var typebox_1 = __turbopack_require__("[project]/node_modules/@sinclair/typebox/typebox.js [app-ssr] (ecmascript)");
var types_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/control/types.js [app-ssr] (ecmascript)");
var ConfigureIndexOptionsSchema = typebox_1.Type.Object({
    replicas: typebox_1.Type.Optional(types_1.ReplicasSchema),
    podType: typebox_1.Type.Optional(types_1.PodTypeSchema)
}, {
    additionalProperties: false
});
var configureIndex = function(api) {
    var indexNameValidator = (0, validator_1.buildValidator)('The first argument to configureIndex', types_1.IndexNameSchema);
    var patchRequestValidator = (0, validator_1.buildValidator)('The second argument to configureIndex', ConfigureIndexOptionsSchema);
    return function(indexName, options) {
        return __awaiter(void 0, void 0, void 0, function() {
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        indexNameValidator(indexName);
                        patchRequestValidator(options);
                        if (Object.keys(options).length === 0) {
                            throw new errors_1.PineconeArgumentError('The second argument to configureIndex should not be empty object. Please specify at least one property (replicas, podType) to update.');
                        }
                        return [
                            4 /*yield*/ ,
                            api.configureIndex({
                                indexName: indexName,
                                configureIndexRequest: {
                                    spec: {
                                        pod: options
                                    }
                                }
                            })
                        ];
                    case 1:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
};
exports.configureIndex = configureIndex; //# sourceMappingURL=configureIndex.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/control/createIndex.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createIndex = void 0;
var validator_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/validator.js [app-ssr] (ecmascript)");
var utils_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/utils/index.js [app-ssr] (ecmascript)");
var errors_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/index.js [app-ssr] (ecmascript)");
var typebox_1 = __turbopack_require__("[project]/node_modules/@sinclair/typebox/typebox.js [app-ssr] (ecmascript)");
var types_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/control/types.js [app-ssr] (ecmascript)");
var CreateIndexOptionsSchema = typebox_1.Type.Object({
    name: types_1.IndexNameSchema,
    dimension: types_1.DimensionSchema,
    metric: types_1.MetricSchema,
    spec: typebox_1.Type.Object({
        serverless: typebox_1.Type.Optional(typebox_1.Type.Object({
            cloud: types_1.CloudSchema,
            region: types_1.RegionSchema
        })),
        pod: typebox_1.Type.Optional(typebox_1.Type.Object({
            environment: types_1.EnvironmentSchema,
            replicas: typebox_1.Type.Optional(types_1.ReplicasSchema),
            shards: typebox_1.Type.Optional(types_1.ShardsSchema),
            podType: typebox_1.Type.Optional(types_1.PodTypeSchema),
            pods: typebox_1.Type.Optional(types_1.PodsSchema),
            metadataConfig: typebox_1.Type.Optional(types_1.MetadataConfigSchema),
            sourceCollection: typebox_1.Type.Optional(types_1.CollectionNameSchema)
        }))
    }),
    waitUntilReady: typebox_1.Type.Optional(typebox_1.Type.Boolean()),
    suppressConflicts: typebox_1.Type.Optional(typebox_1.Type.Boolean())
}, {
    additionalProperties: false
});
var createIndex = function(api) {
    var validator = (0, validator_1.buildConfigValidator)(CreateIndexOptionsSchema, 'createIndex');
    return function(options) {
        return __awaiter(void 0, void 0, void 0, function() {
            var createResponse, e_1;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        // If metric is not specified, default to cosine
                        if (options && !options.metric) {
                            options.metric = 'cosine';
                        }
                        validator(options);
                        _a.label = 1;
                    case 1:
                        _a.trys.push([
                            1,
                            5,
                            ,
                            6
                        ]);
                        return [
                            4 /*yield*/ ,
                            api.createIndex({
                                createIndexRequest: options
                            })
                        ];
                    case 2:
                        createResponse = _a.sent();
                        if (!options.waitUntilReady) return [
                            3 /*break*/ ,
                            4
                        ];
                        return [
                            4 /*yield*/ ,
                            waitUntilIndexIsReady(api, options.name)
                        ];
                    case 3:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                    case 4:
                        return [
                            2 /*return*/ ,
                            createResponse
                        ];
                    case 5:
                        e_1 = _a.sent();
                        if (!(options.suppressConflicts && e_1 instanceof Error && e_1.name === 'PineconeConflictError')) {
                            throw e_1;
                        }
                        return [
                            3 /*break*/ ,
                            6
                        ];
                    case 6:
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
};
exports.createIndex = createIndex;
var waitUntilIndexIsReady = function(api, indexName, seconds) {
    if (seconds === void 0) {
        seconds = 0;
    }
    return __awaiter(void 0, void 0, void 0, function() {
        var indexDescription, e_2, err;
        var _a;
        return __generator(this, function(_b) {
            switch(_b.label){
                case 0:
                    _b.trys.push([
                        0,
                        6,
                        ,
                        8
                    ]);
                    return [
                        4 /*yield*/ ,
                        api.describeIndex({
                            indexName: indexName
                        })
                    ];
                case 1:
                    indexDescription = _b.sent();
                    if (!!((_a = indexDescription.status) === null || _a === void 0 ? void 0 : _a.ready)) return [
                        3 /*break*/ ,
                        4
                    ];
                    return [
                        4 /*yield*/ ,
                        new Promise(function(r) {
                            return setTimeout(r, 1000);
                        })
                    ];
                case 2:
                    _b.sent();
                    return [
                        4 /*yield*/ ,
                        waitUntilIndexIsReady(api, indexName, seconds + 1)
                    ];
                case 3:
                    return [
                        2 /*return*/ ,
                        _b.sent()
                    ];
                case 4:
                    (0, utils_1.debugLog)("Index ".concat(indexName, " is ready after ").concat(seconds));
                    return [
                        2 /*return*/ ,
                        indexDescription
                    ];
                case 5:
                    return [
                        3 /*break*/ ,
                        8
                    ];
                case 6:
                    e_2 = _b.sent();
                    return [
                        4 /*yield*/ ,
                        (0, errors_1.handleApiError)(e_2, function(_, rawMessageText) {
                            return __awaiter(void 0, void 0, void 0, function() {
                                return __generator(this, function(_a) {
                                    return [
                                        2 /*return*/ ,
                                        "Error creating index ".concat(indexName, ": ").concat(rawMessageText)
                                    ];
                                });
                            });
                        })
                    ];
                case 7:
                    err = _b.sent();
                    throw err;
                case 8:
                    return [
                        2 /*return*/ 
                    ];
            }
        });
    });
}; //# sourceMappingURL=createIndex.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/control/deleteIndex.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.deleteIndex = void 0;
var validator_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/validator.js [app-ssr] (ecmascript)");
var types_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/control/types.js [app-ssr] (ecmascript)");
var deleteIndex = function(api) {
    var validator = (0, validator_1.buildConfigValidator)(types_1.IndexNameSchema, 'deleteIndex');
    return function(indexName) {
        return __awaiter(void 0, void 0, void 0, function() {
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        validator(indexName);
                        return [
                            4 /*yield*/ ,
                            api.deleteIndex({
                                indexName: indexName
                            })
                        ];
                    case 1:
                        _a.sent();
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
};
exports.deleteIndex = deleteIndex; //# sourceMappingURL=deleteIndex.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/control/describeIndex.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.describeIndex = void 0;
var validator_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/validator.js [app-ssr] (ecmascript)");
var types_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/control/types.js [app-ssr] (ecmascript)");
var describeIndex = function(api) {
    var validator = (0, validator_1.buildConfigValidator)(types_1.IndexNameSchema, 'describeIndex');
    var removeDeprecatedFields = function(result) {
        if (result.database) {
            for(var _i = 0, _a = Object.keys(result.database); _i < _a.length; _i++){
                var key = _a[_i];
                if (result.database[key] === undefined) {
                    delete result.database[key];
                }
            }
        }
    };
    return function(indexName) {
        return __awaiter(void 0, void 0, void 0, function() {
            var result;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        validator(indexName);
                        return [
                            4 /*yield*/ ,
                            api.describeIndex({
                                indexName: indexName
                            })
                        ];
                    case 1:
                        result = _a.sent();
                        removeDeprecatedFields(result);
                        return [
                            2 /*return*/ ,
                            result
                        ];
                }
            });
        });
    };
};
exports.describeIndex = describeIndex; //# sourceMappingURL=describeIndex.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/control/listIndexes.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.listIndexes = void 0;
var listIndexes = function(api) {
    return function() {
        return __awaiter(void 0, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            api.listIndexes()
                        ];
                    case 1:
                        response = _a.sent();
                        return [
                            2 /*return*/ ,
                            response
                        ];
                }
            });
        });
    };
};
exports.listIndexes = listIndexes; //# sourceMappingURL=listIndexes.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/control/createCollection.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createCollection = void 0;
var validator_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/validator.js [app-ssr] (ecmascript)");
var types_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/control/types.js [app-ssr] (ecmascript)");
var typebox_1 = __turbopack_require__("[project]/node_modules/@sinclair/typebox/typebox.js [app-ssr] (ecmascript)");
var CreateCollectionOptionsSchema = typebox_1.Type.Object({
    name: types_1.CollectionNameSchema,
    source: types_1.IndexNameSchema
}, {
    additionalProperties: false
});
var createCollection = function(api) {
    var validator = (0, validator_1.buildConfigValidator)(CreateCollectionOptionsSchema, 'createCollection');
    return function(options) {
        return __awaiter(void 0, void 0, void 0, function() {
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        validator(options);
                        return [
                            4 /*yield*/ ,
                            api.createCollection({
                                createCollectionRequest: options
                            })
                        ];
                    case 1:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
};
exports.createCollection = createCollection; //# sourceMappingURL=createCollection.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/control/deleteCollection.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.deleteCollection = void 0;
var validator_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/validator.js [app-ssr] (ecmascript)");
var types_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/control/types.js [app-ssr] (ecmascript)");
var deleteCollection = function(api) {
    var validator = (0, validator_1.buildConfigValidator)(types_1.CollectionNameSchema, 'deleteCollection');
    return function(collectionName) {
        return __awaiter(void 0, void 0, void 0, function() {
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        validator(collectionName);
                        return [
                            4 /*yield*/ ,
                            api.deleteCollection({
                                collectionName: collectionName
                            })
                        ];
                    case 1:
                        _a.sent();
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
};
exports.deleteCollection = deleteCollection; //# sourceMappingURL=deleteCollection.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/control/describeCollection.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.describeCollection = void 0;
var validator_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/validator.js [app-ssr] (ecmascript)");
var types_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/control/types.js [app-ssr] (ecmascript)");
var describeCollection = function(api) {
    var validator = (0, validator_1.buildConfigValidator)(types_1.CollectionNameSchema, 'describeCollection');
    return function(name) {
        return __awaiter(void 0, void 0, void 0, function() {
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        validator(name);
                        return [
                            4 /*yield*/ ,
                            api.describeCollection({
                                collectionName: name
                            })
                        ];
                    case 1:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
};
exports.describeCollection = describeCollection; //# sourceMappingURL=describeCollection.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/control/listCollections.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.listCollections = void 0;
var listCollections = function(api) {
    return function() {
        return __awaiter(void 0, void 0, void 0, function() {
            var results;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            api.listCollections()
                        ];
                    case 1:
                        results = _a.sent();
                        return [
                            2 /*return*/ ,
                            results
                        ];
                }
            });
        });
    };
};
exports.listCollections = listCollections; //# sourceMappingURL=listCollections.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/control/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.listCollections = exports.describeCollection = exports.deleteCollection = exports.createCollection = exports.listIndexes = exports.describeIndex = exports.deleteIndex = exports.createIndex = exports.configureIndex = exports.indexOperationsBuilder = void 0;
// Index Operations
var indexOperationsBuilder_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/control/indexOperationsBuilder.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "indexOperationsBuilder", {
    enumerable: true,
    get: function() {
        return indexOperationsBuilder_1.indexOperationsBuilder;
    }
});
var configureIndex_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/control/configureIndex.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "configureIndex", {
    enumerable: true,
    get: function() {
        return configureIndex_1.configureIndex;
    }
});
var createIndex_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/control/createIndex.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "createIndex", {
    enumerable: true,
    get: function() {
        return createIndex_1.createIndex;
    }
});
var deleteIndex_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/control/deleteIndex.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "deleteIndex", {
    enumerable: true,
    get: function() {
        return deleteIndex_1.deleteIndex;
    }
});
var describeIndex_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/control/describeIndex.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "describeIndex", {
    enumerable: true,
    get: function() {
        return describeIndex_1.describeIndex;
    }
});
var listIndexes_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/control/listIndexes.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "listIndexes", {
    enumerable: true,
    get: function() {
        return listIndexes_1.listIndexes;
    }
});
var createCollection_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/control/createCollection.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "createCollection", {
    enumerable: true,
    get: function() {
        return createCollection_1.createCollection;
    }
});
var deleteCollection_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/control/deleteCollection.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "deleteCollection", {
    enumerable: true,
    get: function() {
        return deleteCollection_1.deleteCollection;
    }
});
var describeCollection_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/control/describeCollection.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "describeCollection", {
    enumerable: true,
    get: function() {
        return describeCollection_1.describeCollection;
    }
});
var listCollections_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/control/listCollections.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "listCollections", {
    enumerable: true,
    get: function() {
        return listCollections_1.listCollections;
    }
}); //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/data/indexHostSingleton.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.IndexHostSingleton = void 0;
var control_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/control/index.js [app-ssr] (ecmascript)");
var errors_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/index.js [app-ssr] (ecmascript)");
var utils_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/utils/index.js [app-ssr] (ecmascript)");
// We use describeIndex to retrieve the data plane url (host) for a given API key
// and index. We only ever want to call describeIndex a maximum of once per API key
// and index, so we cache them in a singleton for reuse.
exports.IndexHostSingleton = function() {
    var _this = this;
    var hostUrls = {}; // map of apiKey-indexName to hostUrl
    var _describeIndex = function(config, indexName) {
        return __awaiter(_this, void 0, void 0, function() {
            var indexOperationsApi, describeResponse, host;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        indexOperationsApi = (0, control_1.indexOperationsBuilder)(config);
                        return [
                            4 /*yield*/ ,
                            (0, control_1.describeIndex)(indexOperationsApi)(indexName)
                        ];
                    case 1:
                        describeResponse = _a.sent();
                        host = describeResponse.host;
                        if (!host) {
                            // Generally, middleware will handle most errors from the call itself such as index not found, etc
                            // However, we need to explicitly handle the optionality of status.host
                            throw new errors_1.PineconeUnableToResolveHostError('The HTTP call succeeded but the host URL could not be resolved. Please make sure the index exists and is in a ready state.');
                        } else {
                            return [
                                2 /*return*/ ,
                                host
                            ];
                        }
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    var _key = function(config, indexName) {
        return "".concat(config.apiKey, "-").concat(indexName);
    };
    var singleton = {
        getHostUrl: function(config, indexName) {
            return __awaiter(_this, void 0, void 0, function() {
                var cacheKey, hostUrl;
                return __generator(this, function(_a) {
                    switch(_a.label){
                        case 0:
                            cacheKey = _key(config, indexName);
                            if (!(cacheKey in hostUrls)) return [
                                3 /*break*/ ,
                                1
                            ];
                            return [
                                2 /*return*/ ,
                                hostUrls[cacheKey]
                            ];
                        case 1:
                            return [
                                4 /*yield*/ ,
                                _describeIndex(config, indexName)
                            ];
                        case 2:
                            hostUrl = _a.sent();
                            singleton._set(config, indexName, hostUrl);
                            if (!hostUrls[cacheKey]) {
                                throw new errors_1.PineconeUnableToResolveHostError("Could not get host for index: ".concat(indexName, ". Call describeIndex('").concat(indexName, "') to check the current status."));
                            }
                            return [
                                2 /*return*/ ,
                                hostUrls[cacheKey]
                            ];
                    }
                });
            });
        },
        _reset: function() {
            for(var _i = 0, _a = Object.keys(hostUrls); _i < _a.length; _i++){
                var key = _a[_i];
                delete hostUrls[key];
            }
        },
        _set: function(config, indexName, hostUrl) {
            var normalizedHostUrl = (0, utils_1.normalizeUrl)(hostUrl);
            // prevent adding an empty hostUrl to the cache
            if (!normalizedHostUrl) {
                return;
            }
            var cacheKey = _key(config, indexName);
            hostUrls[cacheKey] = normalizedHostUrl;
        },
        _delete: function(config, indexName) {
            var cacheKey = _key(config, indexName);
            delete hostUrls[cacheKey];
        }
    };
    return singleton;
}(); //# sourceMappingURL=indexHostSingleton.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/data/types.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.PineconeRecordSchema = exports.RecordSparseValuesSchema = exports.RecordValuesSchema = exports.RecordIdSchema = exports.PineconeConfigurationSchema = void 0;
var typebox_1 = __turbopack_require__("[project]/node_modules/@sinclair/typebox/typebox.js [app-ssr] (ecmascript)");
exports.PineconeConfigurationSchema = typebox_1.Type.Object({
    apiKey: typebox_1.Type.String({
        minLength: 1
    }),
    controllerHostUrl: typebox_1.Type.Optional(typebox_1.Type.String({
        minLength: 1
    })),
    // fetchApi is a complex type that I don't really want to recreate in the
    // form of a json schema (seems difficult and error prone). So we will
    // rely on TypeScript to guide people in the right direction here.
    // But declaring it here as Type.Any() is needed to avoid getting caught
    // in the additionalProperties check.
    fetchApi: typebox_1.Type.Optional(typebox_1.Type.Any()),
    additionalHeaders: typebox_1.Type.Optional(typebox_1.Type.Any()),
    sourceTag: typebox_1.Type.Optional(typebox_1.Type.String({
        minLength: 1
    }))
}, {
    additionalProperties: false
});
exports.RecordIdSchema = typebox_1.Type.String({
    minLength: 1
});
exports.RecordValuesSchema = typebox_1.Type.Array(typebox_1.Type.Number());
exports.RecordSparseValuesSchema = typebox_1.Type.Object({
    indices: typebox_1.Type.Array(typebox_1.Type.Integer()),
    values: typebox_1.Type.Array(typebox_1.Type.Number())
}, {
    additionalProperties: false
});
exports.PineconeRecordSchema = typebox_1.Type.Object({
    id: exports.RecordIdSchema,
    values: exports.RecordValuesSchema,
    sparseValues: typebox_1.Type.Optional(exports.RecordSparseValuesSchema),
    metadata: typebox_1.Type.Optional(typebox_1.Type.Object({}, {
        additionalProperties: true
    }))
}, {
    additionalProperties: false
}); //# sourceMappingURL=types.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/data/upsert.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpsertCommand = void 0;
var validator_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/validator.js [app-ssr] (ecmascript)");
var types_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/types.js [app-ssr] (ecmascript)");
var typebox_1 = __turbopack_require__("[project]/node_modules/@sinclair/typebox/typebox.js [app-ssr] (ecmascript)");
var RecordArray = typebox_1.Type.Array(types_1.PineconeRecordSchema);
var UpsertCommand = function() {
    function UpsertCommand(apiProvider, namespace) {
        this.apiProvider = apiProvider;
        this.namespace = namespace;
        this.validator = (0, validator_1.buildConfigValidator)(RecordArray, 'upsert');
    }
    UpsertCommand.prototype.run = function(records) {
        return __awaiter(this, void 0, void 0, function() {
            var api;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        this.validator(records);
                        return [
                            4 /*yield*/ ,
                            this.apiProvider.provide()
                        ];
                    case 1:
                        api = _a.sent();
                        return [
                            4 /*yield*/ ,
                            api.upsert({
                                upsertRequest: {
                                    vectors: records,
                                    namespace: this.namespace
                                }
                            })
                        ];
                    case 2:
                        _a.sent();
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    return UpsertCommand;
}();
exports.UpsertCommand = UpsertCommand; //# sourceMappingURL=upsert.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/data/fetch.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __assign = this && this.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FetchCommand = void 0;
var validator_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/validator.js [app-ssr] (ecmascript)");
var types_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/types.js [app-ssr] (ecmascript)");
var typebox_1 = __turbopack_require__("[project]/node_modules/@sinclair/typebox/typebox.js [app-ssr] (ecmascript)");
var RecordIdsArray = typebox_1.Type.Array(types_1.RecordIdSchema, {
    minItems: 1
});
var FetchCommand = function() {
    function FetchCommand(apiProvider, namespace) {
        this.apiProvider = apiProvider;
        this.namespace = namespace;
        this.validator = (0, validator_1.buildConfigValidator)(RecordIdsArray, 'fetch');
    }
    FetchCommand.prototype.run = function(ids) {
        return __awaiter(this, void 0, void 0, function() {
            var api, response;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        this.validator(ids);
                        return [
                            4 /*yield*/ ,
                            this.apiProvider.provide()
                        ];
                    case 1:
                        api = _a.sent();
                        return [
                            4 /*yield*/ ,
                            api.fetch({
                                ids: ids,
                                namespace: this.namespace
                            })
                        ];
                    case 2:
                        response = _a.sent();
                        // My testing shows that in reality vectors and namespace are
                        // never undefined even when there are no records returned. So these
                        // default values are needed only to satisfy the typescript compiler.
                        return [
                            2 /*return*/ ,
                            __assign({
                                records: response.vectors ? response.vectors : {},
                                namespace: response.namespace ? response.namespace : ''
                            }, response.usage && {
                                usage: response.usage
                            })
                        ];
                }
            });
        });
    };
    return FetchCommand;
}();
exports.FetchCommand = FetchCommand; //# sourceMappingURL=fetch.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/data/update.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __assign = this && this.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UpdateCommand = void 0;
var validator_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/validator.js [app-ssr] (ecmascript)");
var typebox_1 = __turbopack_require__("[project]/node_modules/@sinclair/typebox/typebox.js [app-ssr] (ecmascript)");
var types_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/types.js [app-ssr] (ecmascript)");
var UpdateRecordOptionsSchema = typebox_1.Type.Object({
    id: types_1.RecordIdSchema,
    values: typebox_1.Type.Optional(types_1.RecordValuesSchema),
    sparseValues: typebox_1.Type.Optional(types_1.RecordSparseValuesSchema),
    metadata: typebox_1.Type.Optional(typebox_1.Type.Object({}, {
        additionalProperties: true
    }))
}, {
    additionalProperties: false
});
var UpdateCommand = function() {
    function UpdateCommand(apiProvider, namespace) {
        this.apiProvider = apiProvider;
        this.namespace = namespace;
        this.validator = (0, validator_1.buildConfigValidator)(UpdateRecordOptionsSchema, 'update');
    }
    UpdateCommand.prototype.run = function(options) {
        return __awaiter(this, void 0, void 0, function() {
            var requestOptions, api;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        this.validator(options);
                        requestOptions = {
                            id: options['id'],
                            values: options['values'],
                            sparseValues: options['sparseValues'],
                            setMetadata: options['metadata']
                        };
                        return [
                            4 /*yield*/ ,
                            this.apiProvider.provide()
                        ];
                    case 1:
                        api = _a.sent();
                        return [
                            4 /*yield*/ ,
                            api.update({
                                updateRequest: __assign(__assign({}, requestOptions), {
                                    namespace: this.namespace
                                })
                            })
                        ];
                    case 2:
                        _a.sent();
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    return UpdateCommand;
}();
exports.UpdateCommand = UpdateCommand; //# sourceMappingURL=update.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/data/query.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __assign = this && this.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.QueryCommand = void 0;
var validator_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/validator.js [app-ssr] (ecmascript)");
var types_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/types.js [app-ssr] (ecmascript)");
var typebox_1 = __turbopack_require__("[project]/node_modules/@sinclair/typebox/typebox.js [app-ssr] (ecmascript)");
var shared = {
    topK: typebox_1.Type.Number(),
    includeValues: typebox_1.Type.Optional(typebox_1.Type.Boolean()),
    includeMetadata: typebox_1.Type.Optional(typebox_1.Type.Boolean()),
    filter: typebox_1.Type.Optional(typebox_1.Type.Object({}))
};
var QueryByRecordId = typebox_1.Type.Object(__assign(__assign({}, shared), {
    id: types_1.RecordIdSchema,
    vector: typebox_1.Type.Optional(typebox_1.Type.Never()),
    sparseVector: typebox_1.Type.Optional(typebox_1.Type.Never())
}), {
    additionalProperties: false
});
var QueryByVectorValues = typebox_1.Type.Object(__assign(__assign({}, shared), {
    vector: types_1.RecordValuesSchema,
    sparseVector: typebox_1.Type.Optional(types_1.RecordSparseValuesSchema),
    id: typebox_1.Type.Optional(typebox_1.Type.Never())
}), {
    additionalProperties: false
});
var QuerySchema = typebox_1.Type.Union([
    QueryByRecordId,
    QueryByVectorValues
]);
var QueryCommand = function() {
    function QueryCommand(apiProvider, namespace) {
        this.apiProvider = apiProvider;
        this.namespace = namespace;
        this.validator = (0, validator_1.buildConfigValidator)(QuerySchema, 'query');
    }
    QueryCommand.prototype.run = function(query) {
        return __awaiter(this, void 0, void 0, function() {
            var api, results, matches;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        this.validator(query);
                        return [
                            4 /*yield*/ ,
                            this.apiProvider.provide()
                        ];
                    case 1:
                        api = _a.sent();
                        return [
                            4 /*yield*/ ,
                            api.query({
                                queryRequest: __assign(__assign({}, query), {
                                    namespace: this.namespace
                                })
                            })
                        ];
                    case 2:
                        results = _a.sent();
                        matches = results.matches ? results.matches : [];
                        return [
                            2 /*return*/ ,
                            __assign({
                                matches: matches,
                                namespace: this.namespace
                            }, results.usage && {
                                usage: results.usage
                            })
                        ];
                }
            });
        });
    };
    return QueryCommand;
}();
exports.QueryCommand = QueryCommand; //# sourceMappingURL=query.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/data/deleteOne.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.deleteOne = void 0;
var validator_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/validator.js [app-ssr] (ecmascript)");
var types_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/types.js [app-ssr] (ecmascript)");
var deleteOne = function(apiProvider, namespace) {
    var validator = (0, validator_1.buildConfigValidator)(types_1.RecordIdSchema, 'deleteOne');
    return function(options) {
        return __awaiter(void 0, void 0, void 0, function() {
            var api;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        validator(options);
                        return [
                            4 /*yield*/ ,
                            apiProvider.provide()
                        ];
                    case 1:
                        api = _a.sent();
                        return [
                            4 /*yield*/ ,
                            api._delete({
                                deleteRequest: {
                                    ids: [
                                        options
                                    ],
                                    namespace: namespace
                                }
                            })
                        ];
                    case 2:
                        _a.sent();
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
};
exports.deleteOne = deleteOne; //# sourceMappingURL=deleteOne.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/data/deleteMany.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __assign = this && this.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.deleteMany = void 0;
var validator_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/validator.js [app-ssr] (ecmascript)");
var typebox_1 = __turbopack_require__("[project]/node_modules/@sinclair/typebox/typebox.js [app-ssr] (ecmascript)");
var types_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/types.js [app-ssr] (ecmascript)");
var DeleteManyByRecordIdSchema = typebox_1.Type.Array(types_1.RecordIdSchema);
var DeleteManyByFilterSchema = typebox_1.Type.Object({}, {
    additionalProperties: true,
    minProperties: 1
});
var DeleteManySchema = typebox_1.Type.Union([
    DeleteManyByRecordIdSchema,
    DeleteManyByFilterSchema
]);
var deleteMany = function(apiProvider, namespace) {
    var validator = (0, validator_1.buildConfigValidator)(DeleteManySchema, 'deleteMany');
    return function(options) {
        return __awaiter(void 0, void 0, void 0, function() {
            var requestOptions, api;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        validator(options);
                        requestOptions = {};
                        if (Array.isArray(options)) {
                            requestOptions.ids = options;
                        } else {
                            requestOptions.filter = options;
                        }
                        return [
                            4 /*yield*/ ,
                            apiProvider.provide()
                        ];
                    case 1:
                        api = _a.sent();
                        return [
                            4 /*yield*/ ,
                            api._delete({
                                deleteRequest: __assign(__assign({}, requestOptions), {
                                    namespace: namespace
                                })
                            })
                        ];
                    case 2:
                        _a.sent();
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
};
exports.deleteMany = deleteMany; //# sourceMappingURL=deleteMany.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/data/deleteAll.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.deleteAll = void 0;
var deleteAll = function(apiProvider, namespace) {
    return function() {
        return __awaiter(void 0, void 0, void 0, function() {
            var api;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            apiProvider.provide()
                        ];
                    case 1:
                        api = _a.sent();
                        return [
                            4 /*yield*/ ,
                            api._delete({
                                deleteRequest: {
                                    deleteAll: true,
                                    namespace: namespace
                                }
                            })
                        ];
                    case 2:
                        _a.sent();
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
};
exports.deleteAll = deleteAll; //# sourceMappingURL=deleteAll.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/data/describeIndexStats.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __assign = this && this.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.describeIndexStats = void 0;
var validator_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/validator.js [app-ssr] (ecmascript)");
var typebox_1 = __turbopack_require__("[project]/node_modules/@sinclair/typebox/typebox.js [app-ssr] (ecmascript)");
var DescribeIndexStatsOptionsSchema = typebox_1.Type.Object({
    filter: typebox_1.Type.Optional(typebox_1.Type.Object({}, {
        additionalProperties: true
    }))
}, {
    additionalProperties: false
});
var describeIndexStats = function(apiProvider) {
    var validator = (0, validator_1.buildConfigValidator)(DescribeIndexStatsOptionsSchema, 'describeIndexStats');
    return function(options) {
        return __awaiter(void 0, void 0, void 0, function() {
            var api, results, mappedResult, key;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (options) {
                            validator(options);
                        }
                        return [
                            4 /*yield*/ ,
                            apiProvider.provide()
                        ];
                    case 1:
                        api = _a.sent();
                        return [
                            4 /*yield*/ ,
                            api.describeIndexStats({
                                describeIndexStatsRequest: __assign({}, options)
                            })
                        ];
                    case 2:
                        results = _a.sent();
                        mappedResult = {
                            namespaces: {},
                            dimension: results.dimension,
                            indexFullness: results.indexFullness,
                            totalRecordCount: results.totalVectorCount
                        };
                        if (results.namespaces) {
                            for(key in results.namespaces){
                                mappedResult.namespaces[key] = {
                                    recordCount: results.namespaces[key].vectorCount
                                };
                            }
                        }
                        return [
                            2 /*return*/ ,
                            mappedResult
                        ];
                }
            });
        });
    };
};
exports.describeIndexStats = describeIndexStats; //# sourceMappingURL=describeIndexStats.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/data/dataOperationsProvider.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __assign = this && this.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DataOperationsProvider = void 0;
var pinecone_generated_ts_fetch_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone-generated-ts-fetch/index.js [app-ssr] (ecmascript)");
var utils_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/utils/index.js [app-ssr] (ecmascript)");
var indexHostSingleton_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/indexHostSingleton.js [app-ssr] (ecmascript)");
var middleware_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/utils/middleware.js [app-ssr] (ecmascript)");
var DataOperationsProvider = function() {
    function DataOperationsProvider(config, indexName, indexHostUrl, additionalHeaders) {
        this.config = config;
        this.indexName = indexName;
        this.indexHostUrl = (0, utils_1.normalizeUrl)(indexHostUrl);
        this.additionalHeaders = additionalHeaders;
    }
    DataOperationsProvider.prototype.provide = function() {
        return __awaiter(this, void 0, void 0, function() {
            var _a;
            return __generator(this, function(_b) {
                switch(_b.label){
                    case 0:
                        if (this.dataOperations) {
                            return [
                                2 /*return*/ ,
                                this.dataOperations
                            ];
                        }
                        if (!this.indexHostUrl) return [
                            3 /*break*/ ,
                            1
                        ];
                        this.dataOperations = this.buildDataOperationsConfig();
                        return [
                            3 /*break*/ ,
                            3
                        ];
                    case 1:
                        _a = this;
                        return [
                            4 /*yield*/ ,
                            indexHostSingleton_1.IndexHostSingleton.getHostUrl(this.config, this.indexName)
                        ];
                    case 2:
                        _a.indexHostUrl = _b.sent();
                        this.dataOperations = this.buildDataOperationsConfig();
                        _b.label = 3;
                    case 3:
                        return [
                            2 /*return*/ ,
                            this.dataOperations
                        ];
                }
            });
        });
    };
    DataOperationsProvider.prototype.buildDataOperationsConfig = function() {
        var headers = this.additionalHeaders || null;
        var indexConfigurationParameters = {
            basePath: this.indexHostUrl,
            apiKey: this.config.apiKey,
            queryParamsStringify: utils_1.queryParamsStringify,
            headers: __assign({
                'User-Agent': (0, utils_1.buildUserAgent)(this.config)
            }, headers),
            fetchApi: (0, utils_1.getFetch)(this.config),
            middleware: middleware_1.middleware
        };
        var indexConfiguration = new pinecone_generated_ts_fetch_1.Configuration(indexConfigurationParameters);
        var dataOperations = new pinecone_generated_ts_fetch_1.DataPlaneApi(indexConfiguration);
        return dataOperations;
    };
    return DataOperationsProvider;
}();
exports.DataOperationsProvider = DataOperationsProvider; //# sourceMappingURL=dataOperationsProvider.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/data/list.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __assign = this && this.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.listPaginated = void 0;
var validator_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/validator.js [app-ssr] (ecmascript)");
var typebox_1 = __turbopack_require__("[project]/node_modules/@sinclair/typebox/typebox.js [app-ssr] (ecmascript)");
var ListOptionsSchema = typebox_1.Type.Object({
    prefix: typebox_1.Type.Optional(typebox_1.Type.String({
        minLength: 1
    })),
    limit: typebox_1.Type.Optional(typebox_1.Type.Number()),
    paginationToken: typebox_1.Type.Optional(typebox_1.Type.String({
        minLength: 1
    }))
}, {
    additionalProperties: false
});
var listPaginated = function(apiProvider, namespace) {
    var validator = (0, validator_1.buildConfigValidator)(ListOptionsSchema, 'listPaginated');
    return function(options) {
        return __awaiter(void 0, void 0, void 0, function() {
            var listRequest, api;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (options) {
                            validator(options);
                        }
                        listRequest = __assign(__assign({}, options), {
                            namespace: namespace
                        });
                        return [
                            4 /*yield*/ ,
                            apiProvider.provide()
                        ];
                    case 1:
                        api = _a.sent();
                        return [
                            4 /*yield*/ ,
                            api.list(listRequest)
                        ];
                    case 2:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
};
exports.listPaginated = listPaginated; //# sourceMappingURL=list.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/data/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Index = exports.PineconeConfigurationSchema = void 0;
var upsert_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/upsert.js [app-ssr] (ecmascript)");
var fetch_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/fetch.js [app-ssr] (ecmascript)");
var update_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/update.js [app-ssr] (ecmascript)");
var query_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/query.js [app-ssr] (ecmascript)");
var deleteOne_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/deleteOne.js [app-ssr] (ecmascript)");
var deleteMany_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/deleteMany.js [app-ssr] (ecmascript)");
var deleteAll_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/deleteAll.js [app-ssr] (ecmascript)");
var describeIndexStats_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/describeIndexStats.js [app-ssr] (ecmascript)");
var dataOperationsProvider_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/dataOperationsProvider.js [app-ssr] (ecmascript)");
var list_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/list.js [app-ssr] (ecmascript)");
var types_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/types.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "PineconeConfigurationSchema", {
    enumerable: true,
    get: function() {
        return types_1.PineconeConfigurationSchema;
    }
});
/**
 * The `Index` class is used to perform data operations (upsert, query, etc)
 * against Pinecone indexes. Typically it will be instantiated via a `Pinecone`
 * client instance that has already built the required configuration from a
 * combination of sources.
 *
 * ```typescript
 * import { Pinecone } from '@pinecone-database/pinecone';
 * const pc = new Pinecone()
 *
 * const index = pc.index('index-name')
 * ```
 *
 * ### Targeting an index, with user-defined Metadata types
 *
 * If you are storing metadata alongside your vector values inside your Pinecone records, you can pass a type parameter to `index()` in order to get proper TypeScript typechecking when upserting and querying data.
 *
 * ```typescript
 * import { Pinecone } from '@pinecone-database/pinecone';
 * const pc = new Pinecone();
 *
 * type MovieMetadata = {
 *   title: string,
 *   runtime: numbers,
 *   genre: 'comedy' | 'horror' | 'drama' | 'action'
 * }
 *
 * // Specify a custom metadata type while targeting the index
 * const index = pc.index<MovieMetadata>('test-index');
 *
 * // Now you get type errors if upserting malformed metadata
 * await index.upsert([{
 *   id: '1234',
 *   values: [
 *     .... // embedding values
 *   ],
 *   metadata: {
 *     genre: 'Gone with the Wind',
 *     runtime: 238,
 *     genre: 'drama',
 *
 *     // @ts-expect-error because category property not in MovieMetadata
 *     category: 'classic'
 *   }
 * }])
 *
 * const results = await index.query({
 *    vector: [
 *     ... // query embedding
 *    ],
 *    filter: { genre: { '$eq': 'drama' }}
 * })
 * const movie = results.matches[0];
 *
 * if (movie.metadata) {
 *   // Since we passed the MovieMetadata type parameter above,
 *   // we can interact with metadata fields without having to
 *   // do any typecasting.
 *   const { title, runtime, genre } = movie.metadata;
 *   console.log(`The best match in drama was ${title}`)
 * }
 * ```
 *
 * @typeParam T - The type of metadata associated with each record.
 */ var Index = function() {
    /**
     * Instantiation of Index is handled by {@link Pinecone}
     *
     * @example
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     *
     * const index = pc.index('my-index');
     * ```
     *
     * @constructor
     * @param indexName - The name of the index that will receive operations from this {@link Index} instance.
     * @param config - The configuration from the Pinecone client.
     * @param namespace - The namespace for the index.
     * @param indexHostUrl - An optional override for the host address used for data operations.
     * @param additionalHeaders - An optional object of additional header to send with each request.
     */ function Index(indexName, config, namespace, indexHostUrl, additionalHeaders) {
        if (namespace === void 0) {
            namespace = '';
        }
        this.config = config;
        this.target = {
            index: indexName,
            namespace: namespace,
            indexHostUrl: indexHostUrl
        };
        var apiProvider = new dataOperationsProvider_1.DataOperationsProvider(config, indexName, indexHostUrl, additionalHeaders);
        this._deleteAll = (0, deleteAll_1.deleteAll)(apiProvider, namespace);
        this._deleteMany = (0, deleteMany_1.deleteMany)(apiProvider, namespace);
        this._deleteOne = (0, deleteOne_1.deleteOne)(apiProvider, namespace);
        this._describeIndexStats = (0, describeIndexStats_1.describeIndexStats)(apiProvider);
        this._listPaginated = (0, list_1.listPaginated)(apiProvider, namespace);
        this._fetchCommand = new fetch_1.FetchCommand(apiProvider, namespace);
        this._queryCommand = new query_1.QueryCommand(apiProvider, namespace);
        this._updateCommand = new update_1.UpdateCommand(apiProvider, namespace);
        this._upsertCommand = new upsert_1.UpsertCommand(apiProvider, namespace);
    }
    /**
     * Delete all records from the targeted namespace. To delete all records from across all namespaces,
     * delete the index using {@link Pinecone.deleteIndex} and create a new one using {@link Pinecone.createIndex}.
     *
     * @example
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     * const index = pc.index('my-index');
     *
     * await index.describeIndexStats();
     * // {
     * //  namespaces: {
     * //    '': { recordCount: 10 },
     * //   foo: { recordCount: 1 }
     * //   },
     * //   dimension: 8,
     * //   indexFullness: 0,
     * //   totalRecordCount: 11
     * // }
     *
     * await index.deleteAll();
     *
     * // Records from namespace 'foo' are now deleted. Records in other namespaces are not modified.
     * await index.describeIndexStats();
     * // {
     * //  namespaces: {
     * //   foo: { recordCount: 1 }
     * //   },
     * //   dimension: 8,
     * //   indexFullness: 0,
     * //   totalRecordCount: 1
     * // }
     *
     * await index.deleteAll();
     * // Since no namespace was specified, records in default namespace '' are now deleted.
     *
     * ```
     * @throws {@link Errors.PineconeConnectionError} when network problems or an outage of Pinecone's APIs prevent the request from being completed.
     * @returns A promise that resolves when the delete is completed.
     */ Index.prototype.deleteAll = function() {
        return this._deleteAll();
    };
    /**
     * Delete records from the index by either an array of ids, or a filter object.
     * See [Filtering with metadata](https://docs.pinecone.io/docs/metadata-filtering#deleting-vectors-by-metadata-filter)
     * for more on deleting records with filters.
     *
     * @example
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     * const index = pc.index('my-index');
     *
     * await index.deleteMany(['record-1', 'record-2']);
     *
     * // or
     * await index.deleteMany({ genre: 'classical' });
     * ```
     * @param options - An array of record id values or a filter object.
     * @throws {@link Errors.PineconeArgumentError} when arguments passed to the method fail a runtime validation.
     * @throws {@link Errors.PineconeConnectionError} when network problems or an outage of Pinecone's APIs prevent the request from being completed.
     * @returns A promise that resolves when the delete is completed.
     */ Index.prototype.deleteMany = function(options) {
        return this._deleteMany(options);
    };
    /**
     * Delete a record from the index by id.
     *
     * @example
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     * const index = pc.index('my-index');
     *
     * await index.deleteOne('record-1');
     * ```
     * @param id - The id of the record to delete.
     * @throws {@link Errors.PineconeArgumentError} when arguments passed to the method fail a runtime validation.
     * @throws {@link Errors.PineconeConnectionError} when network problems or an outage of Pinecone's APIs prevent the request from being completed.
     * @returns A promise that resolves when the delete is completed.
     */ Index.prototype.deleteOne = function(id) {
        return this._deleteOne(id);
    };
    /**
     * Describes the index's statistics such as total number of records, records per namespace, and the index's dimension size.
     *
     * @example
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     * const index = pc.index('my-index');
     *
     * await index.describeIndexStats();
     * // {
     * //  namespaces: {
     * //    '': { recordCount: 10 }
     * //    foo: { recordCount: 2000 },
     * //    bar: { recordCount: 2000 }
     * //   },
     * //   dimension: 1536,
     * //   indexFullness: 0,
     * //   totalRecordCount: 4010
     * // }
     * ```
     * @throws {@link Errors.PineconeConnectionError} when network problems or an outage of Pinecone's APIs prevent the request from being completed.
     * @returns A promise that resolves with the {@link IndexStatsDescription} value when the operation is completed.
     */ Index.prototype.describeIndexStats = function() {
        return this._describeIndexStats();
    };
    /**
     * The `listPaginated` operation finds vectors based on an id prefix within a single namespace.
     * It returns matching ids in a paginated form, with a pagination token to fetch the next page of results.
     * This id list can then be passed to fetch or delete options to perform operations on the matching records.
     * See [Get record IDs](https://docs.pinecone.io/docs/get-record-ids) for guidance and examples.
     *
     * @example
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     *
     * const index = pc.index('my-index').namespace('my-namespace');
     *
     * const results = await index.listPaginated({ prefix: 'doc1#' });
     * console.log(results);
     * // {
     * //   vectors: [
     * //     { id: 'doc1#01' }, { id: 'doc1#02' }, { id: 'doc1#03' },
     * //     { id: 'doc1#04' }, { id: 'doc1#05' },  { id: 'doc1#06' },
     * //     { id: 'doc1#07' }, { id: 'doc1#08' }, { id: 'doc1#09' },
     * //     ...
     * //   ],
     * //   pagination: {
     * //     next: 'eyJza2lwX3Bhc3QiOiJwcmVUZXN0LS04MCIsInByZWZpeCI6InByZVRlc3QifQ=='
     * //   },
     * //   namespace: 'my-namespace',
     * //   usage: { readUnits: 1 }
     * // }
     *
     * // Fetch the next page of results
     * await index.listPaginated({ prefix: 'doc1#', paginationToken: results.pagination.next});
     * ```
     *
     * > ⚠️ **Note:**
     * >
     * > `listPaginated` is supported only for serverless indexes.
     *
     * @param options - The {@link ListOptions} for the operation.
     * @returns - A promise that resolves with the {@link ListResponse} when the operation is completed.
     * @throws {@link Errors.PineconeConnectionError} when invalid environment, project id, or index name is configured.
     * @throws {@link Errors.PineconeArgumentError} when invalid arguments are passed.
     */ Index.prototype.listPaginated = function(options) {
        return this._listPaginated(options);
    };
    /**
     * Returns an {@link Index} targeting the specified namespace. By default, all operations take place inside the default namespace `''`.
     *
     * @example
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     *
     * // Create an Index client instance scoped to operate on a
     * // single namespace
     * const ns = pc.index('my-index').namespace('my-namespace');
     *
     * // Now operations against this intance only affect records in
     * // the targeted namespace
     * ns.upsert([
     *   // ... records to upsert in namespace 'my-namespace'
     * ])
     *
     * ns.query({
     *   // ... query records in namespace 'my-namespace'
     * })
     * ```
     * This `namespace()` method will inherit custom metadata types if you are chaining the call off an {@link Index} client instance that is typed with a user-specified metadata type. See {@link Pinecone.index} for more info.
     *
     * @param namespace - The namespace to target within the index. All operations performed with the returned client instance will be scoped only to the targeted namespace.
     * @returns An {@link Index} object that can be used to perform data operations scoped to the specified namespace.
     */ Index.prototype.namespace = function(namespace) {
        return new Index(this.target.index, this.config, namespace, this.target.indexHostUrl);
    };
    /**
     * Upsert records to the index.
     *
     * @example
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     * const index = pc.index('my-index');
     *
     * await index.upsert([{
     *  id: 'record-1',
     *  values: [0.176, 0.345, 0.263],
     * },{
     *  id: 'record-2',
     *  values: [0.176, 0.345, 0.263],
     * }])
     * ```
     *
     * @param data - An array of {@link PineconeRecord} objects to upsert.
     * @throws {@link Errors.PineconeArgumentError} when arguments passed to the method fail a runtime validation.
     * @throws {@link Errors.PineconeConnectionError} when network problems or an outage of Pinecone's APIs prevent the request from being completed.
     * @returns A promise that resolves when the upsert is completed.
     */ Index.prototype.upsert = function(data) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this._upsertCommand.run(data)
                        ];
                    case 1:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    /**
     * Fetch records from the index.
     *
     * @example
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     * const index = pc.index('my-index');
     *
     * await index.fetch(['record-1', 'record-2']);
     * ```
     * @param options - The {@link FetchOptions} for the operation.
     * @throws {@link Errors.PineconeArgumentError} when arguments passed to the method fail a runtime validation.
     * @throws {@link Errors.PineconeConnectionError} when network problems or an outage of Pinecone's APIs prevent the request from being completed.
     * @returns A promise that resolves with the {@link FetchResponse} when the fetch is completed.
     */ Index.prototype.fetch = function(options) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this._fetchCommand.run(options)
                        ];
                    case 1:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    /**
     * Query records from the index. Query is used to find the `topK` records in the index whose vector values are most
     * similar to the vector values of the query according to the distance metric you have configured for your index.
     * See [Query data](https://docs.pinecone.io/docs/query-data) for more on querying.
     *
     * @example
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     * const index = pc.index('my-index');
     *
     * await index.query({ topK: 3, id: 'record-1'});
     *
     * // or
     * await index.query({ topK: 3, vector: [0.176, 0.345, 0.263] });
     * ```
     *
     * @param options - The {@link QueryOptions} for the operation.
     * @throws {@link Errors.PineconeArgumentError} when arguments passed to the method fail a runtime validation.
     * @throws {@link Errors.PineconeConnectionError} when network problems or an outage of Pinecone's APIs prevent the request from being completed.
     * @returns A promise that resolves with the {@link QueryResponse} when the query is completed.
     */ Index.prototype.query = function(options) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this._queryCommand.run(options)
                        ];
                    case 1:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    /**
     * Update a record in the index by id.
     *
     * @example
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     * const index = pc.index('imdb-movies');
     *
     * await index.update({
     *   id: '18593',
     *   metadata: { genre: 'romance' },
     * });
     * ```
     *
     * @param options - The {@link UpdateOptions} for the operation.
     * @throws {@link Errors.PineconeArgumentError} when arguments passed to the method fail a runtime validation.
     * @throws {@link Errors.PineconeConnectionError} when network problems or an outage of Pinecone's APIs prevent the request from being completed.
     * @returns A promise that resolves when the update is completed.
     */ Index.prototype.update = function(options) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this._updateCommand.run(options)
                        ];
                    case 1:
                        return [
                            2 /*return*/ ,
                            _a.sent()
                        ];
                }
            });
        });
    };
    return Index;
}();
exports.Index = Index; //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/pinecone.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    "TURBOPACK unreachable";
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Pinecone = void 0;
var control_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/control/index.js [app-ssr] (ecmascript)");
var indexHostSingleton_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/indexHostSingleton.js [app-ssr] (ecmascript)");
var errors_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/index.js [app-ssr] (ecmascript)");
var data_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/index.js [app-ssr] (ecmascript)");
var validator_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/validator.js [app-ssr] (ecmascript)");
/**
 * The `Pinecone` class is the main entrypoint to this sdk. You will use
 * instances of it to create and manage indexes as well as perform data
 * operations on those indexes after they are created.
 *
 * ### Initializing the client
 *
 * There is one piece of configuration required to use the Pinecone client: an API key. This value can be passed using environment variables or in code through a configuration object. Find your API key in the console dashboard at [https://app.pinecone.io](https://app.pinecone.io)
 *
 * ### Using environment variables
 *
 * The environment variables used to configure the client are the following:
 *
 * ```bash
 * export PINECONE_API_KEY="your_api_key"
 * export PINECONE_CONTROLLER_HOST="your_controller_host"
 * ```
 *
 * When these environment variables are set, the client constructor does not require any additional arguments.
 *
 * ```typescript
 * import { Pinecone } from '@pinecone-database/pinecone';
 *
 * const pc = new Pinecone();
 * ```
 *
 * ### Using a configuration object
 *
 * If you prefer to pass configuration in code, the constructor accepts a config object containing the `apiKey` and `environment` values. This
 * could be useful if your application needs to interact with multiple projects, each with a different configuration.
 *
 * ```typescript
 * import { Pinecone } from '@pinecone-database/pinecone';
 *
 * const pc = new Pinecone({
 *   apiKey: 'your_api_key',
 * });
 *
 * ```
 *
 * See {@link PineconeConfiguration} for a full description of available configuration options.
 */ var Pinecone = function() {
    /**
     * @example
     * ```
     * import { Pinecone } from '@pinecone-database/pinecone';
     *
     * const pc = new Pinecone({
     *  apiKey: 'my-api-key',
     * });
     * ```
     *
     * @constructor
     * @param options - The configuration options for the Pinecone client: {@link PineconeConfiguration}.
     */ function Pinecone(options) {
        if (options === undefined) {
            options = this._readEnvironmentConfig();
        }
        this._validateConfig(options);
        this.config = options;
        var api = (0, control_1.indexOperationsBuilder)(this.config);
        this._configureIndex = (0, control_1.configureIndex)(api);
        this._createCollection = (0, control_1.createCollection)(api);
        this._createIndex = (0, control_1.createIndex)(api);
        this._describeCollection = (0, control_1.describeCollection)(api);
        this._deleteCollection = (0, control_1.deleteCollection)(api);
        this._describeIndex = (0, control_1.describeIndex)(api);
        this._deleteIndex = (0, control_1.deleteIndex)(api);
        this._listCollections = (0, control_1.listCollections)(api);
        this._listIndexes = (0, control_1.listIndexes)(api);
    }
    /**
     * @internal
     * This method is used by {@link Pinecone.constructor} to read configuration from environment variables.
     *
     * It looks for the following environment variables:
     * - `PINECONE_API_KEY`
     * - `PINECONE_CONTROLLER_HOST`
     *
     * @returns A {@link PineconeConfiguration} object populated with values found in environment variables.
     */ Pinecone.prototype._readEnvironmentConfig = function() {
        if (typeof process === 'undefined' || !process || !process.env) {
            throw new errors_1.PineconeEnvironmentVarsNotSupportedError('Your execution environment does not support reading environment variables from process.env, so a configuration object is required when calling new Pinecone()');
        }
        var environmentConfig = {};
        var requiredEnvVarMap = {
            apiKey: 'PINECONE_API_KEY'
        };
        var missingVars = [];
        for(var _i = 0, _a = Object.entries(requiredEnvVarMap); _i < _a.length; _i++){
            var _b = _a[_i], key = _b[0], envVar = _b[1];
            var value = process.env[envVar] || '';
            if (!value) {
                missingVars.push(envVar);
            }
            environmentConfig[key] = value;
        }
        if (missingVars.length > 0) {
            throw new errors_1.PineconeConfigurationError("Since you called 'new Pinecone()' with no configuration object, we attempted to find client configuration in environment variables but the required environment variables were not set. Missing variables: ".concat(missingVars.join(', '), "."));
        }
        var optionalEnvVarMap = {
            controllerHostUrl: 'PINECONE_CONTROLLER_HOST'
        };
        for(var _c = 0, _d = Object.entries(optionalEnvVarMap); _c < _d.length; _c++){
            var _e = _d[_c], key = _e[0], envVar = _e[1];
            var value = process.env[envVar];
            if (value !== undefined) {
                environmentConfig[key] = value;
            }
        }
        return environmentConfig;
    };
    /**
     * Describe a Pinecone index
     *
     * @example
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     *
     * const indexModel = await pc.describeIndex('my-index')
     * console.log(indexModel)
     * // {
     * //     name: 'sample-index-1',
     * //     dimension: 3,
     * //     metric: 'cosine',
     * //     host: 'sample-index-1-1390950.svc.apw5-4e34-81fa.pinecone.io',
     * //     spec: {
     * //           pod: undefined,
     * //           serverless: {
     * //               cloud: 'aws',
     * //               region: 'us-west-2'
     * //           }
     * //     },
     * //     status: {
     * //           ready: true,
     * //           state: 'Ready'
     * //     }
     * // }
     * ```
     *
     * @param indexName - The name of the index to describe.
     * @throws {@link Errors.PineconeArgumentError} when arguments passed to the method fail a runtime validation.
     * @throws {@link Errors.PineconeConnectionError} when network problems or an outage of Pinecone's APIs prevent the request from being completed.
     * @returns A promise that resolves to {@link IndexModel}.
     */ Pinecone.prototype.describeIndex = function(indexName) {
        return __awaiter(this, void 0, void 0, function() {
            var indexModel;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this._describeIndex(indexName)
                        ];
                    case 1:
                        indexModel = _a.sent();
                        // For any describeIndex calls we want to update the IndexHostSingleton cache.
                        // This prevents unneeded calls to describeIndex for resolving the host for vector operations.
                        if (indexModel.host) {
                            indexHostSingleton_1.IndexHostSingleton._set(this.config, indexName, indexModel.host);
                        }
                        return [
                            2 /*return*/ ,
                            Promise.resolve(indexModel)
                        ];
                }
            });
        });
    };
    /**
     * List all Pinecone indexes
     *
     * @example
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     *
     * const indexList = await pc.listIndexes()
     * console.log(indexList)
     * // {
     * //     indexes: [
     * //       {
     * //         name: "sample-index-1",
     * //         dimension: 3,
     * //         metric: "cosine",
     * //         host: "sample-index-1-1234567.svc.apw5-2e18-32fa.pinecone.io",
     * //         spec: {
     * //           serverless: {
     * //             cloud: "aws",
     * //             region: "us-west-2"
     * //           }
     * //         },
     * //         status: {
     * //           ready: true,
     * //           state: "Ready"
     * //         }
     * //       },
     * //       {
     * //         name: "sample-index-2",
     * //         dimension: 3,
     * //         metric: "cosine",
     * //         host: "sample-index-2-1234567.svc.apw2-5e76-83fa.pinecone.io",
     * //         spec: {
     * //           serverless: {
     * //             cloud: "aws",
     * //             region: "us-west-2"
     * //           }
     * //         },
     * //         status: {
     * //           ready: true,
     * //           state: "Ready"
     * //         }
     * //       }
     * //     ]
     * //   }
     * ```
     *
     * @throws {@link Errors.PineconeArgumentError} when arguments passed to the method fail a runtime validation.
     * @throws {@link Errors.PineconeConnectionError} when network problems or an outage of Pinecone's APIs prevent the request from being completed.
     * @returns A promise that resolves to {@link IndexList}.
     */ Pinecone.prototype.listIndexes = function() {
        return __awaiter(this, void 0, void 0, function() {
            var indexList, i, index;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this._listIndexes()
                        ];
                    case 1:
                        indexList = _a.sent();
                        // For any listIndexes calls we want to update the IndexHostSingleton cache.
                        // This prevents unneeded calls to describeIndex for resolving the host for index operations.
                        if (indexList.indexes && indexList.indexes.length > 0) {
                            for(i = 0; i < indexList.indexes.length; i++){
                                index = indexList.indexes[i];
                                indexHostSingleton_1.IndexHostSingleton._set(this.config, index.name, index.host);
                            }
                        }
                        return [
                            2 /*return*/ ,
                            Promise.resolve(indexList)
                        ];
                }
            });
        });
    };
    /**
     * Creates a new index.
     *
     * @example
     * The minimum required configuration to create an index is the index `name`, `dimension`, and `spec`.
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     *
     * const pc = new Pinecone();
     *
     * await pc.createIndex({ name: 'my-index', dimension: 128, spec: { serverless: { cloud: 'aws', region: 'us-west-2' }}})
     * ```
     *
     * @example
     * The `spec` object defines how the index should be deployed. For serverless indexes, you define only the cloud and region where the index should be hosted.
     * For pod-based indexes, you define the environment where the index should be hosted, the pod type and size to use, and other index characteristics.
     * In a different example, you can create a pod-based index by specifying the `pod` spec object with the `environment`, `pods`, `podType`, and `metric` properties.
     * For more information on creating indexes, see [Understanding indexes](https://docs.pinecone.io/guides/indexes/understanding-indexes).
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     *
     * await pc.createIndex({
     *  name: 'my-index',
     *  dimension: 1536,
     *  metric: 'cosine',
     *  spec: {
     *    pod: {
     *      environment: 'us-west-2-gcp',
     *      pods: 1,
     *      podType: 'p1.x1'
     *    }
     *   }
     * })
     * ```
     *
     * @example
     * If you would like to create the index only if it does not already exist, you can use the `suppressConflicts` boolean option.
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     *
     * await pc.createIndex({
     *   name: 'my-index',
     *   dimension: 1536,
     *   spec: {
     *     serverless: {
     *       cloud: 'aws',
     *       region: 'us-west-2'
     *     }
     *   },
     *   suppressConflicts: true
     * })
     * ```
     *
     * @example
     * If you plan to begin upserting immediately after index creation is complete, you should use the `waitUntilReady` option. Otherwise, the index may not be ready to receive data operations when you attempt to upsert.
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     *
     * await pc.createIndex({
     *  name: 'my-index',
     *   spec: {
     *     serverless: {
     *       cloud: 'aws',
     *       region: 'us-west-2'
     *     }
     *   },
     *  waitUntilReady: true
     * });
     *
     * const records = [
     *   // PineconeRecord objects with your embedding values
     * ]
     * await pc.index('my-index').upsert(records)
     * ```
     *
     * @example
     * By default all metadata fields are indexed when records are upserted with metadata, but if you want to improve performance you can specify the specific fields you want to index. This example is showing a few hypothetical metadata fields, but the values you'd use depend on what metadata you plan to store with records in your Pinecone index.
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     *
     * await pc.createIndex({
     *   name: 'my-index',
     *   dimension: 1536,
     *   spec: {
     *     serverless: {
     *       cloud: 'aws',
     *       region: 'us-west-2',
     *       metadataConfig: { 'indexed' : ['productName', 'productDescription'] }
     *     }
     *   },
     * })
     * ```
     *
     * @param options - The index configuration.
     *
     * @see [Distance metrics](https://docs.pinecone.io/docs/indexes#distance-metrics)
     * @see [Pod types and sizes](https://docs.pinecone.io/docs/indexes#pods-pod-types-and-pod-sizes)
     * @throws {@link Errors.PineconeArgumentError} when arguments passed to the method fail a runtime validation.
     * @throws {@link Errors.PineconeBadRequestError} when index creation fails due to invalid parameters being specified or other problem such as project quotas limiting the creation of any additional indexes.
     * @throws {@link Errors.PineconeConnectionError} when network problems or an outage of Pinecone's APIs prevent the request from being completed.
     * @throws {@link Errors.PineconeConflictError} when attempting to create an index using a name that already exists in your project.
     * @returns A promise that resolves to {@link IndexModel} when the request to create the index is completed. Note that the index is not immediately ready to use. You can use the {@link describeIndex} function to check the status of the index.
     */ Pinecone.prototype.createIndex = function(options) {
        return this._createIndex(options);
    };
    /**
     * Deletes an index
     *
     * @example
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     *
     * await pc.deleteIndex('my-index')
     * ```
     *
     * @param indexName - The name of the index to delete.
     * @throws {@link Errors.PineconeConnectionError} when network problems or an outage of Pinecone's APIs prevent the request from being completed.
     * @throws {@link Errors.PineconeArgumentError} when arguments passed to the method fail a runtime validation.
     * @returns A promise that resolves when the request to delete the index is completed.
     */ Pinecone.prototype.deleteIndex = function(indexName) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        return [
                            4 /*yield*/ ,
                            this._deleteIndex(indexName)
                        ];
                    case 1:
                        _a.sent();
                        // When an index is deleted, we need to evict the host from the IndexHostSingleton cache.
                        indexHostSingleton_1.IndexHostSingleton._delete(this.config, indexName);
                        return [
                            2 /*return*/ ,
                            Promise.resolve()
                        ];
                }
            });
        });
    };
    /**
     * Configure an index
     *
     * Use this method to update configuration on an existing index. You can update the number of replicas, and pod type.
     *
     * @example
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     *
     * await pc.configureIndex('my-index', { replicas: 2, podType: 'p1.x2' })
     * ```
     *
     * @param indexName - The name of the index to configure.
     * @param options - The configuration properties you would like to update
     * @throws {@link Errors.PineconeArgumentError} when arguments passed to the method fail a runtime validation.
     * @throws {@link Errors.PineconeConnectionError} when network problems or an outage of Pinecone's APIs prevent the request from being completed.
     * @returns A promise that resolves to {@link IndexModel} when the request to configure the index is completed.
     */ Pinecone.prototype.configureIndex = function(indexName, options) {
        return this._configureIndex(indexName, options);
    };
    /**
     * Create a new collection from an existing index
     *
     * @example
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     *
     * const indexList = await pc.listIndexes()
     * const indexName = indexList.indexes[0].name;
     * await pc.createCollection({
     *  name: 'my-collection',
     *  source: indexName
     * })
     * ```
     *
     * @param options - The collection configuration.
     * @param options.name - The name of the collection. Must be unique within the project and contain alphanumeric and hyphen characters. The name must start and end with alphanumeric characters.
     * @param options.source - The name of the index to use as the source for the collection.
     * @throws {@link Errors.PineconeArgumentError} when arguments passed to the method fail a runtime validation.
     * @throws {@link Errors.PineconeConnectionError} when network problems or an outage of Pinecone's APIs prevent the request from being completed.
     * @returns a promise that resolves to {@link CollectionModel} when the request to create the collection is completed.
     */ Pinecone.prototype.createCollection = function(options) {
        return this._createCollection(options);
    };
    /**
     * List all collections in a project
     *
     * @example
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     *
     * await pc.listCollections()
     * ```
     *
     * @throws {@link Errors.PineconeArgumentError} when arguments passed to the method fail a runtime validation.
     * @throws {@link Errors.PineconeConnectionError} when network problems or an outage of Pinecone's APIs prevent the request from being completed.
     * @returns A promise that resolves to {@link CollectionList}.
     */ Pinecone.prototype.listCollections = function() {
        return this._listCollections();
    };
    /**
     * Delete a collection by collection name
     *
     * @example
     * ```
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     *
     * const collectionList = await pc.listCollections()
     * const collectionName = collectionList.collections[0].name;
     * await pc.deleteCollection(collectionName)
     * ```
     *
     * @param collectionName - The name of the collection to delete.
     * @throws {@link Errors.PineconeArgumentError} when arguments passed to the method fail a runtime validation.
     * @throws {@link Errors.PineconeConnectionError} when network problems or an outage of Pinecone's APIs prevent the request from being completed.
     * @returns A promise that resolves when the request to delete the collection is completed.
     */ Pinecone.prototype.deleteCollection = function(collectionName) {
        return this._deleteCollection(collectionName);
    };
    /**
     * Describe a collection
     *
     * @example
     * ```js
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone();
     *
     * await pc.describeCollection('my-collection')
     * ```
     *
     * @param collectionName - The name of the collection to describe.
     * @throws {@link Errors.PineconeArgumentError} when arguments passed to the method fail a runtime validation.
     * @throws {@link Errors.PineconeConnectionError} when network problems or an outage of Pinecone's APIs prevent the request from being completed.
     * @returns A promise that resolves to a {@link CollectionModel}.
     */ Pinecone.prototype.describeCollection = function(collectionName) {
        return this._describeCollection(collectionName);
    };
    /** @internal */ Pinecone.prototype._validateConfig = function(options) {
        (0, validator_1.buildValidator)('The client configuration', data_1.PineconeConfigurationSchema)(options);
    };
    /**
     * @returns The configuration object that was passed to the Pinecone constructor.
     */ Pinecone.prototype.getConfig = function() {
        return this.config;
    };
    /**
     * Targets a specific index for performing data operations.
     *
     * ```typescript
     * import { Pinecone } from '@pinecone-database/pinecone';
     * const pc = new Pinecone()
     *
     * const index = pc.index('index-name')
     * ```
     *
     * #### Targeting an index, with user-defined Metadata types
     *
     * If you are storing metadata alongside your vector values inside your Pinecone records, you can pass a type parameter to `index()` in order to get proper TypeScript typechecking when upserting and querying data.
     *
     * ```typescript
     * import { Pinecone } from '@pinecone-database/pinecone';
     *
     * const pc = new Pinecone();
     *
     * type MovieMetadata = {
     *   title: string,
     *   runtime: numbers,
     *   genre: 'comedy' | 'horror' | 'drama' | 'action'
     * }
     *
     * // Specify a custom metadata type while targeting the index
     * const index = pc.index<MovieMetadata>('test-index');
     *
     * // Now you get type errors if upserting malformed metadata
     * await index.upsert([{
     *   id: '1234',
     *   values: [
     *     .... // embedding values
     *   ],
     *   metadata: {
     *     genre: 'Gone with the Wind',
     *     runtime: 238,
     *     genre: 'drama',
     *
     *     // @ts-expect-error because category property not in MovieMetadata
     *     category: 'classic'
     *   }
     * }])
     *
     * const results = await index.query({
     *    vector: [
     *     ... // query embedding
     *    ],
     *    filter: { genre: { '$eq': 'drama' }}
     * })
     * const movie = results.matches[0];
     *
     * if (movie.metadata) {
     *   // Since we passed the MovieMetadata type parameter above,
     *   // we can interact with metadata fields without having to
     *   // do any typecasting.
     *   const { title, runtime, genre } = movie.metadata;
     *   console.log(`The best match in drama was ${title}`)
     * }
     * ```
     *
     * @typeParam T - The type of metadata associated with each record.
     * @param indexName - The name of the index to target.
     * @param indexHostUrl - An optional host url to use for operations against this index. If not provided, the host url will be resolved by calling {@link describeIndex}.
     * @param additionalHeaders - An optional object containing additional headers to pass with each index request.
     * @typeParam T - The type of the metadata object associated with each record.
     * @returns An {@link Index} object that can be used to perform data operations.
     */ Pinecone.prototype.index = function(indexName, indexHostUrl, additionalHeaders) {
        return new data_1.Index(indexName, this.config, undefined, indexHostUrl, additionalHeaders);
    };
    /**
     * {@inheritDoc index}
     */ // Alias method to match the Python SDK capitalization
    Pinecone.prototype.Index = function(indexName, indexHostUrl, additionalHeaders) {
        return this.index(indexName, indexHostUrl, additionalHeaders);
    };
    return Pinecone;
}();
exports.Pinecone = Pinecone; //# sourceMappingURL=pinecone.js.map
}}),
"[project]/node_modules/@pinecone-database/pinecone/dist/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
            enumerable: true,
            get: function() {
                return m[k];
            }
        };
    }
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var __importStar = this && this.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Errors = exports.Index = exports.Pinecone = void 0;
var pinecone_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/pinecone.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "Pinecone", {
    enumerable: true,
    get: function() {
        return pinecone_1.Pinecone;
    }
});
var data_1 = __turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/data/index.js [app-ssr] (ecmascript)");
Object.defineProperty(exports, "Index", {
    enumerable: true,
    get: function() {
        return data_1.Index;
    }
});
exports.Errors = __importStar(__turbopack_require__("[project]/node_modules/@pinecone-database/pinecone/dist/errors/index.js [app-ssr] (ecmascript)")); //# sourceMappingURL=index.js.map
}}),

};

//# sourceMappingURL=node_modules_%40pinecone-database_pinecone_dist_7cfde9._.js.map